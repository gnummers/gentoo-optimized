
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

/* Generated by glib-mkenums. Do not edit */

#ifndef __NM_UTILS_ENUM_TYPES_H__
#define __NM_UTILS_ENUM_TYPES_H__

#include <glib-object.h>

G_BEGIN_DECLS
GType nm_connection_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CONNECTION_ERROR (nm_connection_error_get_type ())
GType nm_setting_802_1x_ck_format_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_CK_FORMAT (nm_setting_802_1x_ck_format_get_type ())
GType nm_setting_802_1x_ck_scheme_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_CK_SCHEME (nm_setting_802_1x_ck_scheme_get_type ())
GType nm_setting_802_1x_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_ERROR (nm_setting_802_1x_error_get_type ())
GType nm_setting_adsl_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_ADSL_ERROR (nm_setting_adsl_error_get_type ())
GType nm_setting_bluetooth_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_BLUETOOTH_ERROR (nm_setting_bluetooth_error_get_type ())
GType nm_setting_bond_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_BOND_ERROR (nm_setting_bond_error_get_type ())
GType nm_setting_bridge_port_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_BRIDGE_PORT_ERROR (nm_setting_bridge_port_error_get_type ())
GType nm_setting_bridge_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_BRIDGE_ERROR (nm_setting_bridge_error_get_type ())
GType nm_setting_cdma_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CDMA_ERROR (nm_setting_cdma_error_get_type ())
GType nm_setting_connection_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CONNECTION_ERROR (nm_setting_connection_error_get_type ())
GType nm_setting_dcb_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_DCB_ERROR (nm_setting_dcb_error_get_type ())
GType nm_setting_dcb_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_DCB_FLAGS (nm_setting_dcb_flags_get_type ())
GType nm_setting_generic_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_GENERIC_ERROR (nm_setting_generic_error_get_type ())
GType nm_setting_gsm_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_GSM_ERROR (nm_setting_gsm_error_get_type ())
GType nm_setting_gsm_network_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_GSM_NETWORK_TYPE (nm_setting_gsm_network_type_get_type ())
GType nm_setting_gsm_network_band_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_GSM_NETWORK_BAND (nm_setting_gsm_network_band_get_type ())
GType nm_setting_infiniband_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_INFINIBAND_ERROR (nm_setting_infiniband_error_get_type ())
GType nm_setting_ip4_config_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_IP4_CONFIG_ERROR (nm_setting_ip4_config_error_get_type ())
GType nm_setting_ip6_config_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_IP6_CONFIG_ERROR (nm_setting_ip6_config_error_get_type ())
GType nm_setting_ip6_config_privacy_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_IP6_CONFIG_PRIVACY (nm_setting_ip6_config_privacy_get_type ())
GType nm_setting_olpc_mesh_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_OLPC_MESH_ERROR (nm_setting_olpc_mesh_error_get_type ())
GType nm_setting_ppp_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_PPP_ERROR (nm_setting_ppp_error_get_type ())
GType nm_setting_pppoe_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_PPPOE_ERROR (nm_setting_pppoe_error_get_type ())
GType nm_setting_serial_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_SERIAL_ERROR (nm_setting_serial_error_get_type ())
GType nm_setting_team_port_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_TEAM_PORT_ERROR (nm_setting_team_port_error_get_type ())
GType nm_setting_team_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_TEAM_ERROR (nm_setting_team_error_get_type ())
GType nm_setting_vlan_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_VLAN_ERROR (nm_setting_vlan_error_get_type ())
GType nm_vlan_priority_map_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VLAN_PRIORITY_MAP (nm_vlan_priority_map_get_type ())
GType nm_vlan_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VLAN_FLAGS (nm_vlan_flags_get_type ())
GType nm_setting_vpn_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_VPN_ERROR (nm_setting_vpn_error_get_type ())
GType nm_setting_wimax_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIMAX_ERROR (nm_setting_wimax_error_get_type ())
GType nm_setting_wired_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRED_ERROR (nm_setting_wired_error_get_type ())
GType nm_setting_wireless_security_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_SECURITY_ERROR (nm_setting_wireless_security_error_get_type ())
GType nm_wep_key_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_WEP_KEY_TYPE (nm_wep_key_type_get_type ())
GType nm_setting_wireless_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_ERROR (nm_setting_wireless_error_get_type ())
GType nm_setting_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_ERROR (nm_setting_error_get_type ())
GType nm_setting_secret_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_SECRET_FLAGS (nm_setting_secret_flags_get_type ())
GType nm_setting_compare_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_COMPARE_FLAGS (nm_setting_compare_flags_get_type ())
GType nm_setting_hash_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_HASH_FLAGS (nm_setting_hash_flags_get_type ())
GType nm_setting_diff_result_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_DIFF_RESULT (nm_setting_diff_result_get_type ())
GType nm_utils_security_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_UTILS_SECURITY_TYPE (nm_utils_security_type_get_type ())
G_END_DECLS

#endif /* __NM_UTILS_ENUM_TYPES_H__ */

/* Generated data ends here */

