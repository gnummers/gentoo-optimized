
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

/* Generated by glib-mkenums. Do not edit */

#ifndef __NM_CORE_ENUM_TYPES_H__
#define __NM_CORE_ENUM_TYPES_H__

#include <glib-object.h>

G_BEGIN_DECLS
GType nm_connection_serialization_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CONNECTION_SERIALIZATION_FLAGS (nm_connection_serialization_flags_get_type ())
GType nm_capability_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CAPABILITY (nm_capability_get_type ())
GType nm_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_STATE (nm_state_get_type ())
GType nm_connectivity_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CONNECTIVITY_STATE (nm_connectivity_state_get_type ())
GType nm_device_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_TYPE (nm_device_type_get_type ())
GType nm_device_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_CAPABILITIES (nm_device_capabilities_get_type ())
GType nm_device_wifi_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_WIFI_CAPABILITIES (nm_device_wifi_capabilities_get_type ())
GType nm_802_11_ap_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_802_11_AP_FLAGS (nm_802_11_ap_flags_get_type ())
GType nm_802_11_ap_security_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_802_11_AP_SECURITY_FLAGS (nm_802_11_ap_security_flags_get_type ())
GType nm_802_11_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_802_11_MODE (nm_802_11_mode_get_type ())
GType nm_bluetooth_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_BLUETOOTH_CAPABILITIES (nm_bluetooth_capabilities_get_type ())
GType nm_device_modem_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_MODEM_CAPABILITIES (nm_device_modem_capabilities_get_type ())
GType nm_wimax_nsp_network_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_WIMAX_NSP_NETWORK_TYPE (nm_wimax_nsp_network_type_get_type ())
GType nm_device_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_STATE (nm_device_state_get_type ())
GType nm_device_state_reason_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_STATE_REASON (nm_device_state_reason_get_type ())
GType nm_metered_get_type (void) G_GNUC_CONST;
#define NM_TYPE_METERED (nm_metered_get_type ())
GType nm_connection_multi_connect_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CONNECTION_MULTI_CONNECT (nm_connection_multi_connect_get_type ())
GType nm_active_connection_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_ACTIVE_CONNECTION_STATE (nm_active_connection_state_get_type ())
GType nm_active_connection_state_reason_get_type (void) G_GNUC_CONST;
#define NM_TYPE_ACTIVE_CONNECTION_STATE_REASON (nm_active_connection_state_reason_get_type ())
GType nm_secret_agent_get_secrets_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SECRET_AGENT_GET_SECRETS_FLAGS (nm_secret_agent_get_secrets_flags_get_type ())
GType nm_secret_agent_capabilities_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SECRET_AGENT_CAPABILITIES (nm_secret_agent_capabilities_get_type ())
GType nm_ip_tunnel_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_IP_TUNNEL_MODE (nm_ip_tunnel_mode_get_type ())
GType nm_checkpoint_create_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CHECKPOINT_CREATE_FLAGS (nm_checkpoint_create_flags_get_type ())
GType nm_settings_connection_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTINGS_CONNECTION_FLAGS (nm_settings_connection_flags_get_type ())
GType nm_activation_state_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_ACTIVATION_STATE_FLAGS (nm_activation_state_flags_get_type ())
GType nm_settings_update2_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTINGS_UPDATE2_FLAGS (nm_settings_update2_flags_get_type ())
GType nm_ternary_get_type (void) G_GNUC_CONST;
#define NM_TYPE_TERNARY (nm_ternary_get_type ())
GType nm_agent_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_AGENT_MANAGER_ERROR (nm_agent_manager_error_get_type ())
GType nm_connection_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CONNECTION_ERROR (nm_connection_error_get_type ())
GType nm_crypto_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_CRYPTO_ERROR (nm_crypto_error_get_type ())
GType nm_device_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_DEVICE_ERROR (nm_device_error_get_type ())
GType nm_manager_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_MANAGER_ERROR (nm_manager_error_get_type ())
GType nm_secret_agent_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SECRET_AGENT_ERROR (nm_secret_agent_error_get_type ())
GType nm_settings_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTINGS_ERROR (nm_settings_error_get_type ())
GType nm_vpn_plugin_error_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_PLUGIN_ERROR (nm_vpn_plugin_error_get_type ())
GType nm_setting_802_1x_ck_format_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_CK_FORMAT (nm_setting_802_1x_ck_format_get_type ())
GType nm_setting_802_1x_ck_scheme_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_CK_SCHEME (nm_setting_802_1x_ck_scheme_get_type ())
GType nm_setting_802_1x_auth_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_802_1X_AUTH_FLAGS (nm_setting_802_1x_auth_flags_get_type ())
GType nm_setting_connection_autoconnect_slaves_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CONNECTION_AUTOCONNECT_SLAVES (nm_setting_connection_autoconnect_slaves_get_type ())
GType nm_setting_connection_lldp_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CONNECTION_LLDP (nm_setting_connection_lldp_get_type ())
GType nm_setting_connection_mdns_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CONNECTION_MDNS (nm_setting_connection_mdns_get_type ())
GType nm_setting_connection_llmnr_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_CONNECTION_LLMNR (nm_setting_connection_llmnr_get_type ())
GType nm_setting_dcb_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_DCB_FLAGS (nm_setting_dcb_flags_get_type ())
GType nm_ip_routing_rule_as_string_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_IP_ROUTING_RULE_AS_STRING_FLAGS (nm_ip_routing_rule_as_string_flags_get_type ())
GType nm_ip_tunnel_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_IP_TUNNEL_FLAGS (nm_ip_tunnel_flags_get_type ())
GType nm_setting_ip6_config_privacy_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_IP6_CONFIG_PRIVACY (nm_setting_ip6_config_privacy_get_type ())
GType nm_setting_ip6_config_addr_gen_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_IP6_CONFIG_ADDR_GEN_MODE (nm_setting_ip6_config_addr_gen_mode_get_type ())
GType nm_setting_macsec_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_MACSEC_MODE (nm_setting_macsec_mode_get_type ())
GType nm_setting_macsec_validation_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_MACSEC_VALIDATION (nm_setting_macsec_validation_get_type ())
GType nm_setting_macvlan_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_MACVLAN_MODE (nm_setting_macvlan_mode_get_type ())
GType nm_setting_proxy_method_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_PROXY_METHOD (nm_setting_proxy_method_get_type ())
GType nm_setting_serial_parity_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_SERIAL_PARITY (nm_setting_serial_parity_get_type ())
GType nm_sriov_vf_vlan_protocol_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SRIOV_VF_VLAN_PROTOCOL (nm_sriov_vf_vlan_protocol_get_type ())
GType nm_team_link_watcher_arp_ping_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_TEAM_LINK_WATCHER_ARP_PING_FLAGS (nm_team_link_watcher_arp_ping_flags_get_type ())
GType nm_setting_tun_mode_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_TUN_MODE (nm_setting_tun_mode_get_type ())
GType nm_vlan_priority_map_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VLAN_PRIORITY_MAP (nm_vlan_priority_map_get_type ())
GType nm_vlan_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VLAN_FLAGS (nm_vlan_flags_get_type ())
GType nm_setting_wired_wake_on_lan_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRED_WAKE_ON_LAN (nm_setting_wired_wake_on_lan_get_type ())
GType nm_wep_key_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_WEP_KEY_TYPE (nm_wep_key_type_get_type ())
GType nm_setting_wireless_security_pmf_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_SECURITY_PMF (nm_setting_wireless_security_pmf_get_type ())
GType nm_setting_wireless_security_wps_method_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_SECURITY_WPS_METHOD (nm_setting_wireless_security_wps_method_get_type ())
GType nm_setting_wireless_security_fils_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_SECURITY_FILS (nm_setting_wireless_security_fils_get_type ())
GType nm_setting_wireless_wake_on_wlan_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_WAKE_ON_WLAN (nm_setting_wireless_wake_on_wlan_get_type ())
GType nm_setting_wireless_powersave_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_WIRELESS_POWERSAVE (nm_setting_wireless_powersave_get_type ())
GType nm_setting_secret_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_SECRET_FLAGS (nm_setting_secret_flags_get_type ())
GType nm_setting_compare_flags_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_COMPARE_FLAGS (nm_setting_compare_flags_get_type ())
GType nm_setting_mac_randomization_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_MAC_RANDOMIZATION (nm_setting_mac_randomization_get_type ())
GType nm_setting_diff_result_get_type (void) G_GNUC_CONST;
#define NM_TYPE_SETTING_DIFF_RESULT (nm_setting_diff_result_get_type ())
GType nm_utils_security_type_get_type (void) G_GNUC_CONST;
#define NM_TYPE_UTILS_SECURITY_TYPE (nm_utils_security_type_get_type ())
GType nm_vpn_service_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_SERVICE_STATE (nm_vpn_service_state_get_type ())
GType nm_vpn_connection_state_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_CONNECTION_STATE (nm_vpn_connection_state_get_type ())
GType nm_vpn_connection_state_reason_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_CONNECTION_STATE_REASON (nm_vpn_connection_state_reason_get_type ())
GType nm_vpn_plugin_failure_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_PLUGIN_FAILURE (nm_vpn_plugin_failure_get_type ())
GType nm_vpn_editor_plugin_capability_get_type (void) G_GNUC_CONST;
#define NM_TYPE_VPN_EDITOR_PLUGIN_CAPABILITY (nm_vpn_editor_plugin_capability_get_type ())
G_END_DECLS

#endif /* __NM_CORE_ENUM_TYPES_H__ */

/* Generated data ends here */

