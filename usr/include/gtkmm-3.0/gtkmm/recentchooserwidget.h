// Generated by gmmproc 2.60.0 -- DO NOT MODIFY!
#ifndef _GTKMM_RECENTCHOOSERWIDGET_H
#define _GTKMM_RECENTCHOOSERWIDGET_H


#include <glibmm/ustring.h>
#include <sigc++/sigc++.h>

/* Copyright (C) 2006 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <gtkmm/box.h>
#include <gtkmm/recentchooser.h>


#ifndef DOXYGEN_SHOULD_SKIP_THIS
using GtkRecentChooserWidget = struct _GtkRecentChooserWidget;
using GtkRecentChooserWidgetClass = struct _GtkRecentChooserWidgetClass;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */


#ifndef DOXYGEN_SHOULD_SKIP_THIS
namespace Gtk
{ class RecentChooserWidget_Class; } // namespace Gtk
#endif //DOXYGEN_SHOULD_SKIP_THIS

namespace Gtk
{

/** RecentChooserWidget is a widget suitable for selecting recently used
 * files.  It is the main building block of a RecentChooserDialog. Most
 * applications will only need to use the latter; you can use
 * RecentChooserWidget as part of a larger window if you have special needs.
 *
 * Note that RecentChooserWidget does not have any methods of its own.
 * Instead, you should use the functions that work on a RecentChooser.
 *
 * @newin{2,10}
 *
 * @ingroup RecentFiles
 */

class RecentChooserWidget
: public VBox,
  public RecentChooser
{
  public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef RecentChooserWidget CppObjectType;
  typedef RecentChooserWidget_Class CppClassType;
  typedef GtkRecentChooserWidget BaseObjectType;
  typedef GtkRecentChooserWidgetClass BaseClassType;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  RecentChooserWidget(RecentChooserWidget&& src) noexcept;
  RecentChooserWidget& operator=(RecentChooserWidget&& src) noexcept;

  // noncopyable
  RecentChooserWidget(const RecentChooserWidget&) = delete;
  RecentChooserWidget& operator=(const RecentChooserWidget&) = delete;

  ~RecentChooserWidget() noexcept override;

#ifndef DOXYGEN_SHOULD_SKIP_THIS

private:
  friend class RecentChooserWidget_Class;
  static CppClassType recentchooserwidget_class_;

protected:
  explicit RecentChooserWidget(const Glib::ConstructParams& construct_params);
  explicit RecentChooserWidget(GtkRecentChooserWidget* castitem);

#endif /* DOXYGEN_SHOULD_SKIP_THIS */

public:

  /** Get the GType for this class, for use with the underlying GObject type system.
   */
  static GType get_type()      G_GNUC_CONST;

#ifndef DOXYGEN_SHOULD_SKIP_THIS


  static GType get_base_type() G_GNUC_CONST;
#endif

  /// Provides access to the underlying C GObject.
  GtkRecentChooserWidget*       gobj()       { return reinterpret_cast<GtkRecentChooserWidget*>(gobject_); }

  /// Provides access to the underlying C GObject.
  const GtkRecentChooserWidget* gobj() const { return reinterpret_cast<GtkRecentChooserWidget*>(gobject_); }


public:
  //C++ methods used to invoke GTK+ virtual functions:

protected:
  //GTK+ Virtual Functions (override these to change behaviour):

  //Default Signal Handlers::


private:

  
public:
  RecentChooserWidget();

    explicit RecentChooserWidget(const Glib::RefPtr<RecentManager>& recent_manager);


};

} // namespace Gtk


namespace Glib
{
  /** A Glib::wrap() method for this object.
   *
   * @param object The C instance.
   * @param take_copy False if the result should take ownership of the C instance. True if it should take a new copy or ref.
   * @result A C++ instance that wraps this C instance.
   *
   * @relates Gtk::RecentChooserWidget
   */
  Gtk::RecentChooserWidget* wrap(GtkRecentChooserWidget* object, bool take_copy = false);
} //namespace Glib


#endif /* _GTKMM_RECENTCHOOSERWIDGET_H */

