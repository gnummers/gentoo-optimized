// Generated by gmmproc 2.60.0 -- DO NOT MODIFY!
#ifndef _GTKMM_MISC_H
#define _GTKMM_MISC_H


#include <glibmm/ustring.h>
#include <sigc++/sigc++.h>

/*
 * Copyright (C) 1998-2002 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <gtkmm/widget.h>


//TODO: Do this when we can stop using this as a base class elsewhere, when we break ABI:
//_IS_DEPRECATED // This whole file is deprecated.

#ifndef DOXYGEN_SHOULD_SKIP_THIS
using GtkMisc = struct _GtkMisc;
using GtkMiscClass = struct _GtkMiscClass;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */


#ifndef DOXYGEN_SHOULD_SKIP_THIS
namespace Gtk
{ class Misc_Class; } // namespace Gtk
#endif //DOXYGEN_SHOULD_SKIP_THIS

namespace Gtk
{

/** A base class for widgets with alignments and padding.
 *
 * This is an abstract for a set of utility widgets
 * that lack a physical window.  They do have
 * alignment and padding within their defined space.
 *
 * Without a window, widgets of this type cannot capture events.
 * To capture events place in Gtk::EventBox.
 *
 * @deprecated The desired effect can in most cases be achieved by using the
 * Gtk::Widget::property_halign(), Gtk::Widget::property_valign() and
 * Gtk::Widget::property_margin() properties on the child widget.
 * Gtk::Misc should not be used in new code.
 */

class Misc : public Widget
{
  public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  typedef Misc CppObjectType;
  typedef Misc_Class CppClassType;
  typedef GtkMisc BaseObjectType;
  typedef GtkMiscClass BaseClassType;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  Misc(Misc&& src) noexcept;
  Misc& operator=(Misc&& src) noexcept;

  // noncopyable
  Misc(const Misc&) = delete;
  Misc& operator=(const Misc&) = delete;

  ~Misc() noexcept override;

#ifndef DOXYGEN_SHOULD_SKIP_THIS

private:
  friend class Misc_Class;
  static CppClassType misc_class_;

protected:
  explicit Misc(const Glib::ConstructParams& construct_params);
  explicit Misc(GtkMisc* castitem);

#endif /* DOXYGEN_SHOULD_SKIP_THIS */

public:

  /** Get the GType for this class, for use with the underlying GObject type system.
   */
  static GType get_type()      G_GNUC_CONST;

#ifndef DOXYGEN_SHOULD_SKIP_THIS


  static GType get_base_type() G_GNUC_CONST;
#endif

  /// Provides access to the underlying C GObject.
  GtkMisc*       gobj()       { return reinterpret_cast<GtkMisc*>(gobject_); }

  /// Provides access to the underlying C GObject.
  const GtkMisc* gobj() const { return reinterpret_cast<GtkMisc*>(gobject_); }


public:
  //C++ methods used to invoke GTK+ virtual functions:

protected:
  //GTK+ Virtual Functions (override these to change behaviour):

  //Default Signal Handlers::


private:

protected:
  Misc();
public:

  
#ifndef GTKMM_DISABLE_DEPRECATED

  /** Sets the alignment of the widget.
   * 
   * Deprecated: 3.14: Use Gtk::Widget's alignment (Gtk::Widget::property_halign() and Gtk::Widget::property_valign()) and margin properties or Gtk::Label's Gtk::Label::property_xalign() and Gtk::Label::property_yalign() properties.
   * 
   * @deprecated Use Widget::set_halign() and Widget::set_valign() instead.
   * 
   * @param xalign The horizontal alignment, from 0 (left) to 1 (right).
   * @param yalign The vertical alignment, from 0 (top) to 1 (bottom).
   */
  void set_alignment(float xalign =  0.0, float yalign =  0.5);
#endif // GTKMM_DISABLE_DEPRECATED


#ifndef GTKMM_DISABLE_DEPRECATED

  /** Sets the alignment of the widget.
   * 
   * Deprecated: 3.14: Use Gtk::Widget's alignment (Gtk::Widget::property_halign() and Gtk::Widget::property_valign()) and margin properties or Gtk::Label's Gtk::Label::property_xalign() and Gtk::Label::property_yalign() properties.
   * 
   * @deprecated Use Widget::set_halign() and Widget::set_valign() instead.
   * 
   * @param xalign The horizontal alignment, from 0 (left) to 1 (right).
   * @param yalign The vertical alignment, from 0 (top) to 1 (bottom).
   */
  void set_alignment(Align xalign =  Gtk::ALIGN_START, Align yalign =  Gtk::ALIGN_CENTER);
#endif // GTKMM_DISABLE_DEPRECATED


#ifndef GTKMM_DISABLE_DEPRECATED

  /** Gets the X and Y alignment of the widget within its allocation. 
   * See set_alignment().
   * 
   * Deprecated: 3.14: Use Gtk::Widget alignment and margin properties.
   * 
   * @deprecated Use Widget::get_halign() and Widget::get_valign() instead.
   * 
   * @param xalign Location to store X alignment of @a misc, or <tt>nullptr</tt>.
   * @param yalign Location to store Y alignment of @a misc, or <tt>nullptr</tt>.
   */
  void get_alignment(float& xalign, float& yalign) const;
#endif // GTKMM_DISABLE_DEPRECATED


#ifndef GTKMM_DISABLE_DEPRECATED

  /** Sets the amount of space to add around the widget.
   * 
   * Deprecated: 3.14: Use Gtk::Widget alignment and margin properties.
   * 
   * @deprecated Use Widget::set_margin_start(), Widget::set_margin_end(), Widget::set_margin_top(), Widget::set_margin_bottom() instead.
   * 
   * @param xpad The amount of space to add on the left and right of the widget,
   * in pixels.
   * @param ypad The amount of space to add on the top and bottom of the widget,
   * in pixels.
   */
  void set_padding(int xpad, int ypad);
#endif // GTKMM_DISABLE_DEPRECATED


#ifndef GTKMM_DISABLE_DEPRECATED

  /** Gets the padding in the X and Y directions of the widget. 
   * See set_padding().
   * 
   * Deprecated: 3.14: Use Gtk::Widget alignment and margin properties.
   * 
   * @deprecated Use Widget::get_margin_start(), Widget::get_margin_end(), Widget::get_margin_top(), Widget::get_margin_bottom() instead.
   * 
   * @param xpad Location to store padding in the X
   * direction, or <tt>nullptr</tt>.
   * @param ypad Location to store padding in the Y
   * direction, or <tt>nullptr</tt>.
   */
  void get_padding(int& xpad, int& ypad) const;
#endif // GTKMM_DISABLE_DEPRECATED


#ifndef GTKMM_DISABLE_DEPRECATED

/** The horizontal alignment. A value of 0.0 means left alignment (or right
   * on RTL locales); a value of 1.0 means right alignment (or left on RTL
   * locales).
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_halign() instead. If you are using
   * Gtk::Label, use Gtk::Label::property_xalign() instead.
   * 
   * @deprecated Use Widget::property_halign() instead.
   *
   * Default value: 0.5
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< float > property_xalign() ;

/** The horizontal alignment. A value of 0.0 means left alignment (or right
   * on RTL locales); a value of 1.0 means right alignment (or left on RTL
   * locales).
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_halign() instead. If you are using
   * Gtk::Label, use Gtk::Label::property_xalign() instead.
   * 
   * @deprecated Use Widget::property_halign() instead.
   *
   * Default value: 0.5
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< float > property_xalign() const;

#endif // GTKMM_DISABLE_DEPRECATED

  
#ifndef GTKMM_DISABLE_DEPRECATED

/** The vertical alignment. A value of 0.0 means top alignment;
   * a value of 1.0 means bottom alignment.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_valign() instead. If you are using
   * Gtk::Label, use Gtk::Label::property_yalign() instead.
   * 
   * @deprecated Use Widget::property_valign() instead.
   *
   * Default value: 0.5
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< float > property_yalign() ;

/** The vertical alignment. A value of 0.0 means top alignment;
   * a value of 1.0 means bottom alignment.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_valign() instead. If you are using
   * Gtk::Label, use Gtk::Label::property_yalign() instead.
   * 
   * @deprecated Use Widget::property_valign() instead.
   *
   * Default value: 0.5
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< float > property_yalign() const;

#endif // GTKMM_DISABLE_DEPRECATED

  
#ifndef GTKMM_DISABLE_DEPRECATED

/** The amount of space to add on the left and right of the widget, in
   * pixels.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_margin_start() and
   * Gtk::Widget::set_margin_end() instead
   * 
   * @deprecated Use Widget::property_margin_start(), Widget::property_margin_end(), Widget::property_margin() instead.
   *
   * Default value: 0
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< int > property_xpad() ;

/** The amount of space to add on the left and right of the widget, in
   * pixels.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_margin_start() and
   * Gtk::Widget::set_margin_end() instead
   * 
   * @deprecated Use Widget::property_margin_start(), Widget::property_margin_end(), Widget::property_margin() instead.
   *
   * Default value: 0
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< int > property_xpad() const;

#endif // GTKMM_DISABLE_DEPRECATED

  
#ifndef GTKMM_DISABLE_DEPRECATED

/** The amount of space to add on the top and bottom of the widget, in
   * pixels.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_margin_top() and
   * Gtk::Widget::set_margin_bottom() instead
   * 
   * @deprecated Use Widget::property_margin_top(), Widget::property_margin_bottom(), Widget::property_margin() instead.
   *
   * Default value: 0
   *
   * @return A PropertyProxy that allows you to get or set the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy< int > property_ypad() ;

/** The amount of space to add on the top and bottom of the widget, in
   * pixels.
   * 
   * Deprecated: 3.14: Use Gtk::Widget::set_margin_top() and
   * Gtk::Widget::set_margin_bottom() instead
   * 
   * @deprecated Use Widget::property_margin_top(), Widget::property_margin_bottom(), Widget::property_margin() instead.
   *
   * Default value: 0
   *
   * @return A PropertyProxy_ReadOnly that allows you to get the value of the property,
   * or receive notification when the value of the property changes.
   */
  Glib::PropertyProxy_ReadOnly< int > property_ypad() const;

#endif // GTKMM_DISABLE_DEPRECATED


};

} //namespace Gtk


namespace Glib
{
  /** A Glib::wrap() method for this object.
   *
   * @param object The C instance.
   * @param take_copy False if the result should take ownership of the C instance. True if it should take a new copy or ref.
   * @result A C++ instance that wraps this C instance.
   *
   * @relates Gtk::Misc
   */
  Gtk::Misc* wrap(GtkMisc* object, bool take_copy = false);
} //namespace Glib


#endif /* _GTKMM_MISC_H */

