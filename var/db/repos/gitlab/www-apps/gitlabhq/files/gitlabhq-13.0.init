#!/sbin/openrc-run

name="GitLab"
description="GitLab 13.0 on Unicorns"

: ${rails_env:=production}

: ${gitlab_user:=git}
: ${gitlab_group:=git}
: ${gitlab_home:="/opt/gitlabhq-13.0"}
: ${gitlab_log:="/var/log/gitlabhq-13.0"}
: ${gitlab_env:=""}

: ${unicorn_pidfile:="${gitlab_home}/tmp/pids/unicorn.pid"}
: ${unicorn_log:="${gitlab_log}/unicorn.log"}
: ${unicorn_socket:="${gitlab_home}/tmp/sockets/gitlab.socket"}
: ${unicorn_command:="/usr/bin/bundle"}
: ${unicorn_command_args:="exec unicorn_rails -c ${gitlab_home}/config/unicorn.rb -E ${rails_env} -D"}
: ${unicorn_mem_min:=""}
: ${unicorn_mem_max:=""}

: ${sidekiq_pidfile:="${gitlab_home}/tmp/pids/sidekiq.pid"}
: ${sidekiq_log:="${gitlab_log}/sidekiq.log"}
: ${sidekiq_config:="${gitlab_home}/config/sidekiq_queues.yml"}
: ${sidekiq_command:="/usr/bin/bundle"}
: ${sidekiq_start_command_args:="exec sidekiq -C ${sidekiq_config} -e ${rails_env} -d -P ${sidekiq_pidfile} -L ${sidekiq_log} $@ >> ${sidekiq_log} 2>&1"}
: ${sidekiq_stop_command_args:="exec sidekiqctl stop ${sidekiq_pidfile} >> ${sidekiq_log}"}

: ${workhorse_pidfile:="${gitlab_home}/tmp/pids/workhorse.pid"}
: ${workhorse_log:="${gitlab_log}/workhorse.log"}
: ${workhorse_socket:="${gitlab_home}/tmp/sockets/gitlab-workhorse.socket"}
: ${workhorse_command:="/usr/bin/gitlab-workhorse"}
: ${workhorse_command_args="-listenUmask 0 -listenNetwork unix -listenAddr ${workhorse_socket} -authBackend http://127.0.0.1:8080 -documentRoot ${gitlab_home}/public -authSocket ${unicorn_socket}"}

: ${gitaly_command:=/usr/bin/gitlab-gitaly}
: ${gitaly_command_args:="/etc/gitaly/config.toml"}
: ${gitaly_pidfile:="${gitlab_home}/tmp/pids/gitaly.pid"}
: ${gitaly_log:="${gitlab_log}/gitaly.log"}
: ${gitaly_socket:="${gitlab_home}/tmp/sockets/gitaly.socket"}


if [ ${rails_env} = development ]; then
	sidekiq_command_args+=" VVERBOSE=1"
fi

depend() {
	provide gitlab
	need redis
	use net mysql postgresql
}

start() {

	checkpath -d -o "${gitlab_user}:${gitlab_group}" -m750 "$(dirname "${unicorn_pidfile}")"
	checkpath -d -o "${gitlab_user}:${gitlab_group}" -m750 "$(dirname "${sidekiq_pidfile}")"

	ebegin "Starting GitLab 13.0 Unicorn servers"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--env GITLAB_UNICORN_MEMORY_MIN="${unicorn_mem_min}" \
		--env GITLAB_UNICORN_MEMORY_MAX="${unicorn_mem_max}" \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${unicorn_pidfile}" \
		--exec ${unicorn_command} -- ${unicorn_command_args}
	eend $?

	ebegin "Starting GitLab 13.0 Sidekiq"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${sidekiq_pidfile}" \
		--exec ${sidekiq_command} -- ${sidekiq_start_command_args}
	eend $?

	ebegin "Starting GitLab 13.0 Workhorse"
	start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${workhorse_pidfile}" \
		--make-pidfile \
		--background -1 "${workhorse_log}" -2 "${workhorse_log}" \
		--exec ${workhorse_command} -- ${workhorse_command_args}
	eend $?

        ebegin "Starting GitLab 13.0 Gitaly"
        start-stop-daemon --start \
		$(for env in $gitlab_env ; do echo "--env $env" ; done) \
                --chdir "${gitlab_home}" \
                --user="${gitlab_user}:${gitlab_group}" \
                --pidfile="${gitaly_pidfile}" \
                --make-pidfile \
		--env GITALY_SOCKET_PATH=${gitaly_socket} \
                --background -1 "${gitaly_log}" -2 "${gitaly_log}" \
                --exec ${gitaly_command} -- ${gitaly_command_args}
        eend $?
}

stop() {
        ebegin "Stopping GitLab 13.0 Gitaly"
        start-stop-daemon --stop \
                --chdir "${gitlab_home}" \
                --user="${gitlab_user}:${gitlab_group}" \
                --pidfile="${gitaly_pidfile}"
        eend $?

	ebegin "Stopping GitLab 13.0 Workhorse"
  	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${workhorse_pidfile}"
	eend $?

	ebegin "Stopping GitLab 13.0 Sidekiq"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${sidekiq_pidfile}" \
		--exec ${sidekiq_command} -- ${sidekiq_stop_command_args}
	eend $?

	ebegin "Stopping GitLab 13.0 Unicorn servers"
	start-stop-daemon --stop \
		--chdir "${gitlab_home}" \
		--user="${gitlab_user}:${gitlab_group}" \
		--pidfile="${unicorn_pidfile}"
	eend $?
}

do_status()
{
	name="Gitlab 13.0 $1"
	msg=$(pidfile=$2 default_status 2>&1 | awk -F': ' '{print $2}')
	pidfile=$2 default_status &>/dev/null
	status=$?

	if [[ $status -eq 0 ]] ; then
		einfo "$name: $msg"
	else
		eerror "$name: $msg"
	fi
	
	eend $status
}

status()
{
	do_status "Gitaly" ${gitaly_pidfile}
	do_status "Workhorse" ${workhorse_pidfile}
	do_status "Sidekiq" ${sidekiq_pidfile}
	do_status "Unicorn" ${unicorn_pidfile}
}
