# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-admin/propellor:type-errors - Build with dev-haskell/type-errors for better error messages.
app-editors/leksah:codemirror - Experimental codemirror editor
app-editors/leksah:dyre - Experimental Yi dyre support
app-editors/leksah:loc - Experimental localization support
app-editors/leksah:network-uri - Get Network.URI from the network-uri package
app-editors/leksah:threaded - Use threaded runtime.
app-editors/leksah:yi - Experimental Yi support
app-editors/leksah-server:network-uri - Get Network.URI from the network-uri package
app-editors/leksah-server:threaded - Enable multithreaded runtime.
app-editors/yi:emacs - Include the emacs keymap
app-editors/yi:eventlog - Runtime binary will be compiled with eventlog and RTS options enabled.
app-editors/yi:gtk - Include the pango (GUI) frontend, this flag is ignored if compiling with ghc >= 8.2
app-editors/yi:hint - Include hint (haskell interpreter) in yi
app-editors/yi:profiling - Runtime binary will be compiled with profiling and RTS options enabled.
app-editors/yi:testing - bake-in the self-checks
app-editors/yi:vim - Include the vim keymap
app-editors/yi:vty - Include the vty (CLI) frontend
app-emacs/hindent:vim - Install a vim plugin allowing hindent to be used as the formatter by `gq`
app-forensics/quickfuzz:archs - support archive formats
app-forensics/quickfuzz:codes - support cource code formats
app-forensics/quickfuzz:docs - support document formats
app-forensics/quickfuzz:imgs - support image formats
app-forensics/quickfuzz:media - support media formats
app-forensics/quickfuzz:net - support networking formats
app-forensics/quickfuzz:pki - support PKI formats
app-text/pandoc:derive-json-via-th - Use Template Haskell instead of GHC Generics to derive ToJSON and FromJSON instances.
app-text/pandoc:embed-data-files - Embed data files in binary for relocatable executable.
app-text/pandoc:https - Enable support for downloading of resources over https.
app-text/pandoc:network-uri - Get Network.URI from the network-uri package.
app-text/pandoc:trypandoc - Build trypandoc cgi executable.
app-text/pandoc:weigh-pandoc - Build weigh-pandoc to measure memory usage.
dev-haskell/abstract-deque:usecas - Enable the reference implementation to use hardware compare-and-swap.
dev-haskell/accelerate:bounds-checks - Enable bounds checking.
dev-haskell/accelerate:ekg - Enable hooking mechanisp for monitoring via dev-haskell/ekg.
dev-haskell/accelerate:internal-checks - Enable internal consistency checks.
dev-haskell/accelerate:more-pp - Enable HTML and Graphviz pretty printing.
dev-haskell/accelerate:unsafe-checks - Enable bounds checking in unsafe operations.
dev-haskell/accelerate-cuda:bounds-checks - Enable bounds checking.
dev-haskell/accelerate-cuda:internal-checks - Enable internal consistency checks.
dev-haskell/accelerate-cuda:unsafe-checks - Enable bounds checking in unsafe operations.
dev-haskell/accelerate-fft:cuda - Enable support for using CUFFT via the CUDA backend's FFI.
dev-haskell/accelerate-io:bounds-checks - Enable bounds checking.
dev-haskell/accelerate-io:internal-checks - Enable internal consistency checks.
dev-haskell/accelerate-io:unsafe-checks - Enable bounds checking in unsafe operations.
dev-haskell/acid-state:skip-state-machine-test - If enabled, do not build/run the state-machine test
dev-haskell/aeson:cffi - Controls whether to include c-ffi bits or pure haskell. Default to False for security.
dev-haskell/aeson:fast - compile without optimizations
dev-haskell/aeson-pretty:lib-only - don't build 'aeson-pretty' executable.
dev-haskell/alsa-pcm:buildexamples - Build example executables
dev-haskell/alsa-seq:modifyfilter - Use native event filter functions that are provided by newer ALSA versions
dev-haskell/ansi-terminal:example - Build the example application.
dev-haskell/ansi-wl-pprint:example - Build the example application.
dev-haskell/attoparsec-iso8601:developer - operate in developer mode
dev-haskell/attoparsec-iso8601:fast - compile without optimizations
dev-haskell/authenticate:network-uri - Get Network.URI from the network-uri package
dev-haskell/aws:network-3 - Use network-3
dev-haskell/beam-migrate-cli:werror - Enable -Werror during development
dev-haskell/bench-show:executable - Build executable as well as library
dev-haskell/bifunctors:semigroups - Enable the use of `semigroups` package. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/bifunctors:tagged - Enable the use of the `tagged` package. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/bindings-glfw:exposenative - Whether or not to use the native access functions.
dev-haskell/bindings-glfw:osmesa - Determines whether or not to use the Mesa 3D rendering context.
dev-haskell/biosff:fclip - Build the fclip executable.
dev-haskell/biosff:flower - Build the flower executable.
dev-haskell/biosff:frecover - Build the frecover executable.
dev-haskell/bitstring:withquickcheck - Build with QuickCheck test. Note that Show instances will be different.
dev-haskell/blaze-builder-enumerator:newbuilder - use bytestring-builder instead of blaze-builder-0.3
dev-haskell/bloodhound:es1 - Run the test suite against an Elasticsearch 1.x server
dev-haskell/bloodhound:es5 - Run the test suite against an Elasticsearch 5.x server
dev-haskell/bound:template_haskell - Enable additional test modules requiring Template Haskell support.
dev-haskell/brick:demos - Build demonstration programs.
dev-haskell/broadcast-chan:sync - Benchmarks synchronisation primitives used in main benchmark
dev-haskell/broadcast-chan:threaded - Run benchmarks with threaded backend
dev-haskell/bson:old-network - Use network-2.x when enabled, else use network-bsd.
dev-haskell/btrfs:examples - Build examples
dev-haskell/bytedump:executable - build executable file
dev-haskell/bytes:test-doctests - Enable the doctest suite when using the enable-tests option for cabal.
dev-haskell/c2hs:regression - run regression tests
dev-haskell/cabal-install:debug-conflict-sets - Add additional information to ConflictSets
dev-haskell/cabal-install:native-dns - Enable use of the resolv and windns packages for performing DNS lookups
dev-haskell/cabal-install:network-uri - Get Network.URI from the network-uri package
dev-haskell/cabal-install:noprefs - Ignore 'preferred-versions' file from hackage's tarball
dev-haskell/cabal-install:parsec - Use parser written in parsec library
dev-haskell/cabal-rpm:curl - Use curl library to query Stackage instead of http-client
dev-haskell/cabal-rpm:https - Use http to query Stackage
dev-haskell/cabal-rpm:old-locale - Use old-locale and time < 1.5
dev-haskell/categories:optimize - enable optimizations
dev-haskell/cborg:optimize-gmp - Use optimized code paths for integer-gmp
dev-haskell/certificate:executable - Build the executable
dev-haskell/cheapskate:dingus - Build cheapskate-dingus cgi script
dev-haskell/chell:color-output - use colors in program output
dev-haskell/chimera:representable - Define Representable instance from adjunctions package
dev-haskell/citeproc-hs:bibutils - use Chris Putnam's app-text/bibutils
dev-haskell/citeproc-hs:embed-data-files - Embed locale files into the library (needed for windows packaging)
dev-haskell/citeproc-hs:hexpat - use dev-haskell/hexpat instead of dev-haskell/xml for XML parsing
dev-haskell/citeproc-hs:network - use dev-haskell/network and dev-haskell/http to retrieve CSL file from URIs
dev-haskell/citeproc-hs:small-base - Choose the new smaller, split-up base package.
dev-haskell/citeproc-hs:unicode-collation - Use Haskell bindings to the dev-libs/icu
dev-haskell/clash-ghc:dynamic - Build Clash binaries with GHC flag `-dynamic`. This flag should only be used for packaging purposes. Installations using cabal should use `--enable-executable-dynamic`!
dev-haskell/clash-ghc:ghc-paths - Locate the GHC core libraries using the `ghc-paths` package. Note: this flag may make binaries less relocatable, by hard-coding an absolute path to the core libraries.
dev-haskell/clash-lib:debug - Build a debug compiler
dev-haskell/clash-lib:history - Emit rewrite history to disk
dev-haskell/clash-lib:unittests - You can disable testing with unittests using `-f-unittests`
dev-haskell/clash-prelude:benchmarks - Enable testing with benchmarks
dev-haskell/clash-prelude:doctests - Enable testing with doctests
dev-haskell/clash-prelude:multiple-hidden - Allow multiple hidden clocks, resets, and enables to be used. This is an experimental feature, possibly triggering confusing error messages. By default, it is enabled on development versions of Clash and disabled on releases.
dev-haskell/clash-prelude:super-strict - Use `deepseqX` (instead of `seqX`) in register-like constructs. This can help to eliminate space leaks when using lazy data structures in registers-like constructs. This potentially slows down Clash hardware simulation.
dev-haskell/clash-prelude:unittests - You can disable testing with unittests using `-f-unittests`
dev-haskell/clckwrks:network-uri - Get Network.URI from the network-uri package
dev-haskell/cmark:system-cmark - use app-text/cmark instead of bundled copy
dev-haskell/cmdargs:quotation - Build quote module
dev-haskell/cmdargs:testprog - Build the test program
dev-haskell/comonad:containers - Enable the use of the `containers` package. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/comonad:distributive - Enable the use of the `distributive` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Distributive`.
dev-haskell/comonad:test-doctests - Run the doctests test suite
dev-haskell/concurrent-supply:test-properties - 
dev-haskell/configfile:buildtests - Build the executable to run unit tests.
dev-haskell/constraints-deriving:constraints - Use vanilla constraints package as a dependency instead of the manual minimalistic definitions copied from there.
dev-haskell/constraints-deriving:debug - Show debug trace info (used only for library development). Note, if you want to see the debug output of the plugin in another project, you may need to manually define a CPP option -DPLUGIN_DEBUG in that project.
dev-haskell/constraints-deriving:examples - Whether to build examples
dev-haskell/contravariant:semigroups - Enable the use of the `semigroups` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/contravariant:statevar - Enable the use of of the `statevar` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/contravariant:tagged - Enable the use of the `tagged` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/country-codes:generate - Build generate executable?
dev-haskell/cpu:executable - build 'cpuid' tool
dev-haskell/criterion:embed-data-files - Embed the data files in the binary for a relocatable executable
dev-haskell/cron:lib-werror - ghc-options: -Werror
dev-haskell/crypto-api:all-cpolys - Build all the CMAC polynomes up to 10000 bits instead of just the usual ones.
dev-haskell/crypto-conduit:conduit11 - Use conduit >= 1.1.
dev-haskell/cryptonite:cpu-flags-x86-rdrand - allow compilation with RDRAND on system and architecture that supports it
dev-haskell/cryptonite:integer-gmp - Whether or not to use GMP for some functions
dev-haskell/csv-to-qif:threaded - Enable threaded haskell runtime.
dev-haskell/data-lens:derivedatatypeable - Use the DeriveDataTypeable extension. This makes lens compile with old compilers. Users need not worry about it.
dev-haskell/data-lens-fd:derivedatatypeable - Use the DeriveDataTypeable extension. This makes lens compile with old compilers. Users need not worry about it.
dev-haskell/data-reify:tests - Build test binaries.
dev-haskell/dhall:cross - Disable TemplateHaskell to make cross-compiling easier
dev-haskell/dhall:http - Include support for importing dhall modules from HTTP URLs
dev-haskell/diagrams:canvas - Enable canvas backend.
dev-haskell/diagrams:postscript - Enable the Haskell-native PostScript backend.
dev-haskell/diagrams:rasterific - Enable rasterific backend.
dev-haskell/diagrams-builder:pgf - install PGF-specific builder tool
dev-haskell/diagrams-builder:ps - Enable postscript backend
dev-haskell/diagrams-builder:rasterific - Enable rasterific backend
dev-haskell/dimensions:unsafe-indices - Disable bound checks on Idx and Idxs types
dev-haskell/direct-sqlite:fulltextsearch - Enable full-text search when using the bundled sqlite library.
dev-haskell/direct-sqlite:json1 - Enable json1 extension.
dev-haskell/direct-sqlite:systemlib - Use the system-wide sqlite library.
dev-haskell/direct-sqlite:urifilenames - Enable URI filenames when using the bundled sqlite library.
dev-haskell/dotenv:dev - Turn on development settings.
dev-haskell/encoding:systemencoding - Provide the getSystemEncoding action to query the locale.
dev-haskell/entropy:halvm - Build for the HaLVM.
dev-haskell/ether:disable-tup-instances - Disable auto-generated HasLens instances for tuples.
dev-haskell/extensible-effects:dump-core - Dump HTML for the core generated by GHC during compilation
dev-haskell/ffmpeg-light:builddemo - Build demo executable
dev-haskell/ffmpeg-light:buildrasterdemo - Build Rasterific demo executable
dev-haskell/ffmpeg-light:buildtranscodedemo - Build transcode demo executable
dev-haskell/ffmpeg-light:buildvplaydemo - Build video player demo executable
dev-haskell/filestore:maxcount - Make use of a recent (>= 2.3.0) Darcs feature which vastly improves the performance of 'latest'. You should disable this flag if you plan to use gitit with an older version of Darcs, or 'latest' will raise an error.
dev-haskell/finite-field:useghctypelits - GHC.TypeLits module
dev-haskell/foundation:experimental - enable building experimental features, known as highly unstable or without good support cross-platform
dev-haskell/freer-effects:pedantic - Pass additional warning flags and -Werror to GHC.
dev-haskell/freer-effects:test-hlint - Enable test suite that checks sources using HLint.
dev-haskell/ftphs:buildtests - Build the executable to run unit tests.
dev-haskell/functor-classes-compat:unordered-containers - 'dev-haskell/unordered-containers >= 0.2.8.0
dev-haskell/functor-classes-compat:vector - 'dev-haskell/vector >= 0.12'
dev-haskell/gauge:analysis - Build with statistical analysis support
dev-haskell/generic-lens:dump-core - Dump HTML for the core generated by GHC during compilation
dev-haskell/ghc-api:cabal - fix cabal version
dev-haskell/ghc-exactprint:roundtrip - Build roundtripping executables
dev-haskell/ghc-heap-view:prim-supports-any - The used GHC supports Any as an argument to foreign prim functions (GHC ticket #5931)
dev-haskell/ghc-lib-parser-ex:ghc-lib - Force dependency on ghc-lib-parser even if GHC API in the ghc package is supported
dev-haskell/ghc-prof:dump - build 'dump' tool
dev-haskell/ghc-tcplugins-extra:deverror - Enables `-Werror` for development mode and TravisCI
dev-haskell/ghc-typelits-extra:deverror - Enables `-Werror` for development mode and TravisCI
dev-haskell/ghc-typelits-knownnat:deverror - Enables `-Werror` for development mode and TravisCI
dev-haskell/ghc-typelits-natnormalise:deverror - Enables `-Werror` for development mode and TravisCI
dev-haskell/ghc-vis:full - Full ghc-vis window: decorations, buttons, legend
dev-haskell/ghc-vis:graph - Enable graph view using Graphviz
dev-haskell/gi-cairo-render:cairo_pdf - Build the PDF backend of Cairo.
dev-haskell/gi-cairo-render:cairo_ps - Build the PostScript backend of Cairo.
dev-haskell/gi-cairo-render:cairo_svg - Build the Scalable Vector Graphics (SVG) backend of Cairo.
dev-haskell/github:openssl - Use http-client-openssl
dev-haskell/github-backup:network-uri - Get Network.URI from the network-uri package
dev-haskell/glfw:system-glfw - use media-libs/glfw instead of bundled version
dev-haskell/glib:closure-signals - Use the the GClosure-based signals implementation.
dev-haskell/gloss:explicitbackend - Expose versions of 'display' and friends that allow you to choose what window manager backend to use.
dev-haskell/gloss:glfw - Enable the GLFW backend.
dev-haskell/gloss:glut - Enable the GLUT backend.
dev-haskell/gnuplot:buildexamples - Build test executables.
dev-haskell/gnuplot:executepipe - Avoid a temporary script by running with runInteractiveProcess.
dev-haskell/gnuplot:executeshell - Avoid a temporary script by calling via a UNIX shell and its piping syntax.
dev-haskell/graphscc:use-maps - Use IntMap instead of mutable arrays.
dev-haskell/gtk:deprecated - Include definitions in this library that are considered obsolete.
dev-haskell/gtk:fmode-binary - Set the default file translation mode for file I/O operations to _O_BINARY.
dev-haskell/gtk:gio - Depend on GIO package, thereby enabling certain features.
dev-haskell/gtk2hs-buildtools:closuresignals - Use the the GClosure-based signals implementation.
dev-haskell/gtk3:fmode-binary - Set the default file translation mode for file I/O operations to _O_BINARY.
dev-haskell/gtk3:gio - Depend on GIO package, thereby enabling certain features.
dev-haskell/hackage-security:network-uri - Get Network.URI from the network-uri package.
dev-haskell/hakyll:buildwebsite - Build the hakyll website
dev-haskell/hakyll:checkexternal - Include external link checking
dev-haskell/hakyll:previewserver - Include the preview server
dev-haskell/hakyll:usepandoc - Include Pandoc support
dev-haskell/hakyll:watchserver - wait for filesystem changes and rebuild pages
dev-haskell/handsomesoup:network-uri - Get Network.URI from the network-uri package.
dev-haskell/happstack-plugins:tests - Build the testsuite, and include the tests in the library.
dev-haskell/happstack-server:network-uri - Get Network.URI from the network-uri package
dev-haskell/happstack-server:template-haskell - Description: Template Haskell is available on this system
dev-haskell/hashed-storage:diff - Provide the Storage.Hashed.Diff module.
dev-haskell/hashed-storage:hpc - Compile with the profiling ghc flag -fhpc.
dev-haskell/hashtables:bounds-checking - if on, use bounds-checking array accesses
dev-haskell/hashtables:detailed-profiling - add detailed profiling information to profiled build-depends
dev-haskell/hashtables:portable - if on, use only pure Haskell code and no GHC extensions.
dev-haskell/hashtables:unsafe-tricks - turn on unsafe GHC tricks
dev-haskell/haskeline:legacy-encoding - Use legacy iconv encoding for POSIX. This is only intended for testing.
dev-haskell/haskeline:libiconv - Explicitly link against the libiconv library.
dev-haskell/haskeline:terminfo - Use the terminfo package for POSIX consoles.
dev-haskell/hdbc-odbc:buildstresstest - Build stress test
dev-haskell/hdbc-sqlite3:buildtests - Build the executable to run unit tests
dev-haskell/hdbc-sqlite3:splitbase - Choose the new smaller, split-up package.
dev-haskell/hexpat:bundled-expat - Use bundled expat instead of dev-libs/expat
dev-haskell/highlighter:executable - Install a "highlighter" executable
dev-haskell/highlighting-kate:executable - Build the Highlight executable.
dev-haskell/highlighting-kate:pcre-light - Use the pcre-light library instead of regex-pcre-builtin.
dev-haskell/hip:disable-chart - Disable Chart-diagrams and Chart for a lighter dependency footprint
dev-haskell/hledger:terminfo - On POSIX systems, build with the terminfo lib for detecting terminal width.
dev-haskell/hledger:threaded - Build with support for multithreaded execution.
dev-haskell/hledger-ui:threaded - Build with support for multithreaded execution.
dev-haskell/hledger-web:library-only - Build for use with "yesod devel.
dev-haskell/hledger-web:threaded - Build with support for multithreaded execution.
dev-haskell/hlibsass:externallibsass - Use LibSass that is installed in the system
dev-haskell/hlibsass:sharedlibsass - Build LibSass as a shared library (only if external_libsass = False)
dev-haskell/hlint:ghc-lib - Force dependency on ghc-lib-parser even if GHC API in the ghc package is supported
dev-haskell/hlint:gpl - Use GPL libraries, specifically hscolour.
dev-haskell/hlint:threaded - Build with support for multithreaded execution
dev-haskell/hnix:parsec - use dev-haskell/parsec instead of dev-haskell/trifecta
dev-haskell/hnix-store-core:bounded-memory - Run tests of constant memory use (requires +RTS -T)
dev-haskell/hoodle:dyre - Support dynamic reconfiguration
dev-haskell/hoodle-core:dyre - Support dynamic reconfiguration
dev-haskell/hoodle-core:gtk3 - Use GTK3 rather than GTK2
dev-haskell/hoodle-core:hub - Support communication with hub
dev-haskell/hoodle-render:gtk3 - Use GTK3 rather than GTK2
dev-haskell/hoogle:fetchdb - fetch hoogle db by running: hoogle data
dev-haskell/hoogle:fetchdb-ghc - fetch hoogle db by running: hoogle data ghc (implies fetchdb)
dev-haskell/hoogle:localdb - install hoogle-build-localdb script for building hoogle dbs for installed pkgs
dev-haskell/hoogle:network-uri - Get Network.URI from the network-uri package
dev-haskell/hp2any-graph:serveronly - Suppress building the client, thereby removing the dependency on OpenGL.
dev-haskell/hps:build-exec - Build the `hps-fractals` executable
dev-haskell/hs3:network-uri - Get Network.URI from the network-uri package.
dev-haskell/hsexif:iconv - Enable encoding conversion of the User Comment tag with iconv.
dev-haskell/hsh:buildtests - Build the executable to run unit tests.
dev-haskell/hslogger:network-3 - Use network-3
dev-haskell/hslua:apicheck - Compile Lua with -DLUA_USE_APICHECK..
dev-haskell/hslua:luajit - Use luajit instead of lua.
dev-haskell/hslua:system-lua - Use the system-wide lua instead of the bundled copy.
dev-haskell/hsopenssl:fast-bignum - Enable fast moving of bignums between OpenSSL and GMP
dev-haskell/hsp:base4 - Use base-4.0.
dev-haskell/hspec-megaparsec:dev - Turn on development settings.
dev-haskell/hsqml:enableqmldebugging - Allow the QML debug server to be enabled via Qt arguments.
dev-haskell/hsqml:forceghcilib - Force enable GHCi workaround library if not using shared libraries.
dev-haskell/hsqml:threadedtestsuite - Build test executable with the threaded RTS.
dev-haskell/hsqml:useexithook - Override the OnExitHook symbol to shutdown the Qt framework on exit.
dev-haskell/hsqml:usepkgconfig - Use pkg-config for libraries instead of the platform default mechanism.
dev-haskell/hsx:base4 - Use base-4.0.
dev-haskell/hsyslog:install-examples - Build and install example programs
dev-haskell/http:conduit10 - Use version 1.0.x or below of the conduit package (for the test suite).
dev-haskell/http:network-uri - Get Network.URI from the network-uri package.
dev-haskell/http-api-data:use-text-show - Use text-show library for efficient ToHttpApiData implementations
dev-haskell/http-client:network-uri - Get Network.URI from the network-uri package.
dev-haskell/http-client-openssl:test-proxy - Test with http-proxy
dev-haskell/http-streams:network-uri - Get Network.URI from the network-uri package.
dev-haskell/httpd-shed:buildexamples - Build example executables.
dev-haskell/httpd-shed:network-bsd - Get Network.BSD from the network-bsd package.
dev-haskell/httpd-shed:network-uri - Get Network.URI from the network-uri package.
dev-haskell/hxt:network-uri - Get Network.URI from the network-uri package.
dev-haskell/hxt-http:network-uri - Get Network.URI from the network-uri package
dev-haskell/icalendar:network-uri - use network-uri package
dev-haskell/ignore:without-pcre - Disable pcre support
dev-haskell/imagemagick:buildexamples - Build examples.
dev-haskell/inflections:dev - Turn on development settings
dev-haskell/influxdb:examples - Build examples
dev-haskell/inline-c:gsl-example - Build GSL example
dev-haskell/integer-logarithms:integer-gmp - integer-gmp or integer-simple
dev-haskell/intervals:test-doctests - Enable the doctest suite when using the enable-tests option for cabal.
dev-haskell/jmacro:benchmarks - Build the benchmarks.
dev-haskell/jose-jwt:doctest - doctest
dev-haskell/jsaddle:call-stacks - Include HasCallStack constraint on calls unchecked calls
dev-haskell/jsaddle:check-unchecked - Fail unchecked calls when they are called (rather than when the result is evaluated)
dev-haskell/jsaddle-wkwebview:include-app-delegate - Include default AppDelegate C sources.
dev-haskell/json:mapdict - Encode Haskell maps as JSON dicts
dev-haskell/json:parsec - Add support for parsing with Parsec
dev-haskell/json:pretty - Add support for using pretty printing combinators
dev-haskell/judy:unsafe - Compile the library without locks. Code may be faster, but not threadsafe.
dev-haskell/juicypixels-extra:dev - Turn on development settings.
dev-haskell/keter:system-filepath - Deprecated in favor of filepath
dev-haskell/lambdabot-misc-plugins:network-uri - Get Network.URI from the network-uri package.
dev-haskell/lambdabot-reference-plugins:network-uri - Get Network.URI from the network-uri package.
dev-haskell/language-c-quote:full-haskell-antiquotes - Support full Haskell expressions/patterns in antiquotes
dev-haskell/language-dot:executable - Build the `ppdot' executable
dev-haskell/ldap:buildtests - Build the executable to run unit tests.
dev-haskell/lens:benchmark-uniplate - Enable benchmarking against Neil Mitchell's uniplate library for comparative performance analysis. Defaults to being turned off to avoid the extra dependency.
dev-haskell/lens:dump-splices - Build and run the doctests test-suite.
dev-haskell/lens:inlining - Generate inline pragmas when using template-haskell. This defaults to enabled, but you can to shut it off to benchmark the relative performance impact, or as last ditch effort to address compile errors resulting from the myriad versions of template-haskell that all purport to be 2.8.
dev-haskell/lens:j - Attempt a parallel build with GHC.
dev-haskell/lens:old-inline-pragmas - Some 7.6.1-rc1 users report their TH still uses old style inline pragmas. This lets them turn on inlining.
dev-haskell/lens:safe - Disallow unsafeCoerce
dev-haskell/lens:test-doctests - Build and run the doctests test-suite.
dev-haskell/lens:test-templates - Build the test templates if we're building tests
dev-haskell/lens:trustworthy - Assert that we are trustworthy when we can
dev-haskell/libssh2:example-client - build example client
dev-haskell/libssh2:gcrypt - add hack that allows to run threaded program when libssh2 is built against gcrypt
dev-haskell/libyaml:no-unicode - Don't enable unicode output. Instead, unicode characters will be escaped.
dev-haskell/libyaml:system-libyaml - Use the system-wide libyaml instead of the bundled copy
dev-haskell/linear:template-haskell - Enable the use of the `template-haskell` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/linux-file-extents:examples - Build examples
dev-haskell/liquiddesugar:devel - Turn on stricter error reporting for development.
dev-haskell/liquidhaskell:deterministic-profiling - Support building against GHC with <https://phabricator.haskell.org/D4388> backported
dev-haskell/log-domain:ffi - Use C FFI to call math.h functions.
dev-haskell/logfloat:useffi - Use bindings to C libraries
dev-haskell/lukko:ofd-locking - Enable open file descriptor locking. Available on Linux (kernel 3.15, released Jun 8, 2014).
dev-haskell/massiv:unsafe-checks - Enable all the bounds checks for unsafe functions at the cost of significant performance penalty
dev-haskell/microlens-th:inlining - Generate inline pragmas
dev-haskell/midi-alsa:buildexamples - Build example executables.
dev-haskell/miso:ios - Cross compile to iOS
dev-haskell/miso:jsaddle - Compile with JSaddle
dev-haskell/miso:tests - Builds Miso's tests
dev-haskell/missingh:network-3 - Use network-3
dev-haskell/mod:semirings - Derive semiring instances
dev-haskell/monad-logger:template-haskell - Enable Template Haskell support
dev-haskell/monad-par:chaselev - Use Chase-Lev Deques for higher-perf work-stealing.
dev-haskell/mongodb:old-network - Enforce <dev-haskell/network-2.9
dev-haskell/monky:ibus - enable ibus example
dev-haskell/monoidal-containers:split-these - Use split these/semialign packages
dev-haskell/nats:binary - enable binary instances
dev-haskell/nats:hashable - enable hashable instances
dev-haskell/nats:template-haskell - enable template_haskell
dev-haskell/netlink:generators - build the generator scripts for constants
dev-haskell/network-data:small-base - Build the split-up base package.
dev-haskell/oeis:network-uri - Get Network.URI from the network-uri package.
dev-haskell/onrmt:brick017 - for Brick version 0.17 or later
dev-haskell/openclwrappers:link - Link against OpenCL library.
dev-haskell/opencv:internal-documentation - Enables documentation generation for internal modules.
dev-haskell/operational:buildexamples - Build example executables.
dev-haskell/optparse-simple:build-example - Build the example executable
dev-haskell/ormolu:dev - Turn on development settings.
dev-haskell/pandoc-citeproc:bibutils - Use Chris Putnam's Bibutils.
dev-haskell/pandoc-citeproc:embed-data-files - Embed locale files into the library (needed for windows packaging).
dev-haskell/pandoc-citeproc:unicode-collation - Use Haskell bindings to the International Components for Unicode (ICU) libraries
dev-haskell/parsec-numbers:parsec1 - use dev-haskell/parsec1 instead of dev-haskell/parsec
dev-haskell/parsers:attoparsec - Enable the use of the `attoparsec` package
dev-haskell/parsers:parsec - Enable the use of the `parsec` package
dev-haskell/path:dev - Turn on development settings
dev-haskell/peggy:build-example - Build an example executable.
dev-haskell/persistent:nooverlap - Use OverlappingInstances only for String. Only developers should use this.
dev-haskell/persistent-mongodb:high-precision-date - Use a time storage with nano second precision.
dev-haskell/persistent-relational-record:test-examples - Test examples
dev-haskell/persistent-sqlite:build-sanity-exe - Build a sanity check test executable
dev-haskell/persistent-sqlite:full-text-search - Enable full-text search in the vendored SQLite library; has no effect if a system SQLite library is used.
dev-haskell/persistent-sqlite:have-usleep - Enable usleep in the vendored SQLite library; has no effect if a system SQLite library is used.
dev-haskell/persistent-sqlite:json1 - Enable json1 in the vendored SQLite library; has no effect if a system SQLite library is used.
dev-haskell/persistent-sqlite:system-sqlite - Use the system-wide sqlite library
dev-haskell/persistent-sqlite:uri-filenames - Enable URI filenames in the vendored SQLite library; has no effect if a system SQLite library is used.
dev-haskell/pipes-key-value-csv:devel - Development mode (-Werror)
dev-haskell/pointed:comonad - optional instances
dev-haskell/pointed:containers - optional instances
dev-haskell/pointed:kan-extensions - optional instances
dev-haskell/pointed:semigroupoids - optional instances
dev-haskell/pointed:semigroups - optional instances
dev-haskell/pointed:stm - optional instances
dev-haskell/pointed:tagged - optional instances
dev-haskell/pointed:transformers - optional instances
dev-haskell/pointed:unordered-containers - optional instances
dev-haskell/polysemy:dump-core - Dump HTML for the core generated by GHC during compilation
dev-haskell/polysemy:error-messages - Provide custom error messages
dev-haskell/polysemy-plugin:corelint - Perform the corelint tests
dev-haskell/poppler:gtk3 - Use GTK3 rather than GTK2
dev-haskell/postgresql-typed:aeson - Support decoding json via aeson.
dev-haskell/postgresql-typed:binary - Use binary protocol encoding via postgresql-binary. This may put additional restrictions on supported PostgreSQL server versions.
dev-haskell/postgresql-typed:hdbc - Provide an HDBC driver backend using the raw PostgreSQL protocol.
dev-haskell/postgresql-typed:md5 - Enable md5 password authentication method.
dev-haskell/postgresql-typed:scientific - Support decoding numeric via scientific (implied by binary).
dev-haskell/postgresql-typed:text - Support Text string values via text (implied by binary).
dev-haskell/postgresql-typed:tls - Enable TLS (SSL) support in PostgreSQL server connections.
dev-haskell/postgresql-typed:uuid - Support the UUID type via uuid (implied by binary).
dev-haskell/pretty-simple:buildexample - Build a small example program showing how to use the pPrint function
dev-haskell/pretty-simple:buildexe - Build a small command line program that pretty-prints anything from stdin.
dev-haskell/publicsuffixlist:create - export Network.PublicSuffixList.Create module
dev-haskell/publicsuffixlist:runtimelist - read suffix list from dist at startup instead of embedding list into library
dev-haskell/quickcheck:template-haskell - Enable additional test modules requiring Template Haskell support.
dev-haskell/quickcheck-classes:aeson - Enable the use of the `aeson` package. This may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/quickcheck-classes:binary-laws - Include infrastructure for testing class laws of binary type constructors. Disabling `unary-laws` while keeping `binary-laws` enabled is an unsupported configuration.
dev-haskell/quickcheck-classes:semigroupoids - Enable the use of the `semigroupoids` package. This may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/quickcheck-classes:semirings - Enable the use of the `semirings` package. This may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/quickcheck-classes:unary-laws - Include infrastructure for testing class laws of unary type constructors.
dev-haskell/quickcheck-classes:vector - Enable the use of the `vector` package. This may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/quickcheck-classes-base:binary-laws - Include infrastructure for testing class laws of binary type constructors. Disabling `unary-laws` while keeping `binary-laws` enabled is an unsupported configuration.
dev-haskell/quickcheck-classes-base:unary-laws - Include infrastructure for testing class laws of unary type constructors.
dev-haskell/rasterific:embed-linear - Embed a reduced version of Linear avoiding a (huge) dep
dev-haskell/reactive-banana-wx:buildexamples - Build example executables.
dev-haskell/recaptcha:network-uri - Get Network.URI from the network-uri package.
dev-haskell/reflection:template-haskell - Enable template haskell.
dev-haskell/reflex:debug-trace-events - Add instrumentation that outputs the stack trace of the definition of an event whenever it is subscribed to. Warning: It is very slow!
dev-haskell/reflex:fast-weak - Use the primitive implementation of FastWeak in GHCJS; note that this requires GHCJS to be built with FastWeak and FastWeakBag present in the RTS, which is not the default
dev-haskell/reflex:reflex-optimizer - Use the GHC plugin Reflex.Optimizer on some of the modules in the package. This is still experimental.
dev-haskell/reflex:split-these - Use split these/semialign packages
dev-haskell/reflex:template-haskell - Use template haskell to generate lenses
dev-haskell/rfc5051:mkunicodedata - build codes generator itself
dev-haskell/rss:network-uri - Get Network.URI from the network-uri package.
dev-haskell/sample-frame:buildbenchmarks - Build and install benchmarking executable.
dev-haskell/sandi:conduit - Build with conduit
dev-haskell/sandi:with-conduit - Build with conduit
dev-haskell/sbv:skip-hlint-tester - Do not build the HLint tester
dev-haskell/scientific:integer-simple - Use the integer-simple package instead of integer-gmp.
dev-haskell/sdl2:no-linear - Do not depend on dev-haskell/linear library (bundled Vect)
dev-haskell/semialign:semigroupoids - Build with semigroupoids dependency
dev-haskell/semigroupoid-extras:profunctors - You can disable the use of the `profunctors` package using `-f-profunctors`. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroupoids:comonad - Enable the use of the `comonad` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Comonad`.
dev-haskell/semigroupoids:containers - Enable the use of the `containers` package. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroupoids:contravariant - Enable the use of the `contravariant` package. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Contravariant`
dev-haskell/semigroupoids:distributive - Enable the use of the `distributive`. Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users. If disabled we will not supply instances of `Distributive`
dev-haskell/semigroupoids:tagged - Enable the use of the `tagged` package. Disabing this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroupoids:unordered-containers - Enable the use of the `unordered-containers` package (and also its dependency `hashable`). Disabling this is an unsupported configuration, but it may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semigroups:binary - provide instances for binary package
dev-haskell/semigroups:transformers - provide instances for transformers package.
dev-haskell/semirings:containers - Enable the use of the `containers` package. Disabling this may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/semirings:hashable - Enisable the use of the `hashable` package. Disabling this may be useful for accelerating builds in sandboxes for expert users. Note: `-hashable` implies `-unordered-containers`, as we are necessarily not able to supply those instances as well.
dev-haskell/semirings:unordered-containers - Enable the use of the `unordered-containers` package. Disabling this may be useful for accelerating builds in sandboxes for expert users.
dev-haskell/sendfile:portable - Explicitly enable portable sendfile support (implemented in Haskell)
dev-haskell/serversession-backend-redis:lib-werror - Add to -Werror to ghc option
dev-haskell/sha:exe - Build a sha1 and a sha384 executable similar to 'md5sum'.
dev-haskell/shake:cloud - Enable cloud build features
dev-haskell/shake:embed-files - Embed data files into the shake library
dev-haskell/shake:portable - Obtain FileTime using portable functions
dev-haskell/shakespeare:test-coffee - Render tests through coffeescript render function.
dev-haskell/shakespeare:test-export - Test export.
dev-haskell/shakespeare:test-roy - Render tests through roy render function.
dev-haskell/shellac-compatline:editline - Use editline instead of readline backend.
dev-haskell/shellmate:download-extras - Build Control.Shell.Download with extras for parsing downloaded HTML, XML, RSS and Atom feeds.
dev-haskell/shelly:lifted - run the tests against Shelly.Lifted
dev-haskell/shuffle:network-uri - Get Network.URI from the network-uri package.
dev-haskell/simple-sendfile:allow-bsd - Allow use of BSD sendfile (disable on GNU/kFreeBSD)
dev-haskell/skein:big-endian - When manually selecting the endianness, use big-endian (default is little-endian).
dev-haskell/skein:force-endianness - Use a manually selected endian when compiling (see flag 'big-endian').
dev-haskell/skein:reference - Use the reference implementation instead of the optimized one.
dev-haskell/skylighting:executable - Build the skylighting executable.
dev-haskell/skylighting-core:executable - Build the skylighting executable.
dev-haskell/snap-core:portable - No non-haskell unportable code.
dev-haskell/snap-server:build-pong - Build a server that just returns "PONG"
dev-haskell/snap-server:openssl - enable https support using dev-haskell/hsopenssl
dev-haskell/snap-server:portable - no non-haskell unportable code.
dev-haskell/speculation:optimize - Enable optimizations
dev-haskell/sphinx:version-1-1-beta - By default this library is compatible with version 2.0 beta of Sphinx. Use this flag if you use Sphinx 1.1
dev-haskell/splitmix:optimised-mixer - Use JavaScript for mix32
dev-haskell/splitmix:random - Providen RandomGen SMGen instance
dev-haskell/sr-extra:network-uri - Get Network.URI from the network-uri package rather than the full network package.
dev-haskell/sr-extra:omit-data - Omit all Data instances
dev-haskell/sr-extra:omit-serialize - Omit all the Serialize instances, on the assumption that we will use SafeCopy instances instead.
dev-haskell/ssh-known-hosts:sample_progs - Build sample programs
dev-haskell/stack:integration-tests - Run the integration test suite.
dev-haskell/stateref:usestm - Include instances for STM types.
dev-haskell/stateref:usetmvar - Include instances for TMVar.
dev-haskell/store-core:force-alignment - No description
dev-haskell/streamly:benchmark - Benchmark build
dev-haskell/streamly:debug - Debug build with asserts enabled
dev-haskell/streamly:dev - Development build
dev-haskell/streamly:examples - Build including examples
dev-haskell/streamly:examples-sdl - Build including SDL examples
dev-haskell/streamly:fusion-plugin - Use fusion plugin for benchmarks and executables
dev-haskell/streamly:llvm - Use llvm backend for better performance
dev-haskell/streamly:no-charts - Disable chart generation
dev-haskell/streamly:no-fusion - Disable rewrite rules
dev-haskell/streamly:streamk - Use CPS style streams when possible
dev-haskell/synthesizer-midi:buildexamples - Build example executables
dev-haskell/system-uuid:cli - Enable command line tool
dev-haskell/tables:test-properties - Enable the properties test-suite.
dev-haskell/tables:transformers2 - Enable old versions of transformers. Non-developers should never set this.
dev-haskell/texmath:executable - Compile test executable.
dev-haskell/texmath:network-uri - Get Network.URI from the network-uri package.
dev-haskell/text-short:asserts - Enable runtime-checks via 'assert'
dev-haskell/th-extras:base4 - Use base-4.0.
dev-haskell/themoviedb:maintainer - Enable settings for the package maintainer.
dev-haskell/threepenny-gui:buildexamples - Build example executables.
dev-haskell/threepenny-gui:rebug - Expose more bugs related to non-determinism.
dev-haskell/thyme:bug-for-bug - bug-for-bug compatibility with time
dev-haskell/thyme:lens - use the full lens package
dev-haskell/thyme:show-internal - instance Show of internal representation
dev-haskell/tls:compat - Accept SSLv2 compatible handshake.
dev-haskell/tls:hans - Use the Haskell Network Stack (HaNS).
dev-haskell/tls:network - Use the base network library.
dev-haskell/transformers-base:orphaninstances - Build instances for orphan datatypes.
dev-haskell/tz:template-haskell - Enable and use template haskell support.
dev-haskell/unagi-chan:compare-benchmarks - 
dev-haskell/unix-compat:old-time - build against old-time package
dev-haskell/uri-encode:network-uri - Get Network.URI from the network-uri package.
dev-haskell/uri-encode:tools - Build executables.
dev-haskell/urlencoded:network-uri - Get Network.URI from the network-uri package
dev-haskell/uuagc:with-loag - Use dev-haskell/minisat external SAT-solver to schedule all Linear Ordered AGs.
dev-haskell/vector:boundschecks - Enable bounds checking
dev-haskell/vector:internalchecks - Enable internal consistency checks at the cost of a significant performance penalty
dev-haskell/vector:unsafechecks - Enable bounds checking in unsafe operations at the cost of a significant performance penalty
dev-haskell/vector-algorithms:bench - Build a benchmarking program.
dev-haskell/vector-algorithms:boundschecks - Enable bounds checking.
dev-haskell/vector-algorithms:internalchecks - Enable internal consistency checks at the cost of a significant performance penalty.
dev-haskell/vector-algorithms:properties - Enable quickcheck tests.
dev-haskell/vector-algorithms:unsafechecks - Enable bounds checking in unsafe operations at the cost of a significant performance penalty.
dev-haskell/vector-instances:hashable - use dev-haskell/hashable
dev-haskell/vinyl-utils:devel - Development mode (-Werror)
dev-haskell/void:safe - Disable effective but unsafe coercions
dev-haskell/wai-app-static:print - print debug info.
dev-haskell/warp:allow-sendfilefd - Allow use of sendfileFd (not available on GNU/kFreeBSD).
dev-haskell/warp:warp-debug - Add additional debuging information
dev-haskell/wcwidth:cli - Enable command line tool
dev-haskell/wl-pprint-terminfo:cursed - Use curses to determine window width..
dev-haskell/wreq:aws - Enable AWS tests
dev-haskell/wreq:httpbin - Install client
dev-haskell/x11:screensaver - whether to build XScreenSaver.
dev-haskell/xeno:libxml2 - Include libxml2 in the benchmarks
dev-haskell/yaml:no-examples - don't build the examples
dev-haskell/yaml:no-exe - don't install the yaml2json executable
dev-haskell/yaml:no-unicode - Don't enable unicode output. Instead, unicode characters will be escaped.
dev-haskell/yaml:system-libyaml - Use system libyaml instead on generic one
dev-haskell/yesod-auth:network-uri - Get Network.URI from the network-uri package
dev-haskell/yesod-form:network-uri - Get Network.URI from the network-uri package
dev-haskell/yesod-static-angular:example - Build the example program
dev-haskell/yi-core:hint - Build with hint (haskell interpreter)
dev-haskell/zip-archive:executable - Build the Zip executable.
dev-haskell/zlib:non-blocking-ffi - Execute FFI calls in the context of haskell thread.
dev-lang/cryptol:relocatable - Don't use the Cabal-provided data directory for looking up Cryptol libraries.
dev-lang/cryptol:server - Build with the ZeroMQ/JSON cryptol-server executable.
dev-lang/elm-compiler:dev - Turn off optimization and make warnings errors
dev-lang/ghc:binary - Install the binary version directly, rather than using it to build the source version.
dev-lang/ghc:elfutils - Enable DWARF-based backtraces using dev-libs/elfutils.
dev-lang/ghc:ghcbootstrap - Internal: Bootstrap GHC from an existing GHC installation.
dev-lang/ghc:ghcmakebinary - Internal: Build binary friendly for redistribution.
dev-lang/ghc:gmp - Use dev-libs/gmp for integer operations (works faster, but an external depend).
dev-lang/ghc:llvm - Enable LLVM backend via sys-devel/llvm.
dev-lang/ghc:numa - Enable NUMA thread balancing policy using sys-process/numactl.
dev-lang/idris:ffi - Build support for libffi.
dev-lang/purescript:release - prevents inclusion of extra info e.g. commit SHA in --version outpu
dev-util/bustle:interactivetests - Build interactive test programs
dev-util/bustle:threaded - Build with support for multithreaded execution.
dev-util/hsdev:docs - build with haddock/hdocs to support scanning docs
dev-util/hsdev:hlint - build with hlint to support linting
dev-vcs/darcs:diff - Use 'lcs' for diff building.
dev-vcs/darcs:http - Use the pure Haskell HTTP package for HTTP support.
dev-vcs/darcs:network-uri - Get Network.URI from the network-uri package.
dev-vcs/darcs:terminfo - Use the terminfo package for enhanced console support.
dev-vcs/darcs:threaded - Use threading and SMP support.
dev-vcs/git-annex:assistant - Enable git-annex assistant and watch command
dev-vcs/git-annex:benchmark - Enable benchmarking
dev-vcs/git-annex:concurrentoutput - Use concurrent-output library (experimental)
dev-vcs/git-annex:debuglocks - Debug location of MVar/STM deadlocks
dev-vcs/git-annex:magicmime - Use libmagic to determine file MIME types
dev-vcs/git-annex:network-3 - Use network-3
dev-vcs/git-annex:network-uri - Get Network.URI from the network-uri package.
dev-vcs/git-annex:pairing - Enable pairing of git annex repositories
dev-vcs/git-annex:s3 - Enable Amazon S3 remote
dev-vcs/git-annex:torrentparser - Use haskell torrent library to parse torrent files
dev-vcs/git-annex:webapp - Enable git-annex webapp
dev-vcs/git-annex:webdav - Enable webdav remote
games-action/nikki:devel - Build without optimizations and executable stripping.
games-puzzle/intricacy:curses - Enables curses user interface
games-puzzle/intricacy:sdl - Enables SDL user interface
games-puzzle/intricacy:server - Builds game server
games-puzzle/intricacy:sound - Enables sound in SDL user interface
media-sound/live-sequencer:gui - Build the wxWidgets GUI for the sequencer.
media-sound/live-sequencer:httpserver - Enable access to modules via a web browser.
net-p2p/combinatorrent:threaded - Build with -threaded.
net-p2p/combinatorrent:threadscope - Build with -eventlog.
sci-mathematics/agda:cpphs - Use cpphs instead of cpp.
sci-mathematics/agda:enable-cluster-counting - Count extended grapheme clusters when generating LaTeX.
sci-mathematics/agda:stdlib - Install the standard library.
sci-mathematics/agda:uhc - Add support for the uhc backend.
sci-mathematics/agda-stdlib:ffi - Install agda-lib-ffi for compilation using the MAlonzo backend
sci-mathematics/cvc4:cln - Use sci-libs/cln as a bignum backend.
sci-mathematics/cvc4:compat - Install CVC3 compatibility modules.
sci-mathematics/cvc4:glpk - Use sci-mathematics/glpk as a linear backend.
www-apps/gitit:network-uri - Get Network.URI from the network-uri package.
www-apps/gitit:plugins - enables optional plugin runtime loader
www-servers/mighttpd2:tls - HTTPS support.
x11-misc/taffybar:network-uri - Get Network.URI from the network-uri package.
x11-misc/xmobar:alsa - Use alsa-mixer to get the volume from soundcards
x11-misc/xmobar:conduit - Use conduit to fetch weather data
x11-misc/xmobar:dbus - Publish a service on the session bus for controlling xmobar
x11-misc/xmobar:inotify - inotify support (modern Linux only). Required for the Mail and MBox plugins
x11-misc/xmobar:mpd - Support mpd plugin
x11-misc/xmobar:mpris - Enables MPRIS v1, v2 support
x11-misc/xmobar:rtsopts - Reduce process wakekups frequency to decrease CPU usage
x11-misc/xmobar:timezone - Enables localized date support
x11-misc/xmobar:uvmeter - Plugin to show UV data for Australia
x11-misc/xmobar:weather - Enable weather plugin
x11-misc/xmobar:wifi - Wireless info support
x11-misc/xmobar:xft - Use Xft to render text. UTF-8 support included
x11-misc/xmobar:xpm - Enable usage of xpm for icons
x11-misc/xmonad-extras:brightness - Enable brightness control plugin
x11-misc/xmonad-extras:eval - Enable eval plugin
x11-misc/xmonad-extras:mpd - Enable mpd plugin
x11-misc/xmonad-extras:volume - Enable Volume plugin
x11-misc/yeganesh:profiling - Build with profiling and -auto-all
x11-wm/xmonad:default-term - Pull terminal specified in default xmonad config to be a bit less hostile by default.
x11-wm/xmonad:no-autorepeat-keys - Allow ignoring of keyboard autorepeat.
x11-wm/xmonad-contrib:testing - Build in testing mode.
