--- a/Bio/Location/LocMap.hs
+++ b/Bio/Location/LocMap.hs
@@ -30,2 +30,3 @@ import Data.Maybe
 import Data.Monoid
+import qualified Data.Semigroup as S
 
@@ -43,5 +44,8 @@ data LocMap a = LocMap !Offset !(IM.IntMap (Loc.Loc, a)) !(IM.IntMap IS.IntSet)
 
+instance S.Semigroup (LocMap a) where
+    (<>) lm0 (LocMap _ keyToLoc1 _) = foldl' (\lm (l,x) -> insert l x lm) lm0 $ IM.elems keyToLoc1
+
 instance Monoid (LocMap a) where
     mempty = LocMap defaultZonesize IM.empty IM.empty
-    mappend lm0 (LocMap _ keyToLoc1 _) = foldl' (\lm (l,x) -> insert l x lm) lm0 $ IM.elems keyToLoc1
+    mappend = (S.<>)
 
