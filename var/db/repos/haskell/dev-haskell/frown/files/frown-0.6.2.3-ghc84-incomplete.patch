--- a/Atom.lhs
+++ b/Atom.lhs
@@ -36,2 +36,3 @@
 > import qualified Prettier as PP
+> import Prelude hiding ((<>))
 
--- a/Case.lhs
+++ b/Case.lhs
@@ -51,3 +51,3 @@
 > import Data.List                   (  partition  )
-> import Prelude                hiding (  lookup  )
+> import Prelude                hiding (  lookup, (<>)  )
 
--- a/Convert.lhs
+++ b/Convert.lhs
@@ -53,2 +53,3 @@
 > import Options
+> import Prelude hiding ((<>))
 
--- a/Grammar.lhs
+++ b/Grammar.lhs
@@ -38,3 +38,3 @@
 > import Base
-> import Prelude                hiding (  concat  )
+> import Prelude                hiding (  concat, (<>)  )
 
--- a/Haskell.lhs
+++ b/Haskell.lhs
@@ -38,3 +38,3 @@
 > import Data.Char
-> import Prelude                hiding (  concat  )
+> import Prelude                hiding (  concat, (<>)  )
 
--- a/LR0.lhs
+++ b/LR0.lhs
@@ -46,3 +46,3 @@
 > import qualified Base
-> import Prelude                hiding (  null  )
+> import Prelude                hiding (  null, (<>)  )
 > import System.IO
--- a/Lexer.lhs
+++ b/Lexer.lhs
@@ -40,5 +40,6 @@
 > import Prelude                hiding (  lex  )
-> import Char                   hiding (  lexLitChar  )
-> import IO
-> import Monad
+> import Data.Char              hiding (  lexLitChar, Space, isSymbol )
+> import qualified Data.Char
+> import System.IO
+> import Control.Monad
 > import Base
--- a/Lib/GetOpt.lhs
+++ b/Lib/GetOpt.lhs
@@ -22,3 +22,3 @@ module GetOpt (ArgOrder(..), OptDescr(..), ArgDescr(..), usageInfo, getOpt) wher
 
-import List(isPrefixOf)
+import Data.List(isPrefixOf)
 
--- a/Lib/OrdUniqListFM.lhs
+++ b/Lib/OrdUniqListFM.lhs
@@ -61,3 +61,3 @@
 > import Prelude		hiding (  length, null, elem, lookup,
->				          foldl, foldr  )
+>				          foldl, foldr, (<>)  )
 > import qualified Prelude
--- a/Lib/OrdUniqListSet.lhs
+++ b/Lib/OrdUniqListSet.lhs
@@ -57,3 +57,3 @@
 
-> import Prelude		hiding (  length, null, elem, foldl, foldr  )
+> import Prelude		hiding (  length, null, elem, foldl, foldr, (<>)  )
 > import qualified Prelude
--- a/Lib/Prettier.lhs
+++ b/Lib/Prettier.lhs
@@ -46,3 +46,3 @@
 > where
-> import Prelude hiding(concat)
+> import Prelude hiding(concat, (<>))
 
--- a/Lookahead.lhs
+++ b/Lookahead.lhs
@@ -47,2 +47,3 @@
 > import Control.Monad                  (  when  )
+> import Prelude hiding ((<>))
 
--- a/Main.lhs
+++ b/Main.lhs
@@ -62,2 +62,3 @@ Compile me with
 > import System.Console.GetOpt
+> import Prelude hiding ((<>))
 
--- a/Optimize.lhs
+++ b/Optimize.lhs
@@ -38,3 +38,3 @@
 > import Base
-> import Maybe                  (  fromMaybe  )
+> import Data.Maybe            (  fromMaybe  )
 
--- a/Quote.lhs
+++ b/Quote.lhs
@@ -33,3 +33,3 @@
 > import Lexer
-> import IO
+> import System.IO
 > import Options
