diff --git a/src/Network/HTTP/Download/Verified.hs b/src/Network/HTTP/Download/Verified.hs
index fad8236..4e56361 100644
--- a/src/Network/HTTP/Download/Verified.hs
+++ b/src/Network/HTTP/Download/Verified.hs
@@ -54,3 +54,3 @@ import              Network.HTTP.Simple (Request, HttpException, httpSink, getRe
 import              Network.HTTP.Types.Header (hContentLength, hContentMD5)
-import              Path
+import              Path hiding ((<.>))
 import              Prelude -- Fix AMP warning
diff --git a/src/Options/Applicative/Complicated.hs b/src/Options/Applicative/Complicated.hs
index dded341..dd8d9be 100644
--- a/src/Options/Applicative/Complicated.hs
+++ b/src/Options/Applicative/Complicated.hs
@@ -1 +1,2 @@
+{-# LANGUAGE CPP #-}
 -- | Simple interface to complicated program arguments.
@@ -15,3 +16,3 @@ module Options.Applicative.Complicated
 import           Control.Monad.Trans.Class (lift)
-import           Control.Monad.Trans.Either
+import           Control.Monad.Trans.Except
 import           Control.Monad.Trans.Writer
@@ -24,2 +25,5 @@ import           System.Environment
 
+#define    EitherT    ExceptT
+#define runEitherT runExceptT
+
 -- | Generate and execute a complicated options parser.
diff --git a/src/Stack/Fetch.hs b/src/Stack/Fetch.hs
index 1439d11..efe8515 100644
--- a/src/Stack/Fetch.hs
+++ b/src/Stack/Fetch.hs
@@ -66,3 +66,3 @@ import              Data.Word (Word64)
 import              Network.HTTP.Download
-import              Path
+import              Path hiding ((<.>))
 import              Path.Extra (toFilePathNoTrailingSep)
diff --git a/src/Stack/Package.hs b/src/Stack/Package.hs
index a624749..5fa2d00 100644
--- a/src/Stack/Package.hs
+++ b/src/Stack/Package.hs
@@ -43,3 +43,3 @@ module Stack.Package
 import           Prelude ()
-import           Prelude.Compat
+import           Prelude.Compat hiding ((<>))
 
diff --git a/src/Stack/Sig/GPG.hs b/src/Stack/Sig/GPG.hs
index 7f715af..7cf0f69 100644
--- a/src/Stack/Sig/GPG.hs
+++ b/src/Stack/Sig/GPG.hs
@@ -18,3 +18,3 @@ module Stack.Sig.GPG (gpgSign, gpgVerify) where
 import Prelude ()
-import Prelude.Compat
+import Prelude.Compat hiding ((<>))
 
diff --git a/src/Stack/Sig/Sign.hs b/src/Stack/Sig/Sign.hs
index 75c4c9a..103ac6d 100644
--- a/src/Stack/Sig/Sign.hs
+++ b/src/Stack/Sig/Sign.hs
@@ -19,3 +19,3 @@ module Stack.Sig.Sign (sign, signPackage, signTarBytes) where
 import Prelude ()
-import Prelude.Compat
+import Prelude.Compat hiding ((<>))
 
diff --git a/src/Stack/Solver.hs b/src/Stack/Solver.hs
index 34bb133..4354904 100644
--- a/src/Stack/Solver.hs
+++ b/src/Stack/Solver.hs
@@ -20,3 +20,3 @@ module Stack.Solver
 import           Prelude ()
-import           Prelude.Compat
+import           Prelude.Compat hiding ((<>))
 
diff --git a/src/Stack/Types/Sig.hs b/src/Stack/Types/Sig.hs
index 0cc70ee..4f48d7f 100644
--- a/src/Stack/Types/Sig.hs
+++ b/src/Stack/Types/Sig.hs
@@ -18,3 +18,3 @@ module Stack.Types.Sig
 import Prelude ()
-import Prelude.Compat
+import Prelude.Compat hiding ((<>))
 
diff --git a/src/main/Main.hs b/src/main/Main.hs
index a61a1cb..9d9f452 100644
--- a/src/main/Main.hs
+++ b/src/main/Main.hs
@@ -22,3 +22,3 @@ import           Control.Monad.Logger
 import           Control.Monad.Reader (local)
-import           Control.Monad.Trans.Either (EitherT)
+import           Control.Monad.Trans.Except (ExceptT)
 import           Control.Monad.Writer.Lazy (Writer)
@@ -479,3 +479,3 @@ commandLineHandler currentDir progName isInterpreter = complicatedOptions
 type AddCommand =
-    EitherT (GlobalOpts -> IO ()) (Writer (Mod CommandFields (GlobalOpts -> IO (), GlobalOptsMonoid))) ()
+    ExceptT (GlobalOpts -> IO ()) (Writer (Mod CommandFields (GlobalOpts -> IO (), GlobalOptsMonoid))) ()
 
