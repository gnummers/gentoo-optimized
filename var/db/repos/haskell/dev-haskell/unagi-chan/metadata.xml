<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="project">
		<email>haskell@gentoo.org</email>
		<name>Gentoo Haskell</name>
	</maintainer>
	<use>
		<flag name="compare-benchmarks"></flag>
	</use>
	<longdescription>
		This library provides implementations of concurrent FIFO queues (for both
		general boxed and primitive unboxed values) that are fast, perform well
		under contention, and offer a Chan-like interface. The library may be of
		limited usefulness outside of x86 architectures where the fetch-and-add
		instruction is not available.
		
		We export several variations of our design; some support additional
		functionality while others try for lower latency by removing features or
		making them more restrictive (e.g. in the @Unboxed@ variants).
		
		- @Unagi@: a general-purpose near drop-in replacement for @Chan@.
		
		- @Unagi.Unboxed@: like @Unagi@ but specialized for primitive types; this
		may perform better if a queue grows very large.
		
		- @Unagi.Bounded@: a bounded variant with blocking and non-blocking writes,
		and other functionality where a notion of the queue&#39;s capacity is
		required.
		
		- @Unagi.NoBlocking@: lowest latency implementations for when blocking
		reads aren&#39;t required.
		
		- @Unagi.NoBlocking.Unboxed@: like @Unagi.NoBlocking@ but for primitive
		types.
		
		Some of these may be deprecated in the future if they are found to provide
		little performance benefit, or no unique features; you should benchmark and
		experiment with them for your use cases, and please submit pull requests
		for additions to the benchmark suite that reflect what you find.
		
		Here is an example benchmark measuring the time taken to concurrently write
		and read 100,000 messages, with work divided amongst increasing number of
		readers and writers, comparing against the top-performing queues in the
		standard libraries. The inset graph shows a zoomed-in view on the
		implementations here.
		
		&lt;&lt;http://i.imgur.com/J5rLUFn.png&gt;&gt;
		
	</longdescription>
</pkgmetadata>
