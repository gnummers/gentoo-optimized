diff --git a/src/Turtle/Line.hs b/src/Turtle/Line.hs
index 2328fc3..ccbb61f 100644
--- a/src/Turtle/Line.hs
+++ b/src/Turtle/Line.hs
@@ -31,2 +31,3 @@ import Control.Exception
 import qualified Data.List.NonEmpty
+import qualified Data.Semigroup as S
 
@@ -62,3 +63,3 @@ instance Exception NewlineForbidden
 newtype Line = Line Text
-  deriving (Eq, Ord, Show, Monoid)
+  deriving (Eq, Ord, Show, S.Semigroup, Monoid)
 
diff --git a/src/Turtle/Pattern.hs b/src/Turtle/Pattern.hs
index b9ad77c..9bb61fa 100644
--- a/src/Turtle/Pattern.hs
+++ b/src/Turtle/Pattern.hs
@@ -120,2 +120,3 @@ import qualified Data.Text as Text
 import Prelude -- Fix redundant import warnings
+import qualified Data.Semigroup as S
 
@@ -125,2 +126,5 @@ newtype Pattern a = Pattern { runPattern :: StateT Text [] a }
 
+instance Monoid a => S.Semigroup (Pattern a) where
+    (<>) = liftA2 mappend
+
 instance Monoid a => Monoid (Pattern a) where
diff --git a/src/Turtle/Shell.hs b/src/Turtle/Shell.hs
index 1ffad68..c1afb1f 100644
--- a/src/Turtle/Shell.hs
+++ b/src/Turtle/Shell.hs
@@ -83,2 +83,3 @@ import Data.String (IsString(..))
 import Prelude -- Fix redundant import warnings
+import qualified Data.Semigroup as S
 
@@ -153,2 +154,5 @@ instance MonadManaged Shell where
 
+instance Monoid a => S.Semigroup (Shell a) where
+    (<>) = liftA2 mappend
+
 instance Monoid a => Monoid (Shell a) where
