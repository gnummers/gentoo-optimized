From a62df1c957b477dd8ae33374ccd3d9c4011c1b3c Mon Sep 17 00:00:00 2001
From: Ryan Trinkle <ryan.trinkle@gmail.com>
Date: Mon, 22 Jan 2018 17:39:02 -0500
Subject: [PATCH] Make jsaddle-warp compatible with websockets-0.12

---
 jsaddle-warp/jsaddle-warp.cabal               |  2 ++
 .../Language/Javascript/JSaddle/WebSockets.hs |  7 +++--
 .../Javascript/JSaddle/WebSockets/Compat.hs   | 29 +++++++++++++++++++
 3 files changed, 35 insertions(+), 3 deletions(-)
 create mode 100644 jsaddle-warp/src/Language/Javascript/JSaddle/WebSockets/Compat.hs

diff --git a/jsaddle-warp/jsaddle-warp.cabal b/jsaddle-warp/jsaddle-warp.cabal
index 6c267cf..3157bef 100644
--- a/jsaddle-warp.cabal
+++ b/jsaddle-warp.cabal
@@ -24,6 +24,8 @@ library
     if !impl(ghcjs -any)
         exposed-modules:
             Language.Javascript.JSaddle.WebSockets
+        other-modules:
+            Language.Javascript.JSaddle.WebSockets.Compat
         build-depends:
             aeson >=0.8.0.2 && <1.3,
             bytestring >=0.10.6.0 && <0.11,
diff --git a/jsaddle-warp/src/Language/Javascript/JSaddle/WebSockets.hs b/jsaddle-warp/src/Language/Javascript/JSaddle/WebSockets.hs
index b0770f1..b22507c 100644
--- a/src/Language/Javascript/JSaddle/WebSockets.hs
+++ b/src/Language/Javascript/JSaddle/WebSockets.hs
@@ -38,7 +38,6 @@ import Network.Wai
 import Network.WebSockets
        (defaultConnectionOptions, ConnectionOptions(..), sendTextData,
         receiveDataMessage, acceptRequest, ServerApp, sendPing)
-import qualified Network.WebSockets as WS (DataMessage(..))
 import Network.Wai.Handler.WebSockets (websocketsOr)
 
 import Language.Javascript.JSaddle.Types (JSM(..), JSContextRef(..))
@@ -65,6 +64,8 @@ import Foreign.Store (newStore, readStore, lookupStore)
 import Language.Javascript.JSaddle (askJSM)
 import Control.Monad.IO.Class (MonadIO(..))
 
+import Language.Javascript.JSaddle.WebSockets.Compat (getTextMessageByteString)
+
 jsaddleOr :: ConnectionOptions -> JSM () -> Application -> IO Application
 jsaddleOr opts entryPoint otherApp = do
     syncHandlers <- newIORef M.empty
@@ -77,8 +78,8 @@ jsaddleOr opts entryPoint otherApp = do
                     liftIO $ sendTextData conn (encode syncKey)
                     entryPoint
             _ <- forkIO . forever $
-                receiveDataMessage conn >>= \case
-                    (WS.Text t) ->
+                receiveDataMessage conn >>= \msg -> case getTextMessageByteString msg of
+                    Just t ->
                         case decode t of
                             Nothing -> error $ "jsaddle Results decode failed : " <> show t
                             Just r  -> processResult r
diff --git a/jsaddle-warp/src/Language/Javascript/JSaddle/WebSockets/Compat.hs b/jsaddle-warp/src/Language/Javascript/JSaddle/WebSockets/Compat.hs
new file mode 100644
index 0000000..87eb58d
--- /dev/null
+++ b/src/Language/Javascript/JSaddle/WebSockets/Compat.hs
@@ -0,0 +1,29 @@
+{-# LANGUAGE CPP #-}
+-----------------------------------------------------------------------------
+--
+-- Module      :  Language.Javascript.JSaddle.WebSockets.Compat
+-- Copyright   :  (c) Hamish Mackenzie
+-- License     :  MIT
+--
+-- Maintainer  :  Hamish Mackenzie <Hamish.K.Mackenzie@googlemail.com>
+--
+-- | This module is necessary to harmonize various versions of the websockets
+-- package; we can't do this CPP inline in
+-- Language.Javascript.JSaddle.WebSockets because that module uses multi-line
+-- strings, which are incompatible with CPP
+--
+-----------------------------------------------------------------------------
+module Language.Javascript.JSaddle.WebSockets.Compat where
+
+import Data.ByteString.Lazy (ByteString)
+import qualified Network.WebSockets as WS (DataMessage(..))
+
+getTextMessageByteString :: WS.DataMessage -> Maybe ByteString
+getTextMessageByteString msg = case msg of
+#if MIN_VERSION_websockets(0,11,0)
+    (WS.Text t _) ->
+#else
+    (WS.Text t) ->
+#endif
+        Just t
+    _ -> Nothing
-- 
2.18.0

