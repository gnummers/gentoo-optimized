<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="project">
		<email>haskell@gentoo.org</email>
		<name>Gentoo Haskell</name>
	</maintainer>
	<longdescription>
		A Haskell web framework inspired by Ruby's Sinatra, using WAI and Warp.
		
		@
		&amp;#123;-&amp;#35; LANGUAGE OverloadedStrings &amp;#35;-&amp;#125;
		
		import Web.Scotty
		
		import Data.Monoid (mconcat)
		
		main = scotty 3000 $ do
		&amp;#32;&amp;#32;get &amp;#34;/:word&amp;#34; $ do
		&amp;#32;&amp;#32;&amp;#32;&amp;#32;beam &lt;- param &amp;#34;word&amp;#34;
		&amp;#32;&amp;#32;&amp;#32;&amp;#32;html $ mconcat [&amp;#34;&amp;#60;h1&amp;#62;Scotty, &amp;#34;, beam, &amp;#34; me up!&amp;#60;/h1&amp;#62;&amp;#34;]
		@
		
		
		Scotty is the cheap and cheerful way to write RESTful, declarative web applications.
		
		* A page is as simple as defining the verb, url pattern, and Text content.
		
		* It is template-language agnostic. Anything that returns a Text value will do.
		
		* Conforms to WAI Application interface.
		
		* Uses very fast Warp webserver by default.
		
		As for the name: Sinatra + Warp = Scotty.
		
		[WAI] &lt;http://hackage.haskell.org/package/wai&gt;
		
		[Warp] &lt;http://hackage.haskell.org/package/warp&gt;
	</longdescription>
</pkgmetadata>
