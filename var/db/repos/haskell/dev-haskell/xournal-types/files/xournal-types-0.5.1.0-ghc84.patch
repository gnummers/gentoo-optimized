--- a/src/Data/Xournal/BBox.hs
+++ b/src/Data/Xournal/BBox.hs
@@ -28,2 +28,3 @@ import qualified Prelude as Prelude (fst,snd)
 import Data.Serialize
+import qualified Data.Semigroup as S
 
@@ -162,2 +163,10 @@ newtype UnionBBox = Union { unUnion :: ULMaybe BBox }
                     deriving (Show,Eq)
+
+instance S.Semigroup (IntersectBBox) where 
+  (Intersect Bottom) <> _ = Intersect Bottom
+  _ <> (Intersect Bottom) = Intersect Bottom 
+  (Intersect Top) <> x = x 
+  x <> (Intersect Top) = x 
+  (Intersect (Middle x)) <> (Intersect (Middle y)) = 
+    maybe (Intersect Bottom) (Intersect . Middle) (x `intersectBBox` y)
      
@@ -171,2 +180,9 @@ instance Monoid (IntersectBBox) where
   mempty = Intersect Top 
+
+instance S.Semigroup (UnionBBox) where
+  (Union Bottom) <> x = x 
+  x <> (Union Bottom) = x
+  (Union Top) <> _ = Union Top
+  _ <> (Union Top) = Union Top 
+  (Union (Middle x)) <> (Union (Middle y)) = Union (Middle (x `unionBBox` y))
   
