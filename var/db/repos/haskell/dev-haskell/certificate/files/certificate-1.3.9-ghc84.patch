--- a/Data/Certificate/X509/Cert.hs
+++ b/Data/Certificate/X509/Cert.hs
@@ -53,2 +53,3 @@ import qualified Crypto.Types.PubKey.RSA as RSA
 import qualified Crypto.Types.PubKey.DSA as DSA
+import qualified Data.Semigroup as S
 
@@ -111,2 +112,5 @@ newtype DistinguishedName = DistinguishedName { getDistinguishedElements :: [(OI
 
+instance S.Semigroup DistinguishedName where
+    (<>) (DistinguishedName l1) (DistinguishedName l2) = DistinguishedName (l1++l2)
+
 instance Monoid DistinguishedName where
--- a/Data/CertificateStore.hs
+++ b/Data/CertificateStore.hs
@@ -13,2 +13,3 @@ import qualified Data.Map as M
 import Control.Monad (mplus)
+import qualified Data.Semigroup as S
 
@@ -18,2 +19,8 @@ data CertificateStore = CertificateStore (M.Map DistinguishedName X509)
 
+instance S.Semigroup CertificateStore where
+    (<>) s1@(CertificateStore _)   s2@(CertificateStore _) = CertificateStores [s1,s2]
+    (<>)    (CertificateStores l)  s2@(CertificateStore _) = CertificateStores (l ++ [s2])
+    (<>) s1@(CertificateStore _)   (CertificateStores l)   = CertificateStores ([s1] ++ l)
+    (<>)    (CertificateStores l1) (CertificateStores l2)  = CertificateStores (l1 ++ l2)
+
 instance Monoid CertificateStore where
