diff --git a/src/Data/Table.hs b/src/Data/Table.hs
index d5de28e..b5978e3 100644
--- a/src/Data/Table.hs
+++ b/src/Data/Table.hs
@@ -101,2 +101,3 @@ import Data.Foldable as F hiding (foldl1)
 import Data.Function (on)
+import Data.Functor.Contravariant (phantom)
 import Data.Hashable
@@ -576,3 +577,3 @@ instance (Applicative f, Contravariant f) => Group f (Key Inverted t (Set a)) t
   group ky f (Table m)  = case ixTab m ky of
-    InvertedMap idx -> coerce $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ M.toList idx
+    InvertedMap idx -> phantom $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ M.toList idx
 
@@ -581,3 +582,3 @@ instance (Applicative f, Contravariant f, a ~ Int) => Group f (Key InvertedInt t
   group ky f (Table m)  = case ixTab m ky of
-    InvertedIntMap idx -> coerce $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ IM.toList idx
+    InvertedIntMap idx -> phantom $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ IM.toList idx
 
@@ -586,3 +587,3 @@ instance (Applicative f, Contravariant f) => Group f (Key InvertedHash t (HashSe
   group ky f (Table m)  = case ixTab m ky of
-    InvertedHashMap idx -> coerce $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ HM.toList idx
+    InvertedHashMap idx -> phantom $ traverse (\(k,vs) -> indexed f k (fromList vs)) $ HM.toList idx
 
diff --git a/tables.cabal b/tables.cabal
index 0dbe1d5..b2f4059 100644
--- a/tables.cabal
+++ b/tables.cabal
@@ -52,2 +52,3 @@ library
     comonad              >= 4   && < 5,
+    contravariant        >= 1.3.3,
     containers           >= 0.4 && < 0.6,
