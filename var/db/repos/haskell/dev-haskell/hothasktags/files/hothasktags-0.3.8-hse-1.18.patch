diff --git a/Main.hs b/Main.hs
index 2275135..3df2362 100644
--- a/Main.hs
+++ b/Main.hs
@@ -6,3 +6,3 @@ module Main where
 import Options.Applicative
-import qualified Language.Haskell.Exts.Annotated as L
+import qualified Language.Haskell.Exts as L
 import System.IO
@@ -32,3 +32,3 @@ localDecls (L.Module _ _ _ _ decls) = Map.fromList $ concatMap extract decls
     extract (L.TypeDecl _ hd _) = extractDeclHead hd
-    extract (L.TypeFamDecl _ hd _) = extractDeclHead hd
+    extract (L.TypeFamDecl _ hd _ _) = extractDeclHead hd
     extract (L.DataDecl _ _ _ hd decls' _) =
@@ -75,3 +75,3 @@ localDecls (L.Module _ _ _ _ decls) = Map.fromList $ concatMap extract decls
     extractClassDecl (L.ClsDataFam _ _ hd _) = extractDeclHead hd
-    extractClassDecl (L.ClsTyFam _ hd _) = extractDeclHead hd
+    extractClassDecl (L.ClsTyFam _ hd _ _) = extractDeclHead hd
     extractClassDecl _ = []
@@ -136,5 +136,5 @@ exported mod'@(L.Module _
     matchesSpec nm (L.EAbs _ _ (L.UnQual _ (L.Ident _ name'))) = nm == name'
-    matchesSpec nm (L.EThingAll _ (L.UnQual _ (L.Ident _ name'))) =
+    matchesSpec nm (L.EThingWith _ (L.EWildcard _ _) (L.UnQual _ (L.Ident _ name')) _) =
       nm == name' || (nm `elem` thingMembers mod' name')
-    matchesSpec nm (L.EThingWith _ (L.UnQual _ (L.Ident _ name')) cnames) =
+    matchesSpec nm (L.EThingWith _ (L.NoWildcard _) (L.UnQual _ (L.Ident _ name')) cnames) =
       nm == name' || any (matchesCName nm) cnames
diff --git a/hothasktags.cabal b/hothasktags.cabal
index a1d1ebf..a6d3edc 100644
--- a/hothasktags.cabal
+++ b/hothasktags.cabal
@@ -40,3 +40,3 @@ executable hothasktags
         Glob,
-        haskell-src-exts >= 1.17 && < 1.18,
+        haskell-src-exts >= 1.18 && < 1.20,
         cpphs >= 1.11 && < 1.21,
