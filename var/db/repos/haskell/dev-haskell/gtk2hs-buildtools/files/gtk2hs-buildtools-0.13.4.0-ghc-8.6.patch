commit 8ebc79573158fb5265ca40a322ed9f018c42953e
Author: Vanessa McHale <vanessa.mchale@iohk.io>
Date:   Thu Sep 27 23:18:02 2018 -0500

    fix builds + ci

diff --git a/tools/gtk2hs-buildtools.cabal b/tools/gtk2hs-buildtools.cabal
index 5e380cc8..a7b04410 100644
--- a/gtk2hs-buildtools.cabal
+++ b/gtk2hs-buildtools.cabal
@@ -44,6 +44,8 @@ Library
                          filepath >= 1.3.0.0,
                          directory >= 1.2.0.0,
                          containers >= 0.5.5.1
+        if !impl(ghc >= 8.0)
+          build-depends: fail
         if impl(ghc >= 7.7)
           build-depends: hashtables
         build-tools:     alex >= 3.0.1, happy >= 1.18.9

commit 657fb2799df9dc81c050e3d45a37f808c5334e08
Author: Vanessa McHale <vanessa.mchale@iohk.io>
Date:   Thu Sep 27 22:42:40 2018 -0500

    fix build for GHC 8.6.1

diff --git a/tools/c2hs/base/state/StateBase.hs b/tools/c2hs/base/state/StateBase.hs
index aebd885b..c07d29fc 100644
--- a/c2hs/base/state/StateBase.hs
+++ b/c2hs/base/state/StateBase.hs
@@ -58,6 +58,7 @@ where
 
 import Control.Applicative (Applicative(..))
 import Control.Monad (liftM, ap)
+import Control.Monad.Fail (MonadFail (..))
 
 import Position   (Position)
 import UNames     (NameSupply)
@@ -110,6 +111,8 @@ instance Monad (PreCST e s) where
   (>>=)  = (+>=)
   (>>)   = (+>)
 
+instance MonadFail (PreCST e s) where
+  fail = error
 
 -- unwrapper coercion function (EXPORTED)
 --
diff --git a/tools/c2hs/c/CParserMonad.hs b/tools/c2hs/c/CParserMonad.hs
index 12c4ffa6..ef720b93 100644
--- a/c2hs/c/CParserMonad.hs
+++ b/c2hs/c/CParserMonad.hs
@@ -63,6 +63,7 @@ import Idents    (Ident, lexemeToIdent, identToLexeme)
 
 import Control.Applicative (Applicative(..))
 import Control.Monad (liftM, ap)
+import Control.Monad.Fail (MonadFail (..))
 import Data.Set  (Set)
 import qualified Data.Set as Set (fromList, insert, member, delete)
 
@@ -83,6 +84,9 @@ data PState = PState {
 
 newtype P a = P { unP :: PState -> ParseResult a }
 
+instance MonadFail P where
+  fail m = getPos >>= \pos -> failP pos [m]
+
 instance Functor P where
   fmap = liftM
 

