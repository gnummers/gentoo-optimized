diff --git a/Setup.hs b/Setup.hs
index 7cbd484..8de2ce9 100644
--- a/Setup.hs
+++ b/Setup.hs
@@ -1,3 +1,3 @@
 #!/usr/bin/env runhaskell
-{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances #-}
+{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances, CPP #-}
 
@@ -22,3 +22,3 @@ main = defaultMainWithHooks simpleUserHooks {
     bi <- psqlBuildInfo lbi
-    
+
     return lbi {
@@ -29,19 +29,6 @@ main = defaultMainWithHooks simpleUserHooks {
 
--- 'ConstOrId' is a @Cabal-1.16@ vs @Cabal-1.18@ compatibility hack,
--- 'programFindLocation' has a new (unused in this case)
--- parameter. 'ConstOrId' adds this parameter when types say it is
--- mandatory.
-class ConstOrId a b where
-    constOrId :: a -> b
-
-instance ConstOrId a a where
-    constOrId = id
-
-instance ConstOrId a (b -> a) where
-    constOrId = const
-
 pgconfigProgram = (simpleProgram "pgconfig or pg_config") {
-    programFindLocation = \verbosity -> constOrId $ do
-      pgconfig  <- findProgramLocation verbosity "pgconfig"
-      pg_config <- findProgramLocation verbosity "pg_config"
+    programFindLocation = \verbosity path -> do
+      pgconfig  <- findProgramOnSearchPath verbosity path "pgconfig"
+      pg_config <- findProgramOnSearchPath verbosity path "pg_config"
       return (pgconfig `mplus` pg_config)
