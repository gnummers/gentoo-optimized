<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<maintainer type="project">
		<email>haskell@gentoo.org</email>
		<name>Gentoo Haskell</name>
	</maintainer>
	<longdescription>
		Forward-, reverse- and mixed- mode automatic differentiation combinators with a common API.
		
		Type-level \"branding\" is used to both prevent the end user from confusing infinitesimals
		and to limit unsafe access to the implementation details of each Mode.
		
		Each mode has a separate module full of combinators.
		
		* @Numeric.AD.Mode.Forward@ provides basic forward-mode AD. It is good for computing simple derivatives.
		
		* @Numeric.AD.Mode.Reverse@ uses benign side-effects to compute reverse-mode AD. It is good for computing gradients in one pass.
		
		* @Numeric.AD.Mode.Sparse@ computes a sparse forward-mode AD tower. It is good for higher derivatives or large numbers of outputs.
		
		* @Numeric.AD.Mode.Tower@ computes a dense forward-mode AD tower useful for higher derivatives of single input functions.
		
		* @Numeric.AD@ computes using whichever mode or combination thereof is suitable to each individual combinator.
		
		While not every mode can provide all operations, the following basic operations are supported, modified as
		appropriate by the suffixes below:
		
		* 'grad' computes the gradient (partial derivatives) of a function at a point.
		
		* 'jacobian' computes the Jacobian matrix of a function at a point.
		
		* 'diff' computes the derivative of a function at a point.
		
		* 'du' computes a directional derivative of a function at a point.
		
		* 'hessian' computes the Hessian matrix (matrix of second partial derivatives) of a function at a point.
		
		The following suffixes alter the meanings of the functions above as follows:
		
		* @\'@ -- also return the answer
		
		* @With@ lets the user supply a function to blend the input with the output
		
		* @F@ is a version of the base function lifted to return a 'Traversable' (or 'Functor') result
		
		* @s@ means the function returns all higher derivatives in a list or f-branching 'Stream'
		
		* @T@ means the result is transposed with respect to the traditional formulation.
		
		* @0@ means that the resulting derivative list is padded with 0s at the end.
		
		/Changes since 1.3/:
		
		* Moved the contents of @Numeric.AD.Mode.Mixed@ into @Numeric.AD@
		
		* Split off @Numeric.AD.Variadic@ for the variadic combinators
		
		* Removed the @UU@, @FU@, @UF@, and @FF@ type aliases.
		
		* Stopped exporting the types for @Mode@ and @AD@ from almost every module. Import @Numeric.AD.Types@ if necessary.
		
		* Renamed @Tensors@ to @Jet@
		
		* Dependency bump to be compatible with ghc 7.4.1 and mtl 2.1
		
		* More aggressive zero tracking.
		
		* @diff (**n) 0@ for constant n and @diff (0**)@ both now yield the correct answer for all modes.
	</longdescription>
</pkgmetadata>
