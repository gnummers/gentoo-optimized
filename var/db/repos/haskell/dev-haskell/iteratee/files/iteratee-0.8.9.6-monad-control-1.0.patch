diff --git a/iteratee.cabal b/iteratee.cabal
index 4113bf1..1b3ed47 100644
--- a/iteratee.cabal
+++ b/iteratee.cabal
@@ -47,7 +47,7 @@ library
   build-depends:
     base                      >= 3       && < 6,
     ListLike                  >= 3.0     && < 5,
-    monad-control             == 0.3.* ,
+    monad-control             >= 1.0,
     bytestring                >= 0.9     && < 0.11,
     containers                >= 0.2     && < 0.6,
     exceptions                >= 0.3     && < 0.7,
diff --git a/src/Data/Iteratee/Base.hs b/src/Data/Iteratee/Base.hs
index e5f7b67..a09fdd6 100644
--- a/src/Data/Iteratee/Base.hs
+++ b/src/Data/Iteratee/Base.hs
@@ -193,24 +193,22 @@ instance (MonadMask m, Nullable s, NullPoint s) =>
     uninterruptibleMask q = Iteratee $ \od oc -> CIO.uninterruptibleMask $ \u -> runIter (q $ ilift u) od oc
 
 instance forall s. (NullPoint s, Nullable s) => MonadTransControl (Iteratee s) where
-  newtype StT (Iteratee s) x =
-    StIter { unStIter :: Either (x, Stream s) (Maybe SomeException) }
-  liftWith f = lift $ f $ \t -> liftM StIter
+  type StT (Iteratee s) x =
+    (Either (x, Stream s) (Maybe SomeException))
+  liftWith f = lift $ f $ \t -> liftM id
       (runIter t (\x s -> return $ Left (x,s))
                  (\_ e -> return $ Right e) )
   restoreT = join . lift . liftM
                (either (uncurry idone)
                        (te . fromMaybe (iterStrExc
-                          "iteratee: error in MonadTransControl instance"))
-                      . unStIter )
+                          "iteratee: error in MonadTransControl instance")))
   {-# INLINE liftWith #-}
   {-# INLINE restoreT #-}
 
 instance (MonadBaseControl b m, Nullable s) => MonadBaseControl b (Iteratee s m) where
-  newtype StM (Iteratee s m) a =
-    StMIter { unStMIter :: ComposeSt (Iteratee s) m a}
-  liftBaseWith = defaultLiftBaseWith StMIter
-  restoreM     = defaultRestoreM unStMIter
+  type StM (Iteratee s m) a = ComposeSt (Iteratee s) m a
+  liftBaseWith = defaultLiftBaseWith
+  restoreM     = defaultRestoreM
 
 te :: SomeException -> Iteratee s m a
 te e = icont (const (te e)) (Just e)
