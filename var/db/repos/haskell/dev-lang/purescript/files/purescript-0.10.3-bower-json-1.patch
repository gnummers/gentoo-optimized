diff --git a/src/Language/PureScript/Docs/Types.hs b/src/Language/PureScript/Docs/Types.hs
index 506d24c..4d570a9 100644
--- a/src/Language/PureScript/Docs/Types.hs
+++ b/src/Language/PureScript/Docs/Types.hs
@@ -372,3 +372,3 @@ asInPackage :: Parse BowerError a -> Parse BowerError (InPackage a)
 asInPackage inner =
-  build <$> key "package" (perhaps (withString parsePackageName))
+  build <$> key "package" (perhaps (withText parsePackageName))
         <*> key "item" inner
@@ -489,3 +489,3 @@ asResolvedDependencies :: Parse PackageError [(PackageName, Version)]
 asResolvedDependencies =
-  eachInObjectWithKey (mapLeft ErrorInPackageMeta . parsePackageName . T.unpack) asVersion
+  eachInObjectWithKey (mapLeft ErrorInPackageMeta . parsePackageName) asVersion
   where
@@ -514,3 +514,3 @@ instance A.ToJSON a => A.ToJSON (Package a) where
       , "bookmarks"            .= map (fmap (first P.runModuleName)) pkgBookmarks
-      , "resolvedDependencies" .= assocListToJSON (T.pack . runPackageName)
+      , "resolvedDependencies" .= assocListToJSON runPackageName
                                                   (T.pack . showVersion)
diff --git a/src/Language/PureScript/Publish.hs b/src/Language/PureScript/Publish.hs
index 83589ba..ba90759 100644
--- a/src/Language/PureScript/Publish.hs
+++ b/src/Language/PureScript/Publish.hs
@@ -210,4 +210,4 @@ getBowerRepositoryInfo = either (userError . BadRepositoryField) return . tryExt
         unless (repositoryType == "git")
-          (Left (BadRepositoryType repositoryType))
-        maybe (Left NotOnGithub) Right (extractGithub repositoryUrl)
+          (Left ((BadRepositoryType . T.unpack) repositoryType))
+        maybe (Left NotOnGithub) Right ((extractGithub . T.unpack) repositoryUrl)
 
@@ -225,4 +225,4 @@ checkLicense pkgMeta =
 --
-isValidSPDX :: String -> Bool
-isValidSPDX = (== 1) . length . SPDX.parseExpression
+isValidSPDX :: T.Text -> Bool
+isValidSPDX = (== 1) . length . SPDX.parseExpression . T.unpack
 
@@ -322,3 +322,3 @@ asResolvedDependencies = nubBy ((==) `on` fst) <$> go
       keyMay "dependencies" $
-        (++) <$> eachInObjectWithKey (parsePackageName . T.unpack)
+        (++) <$> eachInObjectWithKey parsePackageName
                                      asDependencyStatus
@@ -332,3 +332,3 @@ asToplevelDependencies =
     key "dependencies" $
-      eachInObjectWithKey (parsePackageName . T.unpack) (return ())
+      eachInObjectWithKey (parsePackageName) (return ())
 
@@ -373,3 +373,3 @@ handleDeps deps = do
 
-  bowerDir pkgName = "bower_components/" ++ runPackageName pkgName
+  bowerDir pkgName = "bower_components/" ++ (T.unpack . runPackageName) pkgName
 
@@ -407,3 +407,3 @@ getPackageName fp = do
   y <- headMay ys
-  case Bower.mkPackageName y of
+  case Bower.mkPackageName (T.pack y) of
     Right name -> Just name
diff --git a/src/Language/PureScript/Publish/ErrorsWarnings.hs b/src/Language/PureScript/Publish/ErrorsWarnings.hs
index db7d7de..b6e29e3 100644
--- a/src/Language/PureScript/Publish/ErrorsWarnings.hs
+++ b/src/Language/PureScript/Publish/ErrorsWarnings.hs
@@ -215,3 +215,3 @@ displayUserError e = case e of
       ] ++
-        bulletedList runPackageName (NonEmpty.toList pkgs)
+        bulletedList (T.unpack . runPackageName) (NonEmpty.toList pkgs)
         ++
@@ -363,3 +363,3 @@ warnNoResolvedVersions pkgNames =
     ] ++
-      bulletedList runPackageName (NonEmpty.toList pkgNames)
+      bulletedList (T.unpack . runPackageName) (NonEmpty.toList pkgNames)
       ++
@@ -387,3 +387,3 @@ warnUndeclaredDependencies pkgNames =
       ])
-    : bulletedList runPackageName (NonEmpty.toList pkgNames)
+    : bulletedList (T.unpack . runPackageName) (NonEmpty.toList pkgNames)
 
@@ -416,3 +416,3 @@ warnUnacceptableVersions pkgs =
   where
-  showTuple (pkgName, tag) = runPackageName pkgName ++ "#" ++ tag
+  showTuple (pkgName, tag) = (T.unpack . runPackageName) pkgName ++ "#" ++ tag
 
