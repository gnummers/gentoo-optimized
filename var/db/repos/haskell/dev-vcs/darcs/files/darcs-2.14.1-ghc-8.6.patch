--- darcs-2.14.1-orig/src/Darcs/UI/Commands/Util/Tree.hs	2018-06-25 04:17:58.000000000 +1000
+++ darcs-2.14.1/src/Darcs/UI/Commands/Util/Tree.hs	2018-10-12 19:37:03.430231120 +1100
@@ -52,7 +52,7 @@
 existsAnycase (AnchoredPath []) = return True
 existsAnycase (AnchoredPath (x:xs)) = do
      wd <- TM.currentDirectory
-     Just tree <- gets (flip findTree wd . TM.tree)
+     ~(Just tree) <- gets (flip findTree wd . TM.tree)
      let subs = [ AnchoredPath [n] | (n, _) <- listImmediate tree,
                                           eqAnycase n x ]
      or `fmap` forM subs (\path -> do
--- darcs-2.14.1-orig/src/Darcs/Util/Tree.hs	2018-06-25 04:17:58.000000000 +1000
+++ darcs-2.14.1/src/Darcs/Util/Tree.hs	2018-10-12 19:36:47.064152862 +1100
@@ -417,7 +417,7 @@
 partiallyUpdateTree fun predi t' = go (AnchoredPath []) t'
   where go path t = do
           items' <- M.fromList <$> mapM (maybeupdate path) (listImmediate t)
-          SubTree t'' <- fun . SubTree $ t { items = items'
+          ~(SubTree t'') <- fun . SubTree $ t { items = items'
                                           , treeHash = NoHash }
           return t''
         maybeupdate path (k, item) = if predi (path `appendPath` k) item
