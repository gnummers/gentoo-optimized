diff --git a/Remote/WebDAV.hs b/Remote/WebDAV.hs
index 19dbaa8..0714c85 100644
--- a/Remote/WebDAV.hs
+++ b/Remote/WebDAV.hs
@@ -8,2 +8,3 @@
 {-# LANGUAGE ScopedTypeVariables #-}
+{-# LANGUAGE CPP #-}
 
@@ -16,3 +17,3 @@ import qualified Data.ByteString.UTF8 as B8
 import qualified Data.ByteString.Lazy.UTF8 as L8
-import Network.HTTP.Client (HttpException(..))
+import Network.HTTP.Client
 import Network.HTTP.Types
@@ -307,3 +308,7 @@ prettifyExceptions a = catchJust (matchStatusCodeException (const True)) a go
   where
+#if MIN_VERSION_http_client(0,5,0)
+	go (HttpExceptionRequest _ (StatusCodeException r _)) = let status = responseStatus r in error $ unwords
+#else
 	go (StatusCodeException status _ _) = error $ unwords
+#endif
 		[ "DAV failure:"
diff --git a/Utility/Url.hs b/Utility/Url.hs
index 9b68871..fba074a 100644
--- a/Utility/Url.hs
+++ b/Utility/Url.hs
@@ -43,2 +43,4 @@ import Network.HTTP.Conduit hiding (closeManager)
 
+import qualified Network.HTTP.Client as H
+
 -- closeManager is needed with older versions of http-client,
@@ -353,4 +355,9 @@ hUserAgent = "User-Agent"
 matchStatusCodeException :: (Status -> Bool) -> HttpException -> Maybe HttpException
+#if MIN_VERSION_http_client(0,5,0)
+matchStatusCodeException want e@(H.HttpExceptionRequest _ (StatusCodeException r _))
+	| want (H.responseStatus r) = Just e
+#else
 matchStatusCodeException want e@(StatusCodeException s _ _)
 	| want s = Just e
+#endif
 	| otherwise = Nothing
