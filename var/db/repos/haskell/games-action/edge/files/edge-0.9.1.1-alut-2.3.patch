diff --git a/Animation.hs b/Animation.hs
index 7b485de..25a3274 100644
--- a/Animation.hs
+++ b/Animation.hs
@@ -11,2 +11,3 @@ module Animation where
 import Prelude (Maybe(..), IO, ($), return, (>>=), (.), negate, (-), String, Float, Bool(..))
+import Prelude (Double, realToFrac)
 import Graphics.Gloss.Data.Picture (Picture(..))
@@ -14,2 +15,3 @@ import Data.WrapAround (WP, vectorRelation, WM, WP)
 import Sound.ALUT (DistanceModel(InverseDistanceClamped), Source, ($=), play, stop, genObjectNames, buffer, sourcePosition, Vertex3(..), sourceRelative, referenceDistance, rolloffFactor, sourceGain, SourceRelative(..))
+import Sound.ALUT (ALfloat, Gain)
 import GHC.Float ( double2Float )
@@ -38,5 +40,5 @@ class Audible a where
 
-audioReferenceDistance = 300.0 :: Float
+audioReferenceDistance = 300.0 :: ALfloat
 
-audioRolloffFactor = 3.0 :: Float
+audioRolloffFactor = 3.0 :: ALfloat
 
@@ -44,2 +46,5 @@ audioDistanceModel = InverseDistanceClamped
 
+d2alf :: Double -> ALfloat
+d2alf = realToFrac
+
 handSndSrc
@@ -61,4 +66,4 @@ handSndSrc a f h i k e l m n q
   where g b = do case h b of
-                   Just x -> do sourcePosition x $= (Vertex3 (double2Float u)
-                                                             (double2Float (-v)) 0)
+                   Just x -> do sourcePosition x $= (Vertex3 (d2alf u)
+                                                             (d2alf (-v)) 0)
                                 play [x]
@@ -93,3 +98,3 @@ procOneTimeSnd
   -> String -- ^ name of sound file
-  -> Float -- ^ source gain
+  -> Gain -- ^ source gain
   -> (a -> WM) -- ^ func that retrieves object's wrap map
@@ -102,3 +107,3 @@ procOneTimeSnd s f a h d e i j =
             let b = fromJust $ f c
-            sourcePosition b $= Vertex3 (double2Float x) (double2Float (-y)) 0
+            sourcePosition b $= Vertex3 (d2alf x) (d2alf (-y)) 0
             play [b]
diff --git a/Main.hs b/Main.hs
index f5714f6..f962645 100644
--- a/Main.hs
+++ b/Main.hs
@@ -15,3 +15,3 @@ import Data.WrapAround ( wrappoint )
 import Graphics.Gloss.Interface.IO.Game ( black, Display(FullScreen), playIO )
-import Sound.ALUT ( HasSetter(($=)), HasGetter(get), LoopingMode(Looping), ALError(ALError), ObjectName(genObjectNames), sourceGain, play, loopingMode, buffer, alErrors, distanceModel, withProgNameAndArgs, runALUT )
+import Sound.ALUT ( HasSetter(($=)), HasGetter(get), LoopingMode(Looping), ALError(ALError), ObjectName, genObjectNames, sourceGain, play, loopingMode, buffer, alErrors, distanceModel, withProgNameAndArgs, runALUT )
 import System.IO ( stderr, hPutStrLn )
diff --git a/Step.hs b/Step.hs
index 5e2946a..e93f1af 100644
--- a/Step.hs
+++ b/Step.hs
@@ -16,3 +16,3 @@ import Data.Maybe ( fromMaybe, isNothing, fromJust, isJust )
 import Control.Monad ( (>=>) )
-import Sound.ALUT ( HasSetter(($=)), ObjectName(genObjectNames), play, buffer )
+import Sound.ALUT ( HasSetter(($=)), ObjectName, genObjectNames, play, buffer )
 
diff --git a/Unit/Smart/Master.hs b/Unit/Smart/Master.hs
index f4b02c8..7274a10 100644
--- a/Unit/Smart/Master.hs
+++ b/Unit/Smart/Master.hs
@@ -18,3 +18,3 @@ import GHC.Float ( double2Float )
 import Data.Maybe ( isNothing, fromMaybe, fromJust )
-import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName(genObjectNames), stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
+import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName, genObjectNames, stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
 
@@ -78,4 +78,4 @@ instance Audible Master where
                        let s = fromJust $ shotSoundSource self
-                       sourcePosition s $= (Vertex3 (double2Float x)
-                                                    (double2Float (-y))
+                       sourcePosition s $= (Vertex3 (d2alf x)
+                                                    (d2alf (-y))
                                                     0)
diff --git a/Unit/Smart/Ninja.hs b/Unit/Smart/Ninja.hs
index 82ae8e3..1366242 100644
--- a/Unit/Smart/Ninja.hs
+++ b/Unit/Smart/Ninja.hs
@@ -18,3 +18,3 @@ import GHC.Float ( double2Float )
 import Data.Maybe ( isNothing, fromMaybe, fromJust )
-import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName(genObjectNames), stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
+import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName, genObjectNames, stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
 
@@ -76,4 +76,4 @@ instance Audible Ninja where
                        let s = fromJust $ shotSoundSource self
-                       sourcePosition s $= (Vertex3 (double2Float x)
-                                                    (double2Float (-y))
+                       sourcePosition s $= (Vertex3 (d2alf x)
+                                                    (d2alf (-y))
                                                     0)
diff --git a/Unit/Smart/Saucer.hs b/Unit/Smart/Saucer.hs
index 9a26f64..a169cc6 100644
--- a/Unit/Smart/Saucer.hs
+++ b/Unit/Smart/Saucer.hs
@@ -18,3 +18,3 @@ import GHC.Float ( double2Float )
 import Data.Maybe ( isNothing, fromMaybe, fromJust )
-import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName(genObjectNames), stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
+import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName, genObjectNames, stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play, buffer )
 
@@ -78,4 +78,4 @@ instance Audible Saucer where
                        let s = fromJust $ shotSoundSource self
-                       sourcePosition s $= (Vertex3 (double2Float x)
-                                                    (double2Float (-y))
+                       sourcePosition s $= (Vertex3 (d2alf x)
+                                                    (d2alf (-y))
                                                     0)
diff --git a/Unit/Smart/Sniper.hs b/Unit/Smart/Sniper.hs
index a65e38a..dfa49b2 100644
--- a/Unit/Smart/Sniper.hs
+++ b/Unit/Smart/Sniper.hs
@@ -9,2 +9,3 @@ import Animation
       audioReferenceDistance,
+      d2alf,
       audioRolloffFactor )
@@ -38,3 +39,3 @@ import Sound.ALUT
       Source,
-      ObjectName(genObjectNames),
+      ObjectName, genObjectNames,
       stop,
@@ -91,4 +92,4 @@ instance Audible Sniper where
                        let s = fromJust $ shotSoundSource self
-                       sourcePosition s $= (Vertex3 (double2Float x)
-                                                    (double2Float (-y))
+                       sourcePosition s $= (Vertex3 (d2alf x)
+                                                    (d2alf (-y))
                                                     0)
diff --git a/Unit/Smart/Zeus.hs b/Unit/Smart/Zeus.hs
index 805a9f6..df97590 100644
--- a/Unit/Smart/Zeus.hs
+++ b/Unit/Smart/Zeus.hs
@@ -18,3 +18,3 @@ import GHC.Float ( double2Float )
 import Data.Maybe ( isNothing, fromMaybe, fromJust )
-import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName(genObjectNames), stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play,  buffer )
+import Sound.ALUT ( Vertex3(Vertex3), HasSetter(($=)), SourceRelative(Listener), Source, ObjectName, genObjectNames, stop, sourceRelative, sourcePosition, rolloffFactor, referenceDistance, play,  buffer )
 
@@ -71,4 +71,4 @@ instance Audible Zeus where
                        let s = fromJust $ shotSoundSource self
-                       sourcePosition s $= (Vertex3 (double2Float x)
-                                                    (double2Float (-y))
+                       sourcePosition s $= (Vertex3 (d2alf x)
+                                                    (d2alf (-y))
                                                     0)
