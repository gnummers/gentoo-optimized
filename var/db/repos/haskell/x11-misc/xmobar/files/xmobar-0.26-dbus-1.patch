diff --git a/src/IPC/DBus.hs b/src/IPC/DBus.hs
index 3f2d6f2..b9bffd5 100644
--- a/src/IPC/DBus.hs
+++ b/src/IPC/DBus.hs
@@ -17,3 +17,4 @@ module IPC.DBus (runIPC) where
 import DBus
-import DBus.Client
+import DBus.Client hiding (interfaceName)
+import qualified DBus.Client as DC
 import Control.Monad (when)
@@ -22,2 +23,3 @@ import Control.Exception (handle)
 import System.IO (stderr, hPutStrLn)
+import Control.Monad.IO.Class (liftIO)
 
@@ -42,6 +44,9 @@ runIPC mvst = handle printException exportConnection
         requestName client busName [ nameDoNotQueue ]
-        export client objectPath [ sendSignalMethod mvst ]
+        export client objectPath defaultInterface
+          { DC.interfaceName = interfaceName
+          , DC.interfaceMethods = [ sendSignalMethod mvst ]
+          }
 
 sendSignalMethod :: TMVar SignalType -> Method
-sendSignalMethod mvst = method interfaceName sendSignalName
+sendSignalMethod mvst = makeMethod sendSignalName
     (signature_ [variantType $ toVariant (undefined :: SignalType)])
@@ -53,7 +58,7 @@ sendSignalMethod mvst = method interfaceName sendSignalName
 
-    sendSignalMethodCall :: MethodCall -> IO Reply
-    sendSignalMethodCall mc = do
+    sendSignalMethodCall :: MethodCall -> DBusR Reply
+    sendSignalMethodCall mc = liftIO $ do
         when ( methodCallMember mc == sendSignalName )
              $ mapM_ (sendSignal . fromVariant) (methodCallBody mc)
-        return ( replyReturn [] )
+        return ( ReplyReturn [] )
 
