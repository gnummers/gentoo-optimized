From 9ab9707fc67a56281910b2ab28784b0e35bae04b Mon Sep 17 00:00:00 2001
From: Moritz Kiefer <moritz.kiefer@purelyfunctional.org>
Date: Mon, 26 Mar 2018 21:10:44 +0200
Subject: [PATCH] Drop dependency on either and use ExceptT

either 5.0 has removed the EitherT transformer.
---
 codex.cabal   |  2 --
 codex/Main.hs | 10 +++++-----
 src/Codex.hs  |  8 ++++----
 3 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/codex.cabal b/codex.cabal
index b9e83e2..d66746c 100644
--- a/codex.cabal
+++ b/codex.cabal
@@ -40 +39,0 @@ library
-    , either              >= 4.3.0.1    && < 4.5
@@ -73 +71,0 @@ executable codex
-    , either
diff --git a/codex/Main.hs b/codex/Main.hs
index 02795fe..54fdf1a 100644
--- a/codex/Main.hs
+++ b/codex/Main.hs
@@ -14 +14 @@ import Control.Monad.IO.Class (liftIO)
-import Control.Monad.Trans.Either hiding (left, right)
+import Control.Monad.Trans.Except
@@ -83 +83 @@ update force cx bldr = displayConsoleRegions $ do
-      either (const True) id <$> (runEitherT $ isUpdateRequired cx dependencies projectHash)
+      either (const True) id <$> (runExceptT $ isUpdateRequired cx dependencies projectHash)
@@ -95 +95 @@ update force cx bldr = displayConsoleRegions $ do
-      traverse (retrying 3 . runEitherT . getTags tick' s) dependencies
+      traverse (retrying 3 . runExceptT . getTags tick' s) dependencies
@@ -97 +97 @@ update force cx bldr = displayConsoleRegions $ do
-    res     <- runEitherT $ assembly bldr cx dependencies projectHash workspaceProjects tagsFile
+    res     <- runExceptT $ assembly bldr cx dependencies projectHash workspaceProjects tagsFile
@@ -112 +112 @@ update force cx bldr = displayConsoleRegions $ do
-      Remote          -> liftIO $ eitherT ignore return $ fetch s hp i >> tick' >> getTags tick' s i
+      Remote          -> liftIO $ either ignore return <=< runExceptT $ fetch s hp i >> tick' >> getTags tick' s i
diff --git a/src/Codex.hs b/src/Codex.hs
index f6973cf..a91cc42 100644
--- a/src/Codex.hs
+++ b/src/Codex.hs
@@ -14 +14 @@ import Control.Monad.IO.Class
-import Control.Monad.Trans.Either
+import Control.Monad.Trans.Except
@@ -65 +65 @@ data Status = Source Tagging | Archive | Remote
-type Action = EitherT String IO
+type Action = ExceptT String IO
@@ -87 +87 @@ tryIO io = do
-  either (left . show) return res
+  either (throwE . show) return res
@@ -132 +132 @@ fetch s root i = do
-  either left write bs where
+  either throwE write bs where
-- 
2.17.0

