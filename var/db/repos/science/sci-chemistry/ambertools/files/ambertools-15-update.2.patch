*******> update.2

Author: Jason Swails, Ross Walker

Date: June 2, 2015

Programs: AmberTools, CUDA

Description: Adds support for CUDA 7. Also fixes an erroneous error report when
             AmberTools is configured for *only* OpenMP, CUDA, or CUDA-MPI with
             regards to missing Python modules.

--------------------------------------------------------------------------------

 AmberTools/src/configure2     | 4 ++--
 AmberTools/test/test_check.sh | 7 ++++---
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git AmberTools/src/configure2 AmberTools/src/configure2
index f1a3cff..9a504b1 100755
--- AmberTools/src/configure2
+++ AmberTools/src/configure2
@@ -861,13 +861,13 @@ if [ "$cuda_SPFP" = 'yes' -o "$cuda_SPXP" = 'yes' -o "$cuda_DPFP" = 'yes' ]; the
       echo "CUDA Version $cudaversion detected"
       echo "Configuring for SM2.0 and SM3.0 - warning does not support Maxwell (GM200/GM204) cards [e.g. GTX970/980]"
       nvccflags="$sm20flags $sm30flags"
-    elif [ "$cudaversion" = "6.5" ]; then
+    elif [ "$cudaversion" = "6.5" -o  "$cudaversion" = "7.0" ]; then
       echo "CUDA Version $cudaversion detected"
       echo "Configuring for SM2.0, SM3.0 and SM5.0"
       nvccflags="$sm20flags $sm30flags $sm50flags"
     else
       echo "Error: Unsupported CUDA version $cudaversion detected."
-      echo "       AMBER requires CUDA version == 5.0 .or. 5.5 .or. 6.0 .or. 6.5"
+      echo "       AMBER requires CUDA version == 5.0 .or. 5.5 .or. 6.0 .or. 6.5 .or. 7.0"
       exit 1
     fi
     nvcc="$nvcc $nvccflags"
diff --git AmberTools/test/test_check.sh AmberTools/test/test_check.sh
index 108c446..a5399d8 100644
--- AmberTools/test/test_check.sh
+++ AmberTools/test/test_check.sh
@@ -83,9 +83,10 @@ def error():
 try:
     import chemistry
 except ImportError:
-    sys.stderr.write('Could not import Amber Python modules. This likely means\\n'
-        'that your Amber Python environment was not set up correctly\\n\\n')
-    error()
+    if os.path.exists(os.path.join(ambhome, 'parmed.py')):
+        sys.stderr.write('Could not import Amber Python modules. This likely means\\n'
+            'that your Amber Python environment was not set up correctly\\n\\n')
+        error()
 
 if 'darwin' in sys.platform:
     sys.exit(0) # Nothing to check here
