********> update.6

Author: Charles Lin

Date: November 10, 2015

Programs: pmemd.cuda

Description: This update gives support to cuda 7.5 and optional support for 7.0 (it is recommended to run cuda 6.5 or 7.5)

--------------------------------------------------------

 AmberTools/src/configure2 | 31 ++++++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

diff --git AmberTools/src/configure2 AmberTools/src/configure2
index 9a504b1..6835c9c 100755
--- AmberTools/src/configure2
+++ AmberTools/src/configure2
@@ -865,9 +865,38 @@ if [ "$cuda_SPFP" = 'yes' -o "$cuda_SPXP" = 'yes' -o "$cuda_DPFP" = 'yes' ]; the
       echo "CUDA Version $cudaversion detected"
       echo "Configuring for SM2.0, SM3.0 and SM5.0"
       nvccflags="$sm20flags $sm30flags $sm50flags"
+    elif [ "$cudaversion" = "7.0" ]; then
+      printf "\n"
+      printf "Version 7.0 of the NVIDIA CUDA compiler has been detected.\n\
+Support for version 7.0 has been deprecated and we recommend use\n\
+of either 7.5 or 6.5 instead.  Version 7.0 introduced a performance\n\
+regression over earlier compilers and also a bug in the way that GPUs are\n\
+selected based on whether they are in use or not.  This bug causes AMBER to\n\
+print a GPU selection error rather than auto selecting a free GPU.  These\n\
+issues do not effect v6.5 and have been addressed in version 7.5."
+      printf "\n"
+      printf "If you still want to proceed with v7.0 on the\n\
+understanding that it is considered deprecated from a support process please type\n\
+'yes' to proceed.  Otherwise type 'no', switch to either 6.5 or 7.5\n\
+and rerun configure."
+      printf "\n"
+      read answer
+      ans=`echo $answer | awk '{print substr($1,1,1)}'`
+ 
+      if [ "$ans" = "y" -o "$ans" = "Y" ]; then
+        echo "Configuring for SM2.0, SM3.0 and SM5.0"
+        nvccflags="$sm20flags $sm30flags $sm50flags"
+      else
+        echo "Please set cuda version to 6.5 or 7.5!"
+        exit 1
+      fi
+    elif [ "$cudaversion" = "7.5" ]; then
+      echo "CUDA Version $cudaversion detected"
+      echo "Configuring for SM2.0, SM3.0, SM5.0 and SM5.2"
+      nvccflags="$sm20flags $sm30flags $sm50flags $sm52flags"
     else
       echo "Error: Unsupported CUDA version $cudaversion detected."
-      echo "       AMBER requires CUDA version == 5.0 .or. 5.5 .or. 6.0 .or. 6.5 .or. 7.0"
+      echo "       AMBER requires CUDA version == 5.0 .or. 5.5 .or. 6.0 .or. 6.5 .or. 7.5"
       exit 1
     fi
     nvcc="$nvcc $nvccflags"
