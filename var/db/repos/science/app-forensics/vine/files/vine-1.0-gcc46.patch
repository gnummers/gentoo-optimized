https://groups.google.com/d/msg/bitblaze-users/sTTPlFEzWo0/0ZjPL0QYC8IJ

Index: libasmir/src/vex/irtoir-i386.cpp
===================================================================
--- a/libasmir/src/vex/irtoir-i386.cpp        (old revision)
+++ b/libasmir/src/vex/irtoir-i386.cpp        (new revision)
@@ -9,6 +9,13 @@
 web site at: http://bitblaze.cs.berkeley.edu/
 */
 
+/* Because we use offsetof() for values that go in switch statement
+   cases, we need a definition in terms of __builtin_offsetof so that
+   GCC >= 4.6 can accept the results of offsetof() as a constant
+   expression. They've stopped supporting the traditional definition
+   as a macro &((type*)0)->memb, which appears in VEX's headers. */
+#include <stddef.h>
+
 #include <string>
 #include <vector>
 #include <iostream>
Index: libasmir/src/vex/irtoir-arm.cpp
===================================================================
--- a/libasmir/src/vex/irtoir-arm.cpp        (old revision)
+++ b/libasmir/src/vex/irtoir-arm.cpp        (new revision)
@@ -9,6 +9,12 @@
 web site at: http://bitblaze.cs.berkeley.edu/
 */
 
+/* Because we use offsetof() for values that go in switch statement
+   cases, we need a definition in terms of __builtin_offsetof so that
+   GCC >= 4.6 can accept the results of offsetof() as a constant
+   expression. They've stopped supporting the traditional definition
+   as a macro &((type*)0)->memb, which appears in VEX's headers. */
+#include <stddef.h>
 
 #include "irtoir-internal.h"
 #include "libvex_guest_arm.h"
