--- a/libsrc/occ/occgeom.cpp	2014-08-29 11:54:03.000000000 +0200
+++ b/libsrc/occ/occgeom.cpp	2016-02-12 21:14:49.258982206 +0100
@@ -149,7 +149,7 @@
 
          for (exp0.Init (shape, TopAbs_FACE); exp0.More(); exp0.Next())
          {
-            // Variable to hold the colour (if there exists one) of 
+            // Variable to hold the colour (if there exists one) of
             // the current face being processed
             Quantity_Color face_colour;
 
@@ -190,7 +190,7 @@
                rebuild->Replace(face, newface, Standard_False);
             }
 
-            // Set the original colour of the face to the newly created 
+            // Set the original colour of the face to the newly created
             // face (after the healing process)
             face = TopoDS::Face (exp0.Current());
             face_colours->SetColor(face,face_colour,XCAFDoc_ColorSurf);
@@ -815,11 +815,11 @@
       face_maxh.SetSize (fmap.Extent());
       face_maxh = mparam.maxh;
 
-      // Philippose - 15/01/2010      
-      face_maxh_modified.DeleteAll();      
-      face_maxh_modified.SetSize(fmap.Extent());      
+      // Philippose - 15/01/2010
+      face_maxh_modified.DeleteAll();
+      face_maxh_modified.SetSize(fmap.Extent());
       face_maxh_modified = 0;
-      
+
 
       // Philippose - 17/01/2009
       face_sel_status.DeleteAll();
@@ -845,7 +845,7 @@
       cout << "Trying to sew faces ..." << flush;
 
       BRepOffsetAPI_Sewing sewedObj(1);
- 
+
       for (int i = 1; i <= fmap.Extent(); i++)
       {
          TopoDS_Face face = TopoDS::Face (fmap(i));
@@ -1038,9 +1038,6 @@
    {
       cout << "writing stl..."; cout.flush();
       StlAPI_Writer writer;
-      writer.RelativeMode() = Standard_False;
-
-      writer.SetDeflection(0.02);
       writer.Write(shape,filename);
 
       cout << "done" << endl;
@@ -1109,7 +1106,7 @@
       }
 
 
-      // For the IGES Reader, all the shapes can be exported as one compund shape 
+      // For the IGES Reader, all the shapes can be exported as one compund shape
       // using the "OneShape" member
       occgeo->shape = reader.OneShape();
       occgeo->face_colours = iges_colour_contents;
@@ -1187,7 +1184,7 @@
       }
 
 
-      // For the STEP File Reader in OCC, the 1st Shape contains the entire 
+      // For the STEP File Reader in OCC, the 1st Shape contains the entire
       // compound geometry as one shape
       occgeo->shape = step_shape_contents->GetShape(step_shapes.Value(1));
       occgeo->face_colours = step_colour_contents;
@@ -1218,7 +1215,7 @@
       }
 
       // Philippose - 23/02/2009
-      // Fixed a bug in the OpenCascade XDE Colour handling when 
+      // Fixed a bug in the OpenCascade XDE Colour handling when
       // opening BREP Files, since BREP Files have no colour data.
       // Hence, the face_colours Handle needs to be created as a NULL handle.
       occgeo->face_colours = Handle_XCAFDoc_ColorTool();
@@ -1236,9 +1233,9 @@
   void OCCGeometry :: Save (string sfilename) const
   {
     const char * filename = sfilename.c_str();
-    if (strlen(filename) < 4) 
+    if (strlen(filename) < 4)
       throw NgException ("illegal filename");
-    
+
     if (strcmp (&filename[strlen(filename)-3], "igs") == 0)
       {
 	IGESControl_Writer writer("millimeters", 1);
