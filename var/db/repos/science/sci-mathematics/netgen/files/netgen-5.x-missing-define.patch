--- a/libsrc/occ/Partition_Loop2d.cxx	2012-11-14 21:16:22.876287910 +0100
+++ b/libsrc/occ/Partition_Loop2d.cxx	2012-11-14 21:22:30.909650554 +0100
@@ -13,6 +13,7 @@
 
 //using namespace std;
 #include <climits>
+#include <cmath>
 #include "Partition_Loop2d.ixx"
 
 #include "utilities.h"
@@ -210,7 +211,7 @@
     Cc->D1(uc, PC, CTg1);
     if (!isForward) CTg1.Reverse();
 
-    Standard_Real anglemin = 3 * PI, tolAng = 1.e-8;
+    Standard_Real anglemin = 3 * M_PI, tolAng = 1.e-8;
 
     // select an edge whose first derivative is most left of CTg1
     // ie an angle between Tg1 and CTg1 is least
@@ -234,7 +235,7 @@
       // -PI < angle < PI
       Standard_Real angle = Tg1.Angle(CTg1);
 
-      if (PI - Abs(angle) <= tolAng)
+      if (M_PI - Abs(angle) <= tolAng)
       {
         // an angle is too close to PI; assure that an angle sign really
         // reflects an edge position: +PI - an edge is worst,
--- a/configure.ac	2012-11-15 14:55:45.048938870 +0100
+++ b/configure.ac	2012-11-15 14:55:12.545923777 +0100
@@ -14,6 +14,7 @@
 AC_DISABLE_STATIC
 
 AC_LANG([C++])
+AM_PROG_AR
 AC_PROG_CXX
 AC_PROG_LIBTOOL
 LT_INIT
