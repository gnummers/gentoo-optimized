--- a/src/GpGpu.cmake
+++ b/src/GpGpu.cmake
@@ -84,12 +84,12 @@
 
 set(_cudaArch "${_outNVCC}")
 
-string(FIND "${_cudaArch}" "2.1" arch_21)
-string(FIND "${_cudaArch}" "2.0" arch_20)
 string(FIND "${_cudaArch}" "3.0" arch_30)
 string(FIND "${_cudaArch}" "3.2" arch_32)
 string(FIND "${_cudaArch}" "3.5" arch_35)
 string(FIND "${_cudaArch}" "5.0" arch_50)
+string(FIND "${_cudaArch}" "6.0" arch_60)
+string(FIND "${_cudaArch}" "6.1" arch_61)
 
 if(${CUDA_LINEINFO})
     set(flag_Lineinfo  -lineinfo)
@@ -99,17 +99,7 @@
     set(flag_fastMath  -use_fast_math)
 endif()
 
-if((NOT ${arch_20} LESS 0) OR (NOT ${arch_21} LESS 0))
-
-    set(cuda_arch_version 20 )
-	if(NOT ${arch_20} LESS 0)
-		set(cuda_arch_version_string 2.0 )
-	else()
-		set(cuda_arch_version_string 2.1 )
-	endif()
-    set(cuda_generation Fermi)
-
-elseif((NOT ${arch_30} LESS 0) OR (NOT ${arch_32} LESS 0))
+if((NOT ${arch_30} LESS 0) OR (NOT ${arch_32} LESS 0))
 
     set(cuda_arch_version 30 )
 	set(cuda_arch_version_string 3.0 )
@@ -127,6 +117,17 @@
         set(cuda_arch_version_string 5.0 )
     set(cuda_generation Maxwell)
 
+elseif((NOT ${arch_60} LESS 0) OR (NOT ${arch_61} LESS 0))
+
+    set(cuda_arch_version 60 )
+	if(NOT ${arch_60} LESS 0)
+		set(cuda_arch_version_string 6.0 )
+	else()
+		set(cuda_arch_version_string 6.1 )
+	endif()
+    set(cuda_generation Pascal)
+
+
 else()
 
     message("Cuda capabilities are not sufficient")
