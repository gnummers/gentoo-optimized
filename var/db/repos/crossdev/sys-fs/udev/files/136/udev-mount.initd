#!/sbin/runscript
# Copyright 1999-2008 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

description="Mount tmpfs on /dev"
[ -e /etc/conf.d/udev ] && . /etc/conf.d/udev

# get_KV and KV_to_int
. /lib/udev/shell-compat-KV.sh

# FIXME
# Instead of this script testing kernel version, udev itself should
# Maybe something like udevd --test || exit $?
check_kernel()
{
	if [ $(get_KV) -lt $(KV_to_int '%KV_MIN%') ]; then
		eerror "Your kernel is too old to work with this version of udev."
		eerror "Current udev only supports Linux kernel %KV_MIN% and newer."
		return 1
	fi

	yesno "${unreliable_kernel_warning:-yes}" || return 0

	if [ $(get_KV) -lt $(KV_to_int '%KV_MIN_RELIABLE%') ]; then
		ewarn "You need at least Linux kernel %KV_MIN_RELIABLE% for reliable operation of udev."
	fi
	return 0
}


mount_dev_directory()
{
	# No options are processed here as they should all be in /etc/fstab
	ebegin "Mounting /dev"
	if fstabinfo --quiet /dev; then
		mount -n /dev
	else
		# Some devices require exec, Bug #92921
		mount -n -t tmpfs -o "exec,nosuid,mode=0755,size=10M" udev /dev
	fi
	eend $?
}

seed_dev()
{
	# Seed /dev with some things that we know we need

	# creating /dev/console, /dev/tty and /dev/tty1 to be able to write
	# to $CONSOLE with/without bootsplash before udevd creates it
	[ -c /dev/console ] || mknod -m 600 /dev/console c 5 1
	[ -c /dev/tty1 ] || mknod -m 620 /dev/tty1 c 4 1
	[ -c /dev/tty ] || mknod -m 666 /dev/tty c 5 0

	# udevd will dup its stdin/stdout/stderr to /dev/null
	# and we do not want a file which gets buffered in ram
	[ -c /dev/null ] || mknod -m 666 /dev/null c 1 3

	# so udev can add its start-message to dmesg
	[ -c /dev/kmsg ] || mknod -m 660 /dev/kmsg c 1 11

	# copy over any persistant things
	if [ -d /lib/udev/devices ]; then
		cp -RPp /lib/udev/devices/* /dev 2>/dev/null
	fi

	# Not provided by sysfs but needed
	ln -snf /proc/self/fd /dev/fd
	ln -snf fd/0 /dev/stdin
	ln -snf fd/1 /dev/stdout
	ln -snf fd/2 /dev/stderr
	[ -e /proc/kcore ] && ln -snf /proc/kcore /dev/core

	# Create problematic directories
	mkdir -p /dev/pts /dev/shm
	return 0
}


start()
{
	# do not run this on too old baselayout - udev-addon is already loaded!
	if [ ! -f /etc/init.d/sysfs ]; then
		eerror "The $SVCNAME init-script is written for baselayout-2!"
		eerror "Please do not use it with baselayout-1!".
		return 1
	fi

	_start
}

_start()
{
	check_kernel || return 1
	mount_dev_directory || return 1

	# Selinux lovin; /selinux should be mounted by selinux-patched init
	if [ -x /sbin/restorecon -a -c /selinux/null ]; then
		restorecon /dev > /selinux/null
	fi

	# make sure it exists
	mkdir -p /dev/.udev
	
	seed_dev

	return 0
}
