commit 4108db7f9f9fda5c26b443c291f531288a2e291f
Author: Josh Knowles <joshknowles@gmail.com>
Date:   Sat Nov 10 17:43:14 2012 -0500

    Add support for parsing published date

diff --git a/lib/feed_parser/dsl.rb b/lib/feed_parser/dsl.rb
index 7fc27d4..b92988a 100644
--- a/lib/feed_parser/dsl.rb
+++ b/lib/feed_parser/dsl.rb
@@ -11,6 +11,7 @@ class FeedParser
         :item_guid => "guid",
         :item_link => "link",
         :item_title => "title",
+        :item_published => "pubDate",
         :item_categories => "category",
         :item_author => "creator",
         :item_description => "description",
@@ -26,6 +27,8 @@ class FeedParser
         :item_guid => "id",
         :item_link => "link",
         :item_title => "title",
+        :item_published => "published",
+        :item_updated => "updated",
         :item_categories => "category",
         :item_author => "author/name",
         :item_description => "summary",
diff --git a/lib/feed_parser/feed_item.rb b/lib/feed_parser/feed_item.rb
index da4093e..c026b89 100644
--- a/lib/feed_parser/feed_item.rb
+++ b/lib/feed_parser/feed_item.rb
@@ -7,6 +7,7 @@ class FeedParser
     def initialize(item)
       @guid = item.xpath(Dsl[@type][:item_guid]).text
       @title = item.xpath(Dsl[@type][:item_title]).text
+      @published = parse_datetime(item.xpath(Dsl[@type][:item_published]).text)
       @author = item.xpath(Dsl[@type][:item_author]).text
       @description = possible_html_content(item.xpath(Dsl[@type][:item_description]))
       @content = possible_html_content(item.xpath(Dsl[@type][:item_content]))
@@ -30,6 +31,7 @@ class FeedParser
         :guid => guid,
         :link => link,
         :title => title,
+        :published => published,
         :categories => categories,
         :author => author,
         :description => description,
@@ -51,6 +53,15 @@ class FeedParser
           element.text
       end
     end
+
+    def parse_datetime(string)
+      begin
+        DateTime.parse(string) unless string.empty?
+      rescue
+        warn "Failed to parse date #{string.inspect}"
+        nil
+      end
+    end
   end
 
   class RssItem < FeedItem
@@ -67,7 +78,12 @@ class FeedParser
       @type = :atom
       super
       @link = item.xpath(Dsl[@type][:item_link]).attribute("href").text.strip
+      @updated = parse_datetime(item.xpath(Dsl[@type][:item_updated]).text)
       @categories = item.xpath(Dsl[@type][:item_categories]).map{|cat| cat.attribute("term").text}
     end
+
+    def published
+      @published ||= @updated
+    end
   end
 end
diff --git a/spec/feed_parser_spec.rb b/spec/feed_parser_spec.rb
index e12d570..0f76e0d 100644
--- a/spec/feed_parser_spec.rb
+++ b/spec/feed_parser_spec.rb
@@ -120,6 +120,12 @@ describe FeedParser do
         end
       end
 
+      it "should set the published date" do
+        feed = FeedParser::Feed.new(feed_xml('nodeta.rss.xml'))
+        item = feed.items.first
+        item.published.should == DateTime.parse("Jul 5, 2009 09:25:32 GMT")
+      end
+
       {
         'nodeta.rss.xml' => {
           :title => "Nodeta",
@@ -129,6 +135,7 @@ describe FeedParser do
                 :guid => "http://blog.nodeta.fi/?p=73",
                 :link => "http://blog.nodeta.fi/2009/01/16/ruby-187-imported/",
                 :title => "Ruby 1.8.7 imported",
+                :published => DateTime.parse("Jan 16, 2009 15:29:52 GMT"),
                 :categories => ["APIdock", "Ruby"],
                 :author => "Otto Hilska",
                 :description => "I just finished importing Ruby 1.8.7 to APIdock. It&#8217;s also the new default version, because usually it is better documented. However, there&#8217;re some incompatibilities between 1.8.6 and 1.8.7, so be sure to check the older documentation when something seems to be wrong.\n",
@@ -144,6 +151,7 @@ describe FeedParser do
                 :guid => "basecamp.00000000.Comment.1234567",
                 :link => "https://awesome.basecamphq.com/unique_item_link",
                 :title => "Comment posted: Re: Howdy how?",
+                :published => DateTime.parse("Nov 9, 2011 20:35:18 GMT"),
                 :categories => [],
                 :author => "Ffuuuuuuu- Le.",
                 :description => "<div>trololooo</div><p>Company: awesome | Project: Awesome project</p>",
@@ -159,6 +167,7 @@ describe FeedParser do
               :guid => "http://scrumalliance.org/articles/424-testing-in-scrum-with-a-waterfall-interaction",
               :link => "http://scrumalliance.org/articles/424-testing-in-scrum-with-a-waterfall-interaction", # trims the link
               :title => "Testing in Scrum with a Waterfall Interaction",
+              :published => DateTime.parse("May 23, 2012 11:07:03 GMT"),
               :categories => [],
               :author => "",
               :description => "Sometimes, when testing user stories in Scrum, there's a final Waterfall  interaction to deal with. The scenario I present here is based on this  situation: a Scrum process with an interaction of sequential phases at  the end of the process to (re)test the whole developed functionality.  These sequential phases are mandatory for our organization, which  follows a Waterfall process for the releases of the product. So, for the  moment at least, we have to deal with this  and my experience is that  we aren't alone.",
@@ -196,6 +205,18 @@ describe FeedParser do
         end
       end
 
+      it "should set the published date if present" do
+        feed = FeedParser::Feed.new(feed_xml('smashingmagazine.atom.xml'))
+        item = feed.items.first
+        item.published.should == DateTime.parse("Jul 20, 2009 8:43:22 GMT")
+      end
+
+      it "should default the published date to the updated date if not present" do
+        feed = FeedParser::Feed.new(feed_xml('facebook.atom.xml'))
+        item = feed.items.first
+        item.published.should == DateTime.parse("Dec 30, 2011 17:00 GMT")
+      end
+
       {
         'gcal.atom.xml' => {
           :title => "dokaus.net",
@@ -213,6 +234,7 @@ describe FeedParser do
                 :guid => "urn:uuid:132266233552163",
                 :link => "http://developers.facebook.com/blog/post/614/",
                 :title => "Breaking Change: JavaScript SDK to oauth:true on December 13th",
+                :published => DateTime.parse("Dec 12, 2011 17:00 GMT"),
                 :categories=>[],
                 :author => "",
                 :description => "",
