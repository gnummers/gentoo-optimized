 * Package:    dev-lang/spidermonkey-1.8.5-r9
 * Repository: gentoo
 * Maintainer: mozilla@gentoo.org
 * USE:        abi_x86_64 amd64 elibc_glibc kernel_linux userland_GNU
 * FEATURES:   ccache network-sandbox preserve-libs sandbox userpriv usersandbox
 * /etc/portage/package.cflags/ltoworkarounds.conf -> dev-lang/spidermonkey: *FLAGS-=-flto*
 * /etc/portage/package.cflags/ltoworkarounds.conf -> dev-lang/spidermonkey: *FLAGS-="-mtls-dialect=gnu2"
 * FEATURES='strict unknown-features-warn qa-unresolved-soname-deps unmerge-logs preserve-libs strict-keepdir multilib-strict binpkg-logs downgrade-backup buildpkg unmerge-backup binpkg-docompress parallel-install compress-index sandbox unmerge-orphans merge-sync usersandbox network-sandbox config-protect-if-modified ccache parallel-fetch binpkg-dostrip ipc-sandbox usersync distlocks assume-digests userfetch fixlafiles nodoc pid-sandbox sfperms news userpriv binpkg-multi-instance xattr cgroup'
 * CFLAGS='-march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * CXXFLAGS='-march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * FFLAGS='-march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * FCFLAGS='-march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * F77FLAGS='-march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * LDFLAGS='-Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread'
 * MAKEOPTS='-j12'
 * gcc (Gentoo 10.1.0 p1) 10.1.0
 * g++ (Gentoo 10.1.0 p1) 10.1.0
 * GNU ld (Gentoo 9999 p5) 2.34.50.20200520
 * Linux ryzen.gnum.org 5.4.36 #1 SMP Thu Apr 30 04:38:28 UTC 2020 x86_64 AMD Ryzen 5 3600 6-Core Processor AuthenticAMD GNU/Linux
dev-lang/spidermonkey: 2 minutes, 6 seconds average for 4 merges
2020-05-16T00:51:41 >>> dev-lang/spidermonkey: 2 minutes, 18 seconds
2020-05-19T23:49:07 >>> dev-lang/spidermonkey: 21 seconds
2020-05-20T01:15:10 >>> dev-lang/spidermonkey: 6 seconds
2020-05-21T13:09:11 >>> dev-lang/spidermonkey: 5 minutes, 42 seconds
]0;emerge 13:14:54 10|158 spidermonkey 02:03 (root@ryzen.gnum.org)>>> Unpacking source...
>>> Unpacking js185-1.0.0.tar.gz to /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work
>>> Unpacking spidermonkey-slot0-patches-02.tar.xz to /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work
>>> Source unpacked in /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work
>>> Preparing source in /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5 ...
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5
 * Applying spidermonkey-1.8.5-fix-install-symlinks.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-fix-ppc64.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-arm_respect_cflags-3.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.7-freebsd-pthreads.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-perf_event-check.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-symbol-versions.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-ia64-fix.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-ia64-static-strings.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-isfinite.patch ...
 [ ok ]
 * Applying spidermonkey-perl-defined-array-check.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.7-x32.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-gcc6.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-drop-asm-volatile-toplevel.patch ...
 [ ok ]
 * Applying spidermonkey-1.8.5-LTO.patch ...
 [ ok ]
 * Running autoconf ...
 [ ok ]
>>> Source prepared.
>>> Configuring source in /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5 ...
 * econf: updating js-1.8.5/js/src/build/autoconf/config.guess with /usr/share/gnuconfig/config.guess
 * econf: updating js-1.8.5/js/src/build/autoconf/config.sub with /usr/share/gnuconfig/config.sub
 * econf: updating js-1.8.5/js/src/ctypes/libffi/config.guess with /usr/share/gnuconfig/config.guess
 * econf: updating js-1.8.5/js/src/ctypes/libffi/config.sub with /usr/share/gnuconfig/config.sub
./configure --prefix=/usr --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu --mandir=/usr/share/man --infodir=/usr/share/info --datadir=/usr/share --sysconfdir=/etc --localstatedir=/var/lib --libdir=/usr/lib64 --enable-jemalloc --enable-readline --enable-threadsafe --with-system-nspr --disable-optimize --disable-profile-guided-optimization --disable-debug --disable-static --disable-tests
creating cache ./config.cache
checking host system type... x86_64-pc-linux-gnu
checking target system type... x86_64-pc-linux-gnu
checking build system type... x86_64-pc-linux-gnu
checking for mawk... no
checking for gawk... gawk
checking for perl5... no
checking for perl... /usr/bin/perl
checking for gcc... x86_64-pc-linux-gnu-gcc
checking whether the C compiler (x86_64-pc-linux-gnu-gcc -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread) works... yes
checking whether the C compiler (x86_64-pc-linux-gnu-gcc -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread) is a cross-compiler... no
checking whether we are using GNU C... yes
checking whether x86_64-pc-linux-gnu-gcc accepts -g... yes
checking for c++... x86_64-pc-linux-gnu-g++
checking whether the C++ compiler (x86_64-pc-linux-gnu-g++ -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread) works... yes
checking whether the C++ compiler (x86_64-pc-linux-gnu-g++ -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread) is a cross-compiler... no
checking whether we are using GNU C++... yes
checking whether x86_64-pc-linux-gnu-g++ accepts -g... yes
checking for ranlib... x86_64-pc-linux-gnu-ranlib
checking for as... /usr/bin/as
checking for ar... x86_64-pc-linux-gnu-ar
checking for ld... x86_64-pc-linux-gnu-ld
checking for strip... strip
checking for windres... windres
checking whether x86_64-pc-linux-gnu-gcc and cc understand -c and -o together... yes
checking how to run the C preprocessor... x86_64-pc-linux-gnu-gcc -E
checking how to run the C++ preprocessor... x86_64-pc-linux-gnu-g++ -E
checking for sb-conf... no
checking for ve... no
checking for a BSD compatible install... /usr/lib/portage/python3.8/ebuild-helpers/xattr/install -c
checking whether ln -s works... yes
checking for minimum required perl version >= 5.006... 5.030002
checking for full perl installation... yes
checking for python2.7... /usr/bin/python2.7
checking for doxygen... :
checking for autoconf... /usr/bin/autoconf
checking for unzip... /usr/bin/unzip
checking for zip... /usr/bin/zip
checking for makedepend... no
checking for xargs... /usr/bin/xargs
checking for gmake... /usr/bin/gmake
checking for X... libraries /usr/lib64, headers 
checking for dnet_ntoa in -ldnet... (cached) no
checking for dnet_ntoa in -ldnet_stub... (cached) no
checking for gethostbyname... yes
checking for connect... yes
checking for remove... yes
checking for shmat... yes
checking for IceConnectionNumber in -lICE... yes
checking whether the compiler supports -Wno-invalid-offsetof... yes
checking whether the compiler supports -Wno-variadic-macros... yes
checking whether the compiler supports -Werror=return-type... yes
checking whether ld has archive extraction flags... yes
checking that static assertion macros used in autoconf tests work... yes
checking for 64-bit OS... yes
checking for Python version >= 2.5 but not 3.x... yes
checking for ANSI C header files... yes
checking for working const... yes
checking for mode_t... yes
checking for off_t... yes
checking for pid_t... yes
checking for size_t... yes
checking for __stdcall... no
checking for ssize_t... yes
checking for st_blksize in struct stat... yes
checking for siginfo_t... yes
checking for stdint.h... yes
checking for the size of void*... 8
checking for the alignment of void*... 8
checking for the size of double... 8
checking for int16_t... yes
checking for int32_t... yes
checking for int64_t... yes
checking for int64... no
checking for uint... yes
checking for uint_t... no
checking for uint16_t... no
checking for uname.domainname... yes
checking for uname.__domainname... no
checking for visibility(hidden) attribute... yes
checking for visibility(default) attribute... yes
checking for visibility pragma support... yes
checking For gcc visibility bug with class-level attributes (GCC bug 26905)... yes
checking For x86_64 gcc visibility bug with builtins (GCC bug 20297)... no
checking for __force_align_arg_pointer__ attribute... yes
checking for dirent.h that defines DIR... yes
checking for opendir in -ldir... no
checking for sys/byteorder.h... no
checking for compat.h... no
checking for getopt.h... yes
checking for sys/bitypes.h... yes
checking for memory.h... yes
checking for unistd.h... yes
checking for gnu/libc-version.h... yes
checking for nl_types.h... yes
checking for malloc.h... yes
checking for X11/XKBlib.h... yes
checking for io.h... no
checking for sys/statvfs.h... yes
checking for sys/statfs.h... yes
checking for sys/vfs.h... yes
checking for sys/mount.h... yes
checking for sys/quota.h... yes
checking for linux/quota.h... yes
checking for mmintrin.h... yes
checking for new... yes
checking for sys/cdefs.h... yes
checking for linux/perf_event.h... yes
checking for perf_event_open system call... yes
checking for gethostbyname_r in -lc_r... no
checking for library containing dlopen... -ldl
checking for dlfcn.h... yes
checking for dladdr... yes
checking for socket in -lsocket... no
checking for ARM SIMD support in compiler... no
checking for ARM NEON support in compiler... no
checking for pthread_create in -lpthreads... no
checking for pthread_create in -lpthread... yes
checking whether x86_64-pc-linux-gnu-gcc accepts -pthread... yes
checking whether mmap() sees write()s... yes
checking whether x86_64-pc-linux-gnu-gcc needs -traditional... no
checking for 8-bit clean memcmp... yes
checking for fchmod... yes
checking for flockfile... yes
checking for getc_unlocked... yes
checking for _getc_nolock... no
checking for getpagesize... yes
checking for lchown... yes
checking for localtime_r... yes
checking for lstat64... yes
checking for memmove... yes
checking for random... yes
checking for rint... no
checking for sbrk... yes
checking for snprintf... yes
checking for stat64... yes
checking for statvfs... yes
checking for statvfs64... yes
checking for strerror... yes
checking for strtok_r... yes
checking for truncate64... yes
checking for clock_gettime(CLOCK_MONOTONIC) and -lrt... yes
checking for wcrtomb... yes
checking for mbrtowc... yes
checking for res_ninit()... yes
checking for gnu_get_libc_version()... yes
checking for iconv in -lc... yes
checking for iconv()... yes
checking for iconv() with const input... no
checking for an implementation of va_copy()... yes
checking for an implementation of __va_copy()... yes
checking whether va_lists can be copied by value... no
checking for gcc 3.0 ABI... yes
checking for C++ "explicit" keyword... yes
checking for C++ "typename" keyword... yes
checking for modern C++ template specialization syntax support... yes
checking whether partial template specialization works... yes
checking whether operators must be re-defined for templates derived from templates... no
checking whether we need to cast a derived template to pass as its base class... no
checking whether the compiler can resolve const ambiguities for templates... yes
checking whether the C++ "using" keyword can change access... yes
checking whether the C++ "using" keyword resolves ambiguity... yes
checking for "std::" namespace... yes
checking whether standard template operator!=() is ambiguous... unambiguous
checking for C++ reinterpret_cast... yes
checking for C++ dynamic_cast to void*... yes
checking whether C++ requires implementation of unused virtual methods... no
checking for trouble comparing to zero near std::operator!=()... no
checking for __thread keyword for TLS variables... yes
checking for malloc.h... (cached) yes
checking for strndup... yes
checking for posix_memalign... yes
checking for memalign... yes
checking for valloc... yes
checking for __attribute__((always_inline))... yes
checking for __attribute__((malloc))... yes
checking for __attribute__((warn_unused_result))... yes
checking for __attribute__((noreturn))... yes
checking for LC_MESSAGES... yes
checking for localeconv... yes
checking for nspr-config... /usr/bin/nspr-config
checking for NSPR - version >= 4.7.0... yes
checking whether to build for thumb2... no
checking size of int *... 8
checking for __cxa_demangle... yes
checking for unwind.h... yes
checking for _Unwind_Backtrace... yes
checking for gcc -pipe support... yes
checking whether C compiler supports -fprofile-generate... yes
checking whether C++ compiler has -pedantic long long bug... no
checking for correct temporary object destruction order... yes
checking for correct overload resolution with const and templates... no
checking for tm_zone tm_gmtoff in struct tm... yes
checking for readline in -lreadline... yes
checking for posix_fallocate... yes
checking for setlocale... yes
checking for localeconv... (cached) yes
creating js-confdefs.h
==== js-confdefs.h =================================
/* List of defines generated by configure. Included with preprocessor flag,
 * -include, to avoid long list of -D defines on the compile command-line.
 * Do not edit.
 */

#ifndef _JS_CONFDEFS_H_
#define _JS_CONFDEFS_H_

#define AVMPLUS_64BIT 1
#define AVMPLUS_AMD64 1
#define AVMPLUS_LINUX 1
#define AVMPLUS_UNIX 1
#define CPP_THROW_NEW throw()
#define D_INO d_ino
#define EDITLINE 1
#define FEATURE_NANOJIT 1
#define HAVE_64BIT_OS 1
#define HAVE_CLOCK_MONOTONIC 1
#define HAVE_CPP_ACCESS_CHANGING_USING 1
#define HAVE_CPP_AMBIGUITY_RESOLVING_USING 1
#define HAVE_CPP_DYNAMIC_CAST_TO_VOID_PTR 1
#define HAVE_CPP_EXPLICIT 1
#define HAVE_CPP_MODERN_SPECIALIZE_TEMPLATE_SYNTAX 1
#define HAVE_CPP_NAMESPACE_STD 1
#define HAVE_CPP_NEW_CASTS 1
#define HAVE_CPP_PARTIAL_SPECIALIZATION 1
#define HAVE_CPP_TYPENAME 1
#define HAVE_CPP_UNAMBIGUOUS_STD_NOTEQUAL 1
#define HAVE_DIRENT_H 1
#define HAVE_DLADDR 1
#define HAVE_DLOPEN 1
#define HAVE_FCHMOD 1
#define HAVE_FLOCKFILE 1
#define HAVE_GETC_UNLOCKED 1
#define HAVE_GETOPT_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_GNU_GET_LIBC_VERSION 1
#define HAVE_GNU_LIBC_VERSION_H 1
#define HAVE_I18N_LC_MESSAGES 1
#define HAVE_ICONV 1
#define HAVE_INT16_T 1
#define HAVE_INT32_T 1
#define HAVE_INT64_T 1
#define HAVE_JEMALLOC_MEMALIGN 1
#define HAVE_JEMALLOC_POSIX_MEMALIGN 1
#define HAVE_JEMALLOC_VALLOC 1
#define HAVE_LCHOWN 1
#define HAVE_LINUX_QUOTA_H 1
#define HAVE_LOCALECONV 1
#define HAVE_LOCALECONV 1
#define HAVE_LOCALTIME_R 1
#define HAVE_LSTAT64 1
#define HAVE_MALLOC_H 1
#define HAVE_MBRTOWC 1
#define HAVE_MEMALIGN 1
#define HAVE_MEMMOVE 1
#define HAVE_MEMORY_H 1
#define HAVE_MMINTRIN_H 1
#define HAVE_NL_TYPES_H 1
#define HAVE_POSIX_FALLOCATE 1
#define HAVE_POSIX_MEMALIGN 1
#define HAVE_RANDOM 1
#define HAVE_RES_NINIT 1
#define HAVE_SBRK 1
#define HAVE_SETLOCALE 1
#define HAVE_SIGINFO_T 1
#define HAVE_SNPRINTF 1
#define HAVE_SSIZE_T 1
#define HAVE_STAT64 1
#define HAVE_STATVFS 1
#define HAVE_STATVFS64 1
#define HAVE_STRERROR 1
#define HAVE_STRNDUP 1
#define HAVE_STRTOK_R 1
#define HAVE_ST_BLKSIZE 1
#define HAVE_SYS_BITYPES_H 1
#define HAVE_SYS_CDEFS_H 1
#define HAVE_SYS_MOUNT_H 1
#define HAVE_SYS_QUOTA_H 1
#define HAVE_SYS_STATFS_H 1
#define HAVE_SYS_STATVFS_H 1
#define HAVE_SYS_VFS_H 1
#define HAVE_THREAD_TLS_KEYWORD 1
#define HAVE_TM_ZONE_TM_GMTOFF 1
#define HAVE_TRUNCATE64 1
#define HAVE_UINT 1
#define HAVE_UNAME_DOMAINNAME_FIELD 1
#define HAVE_UNISTD_H 1
#define HAVE_VALLOC 1
#define HAVE_VA_COPY 1
#define HAVE_VA_LIST_AS_ARRAY 1
#define HAVE_VISIBILITY_ATTRIBUTE 1
#define HAVE_VISIBILITY_HIDDEN_ATTRIBUTE 1
#define HAVE_WCRTOMB 1
#define HAVE_X11_XKBLIB_H 1
#define HAVE__UNWIND_BACKTRACE 1
#define HAVE___CXA_DEMANGLE 1
#define JS_ALIGN_OF_POINTER 8
#define JS_BITS_PER_WORD_LOG2 6
#define JS_BYTES_PER_DOUBLE 8
#define JS_BYTES_PER_WORD 8
#define JS_CPU_X64 1
#define JS_HAVE_STDINT_H 1
#define JS_METHODJIT 1
#define JS_MONOIC 1
#define JS_POLYIC 1
#define JS_POLYIC_TYPED_ARRAY 1
#define JS_PUNBOX64 1
#define JS_THREADSAFE 1
#define JS_TRACER 1
#define MALLOC_H <malloc.h>
#define MOZ_DLL_SUFFIX ".so"
#define MOZ_MEMORY 1
#define MOZ_MEMORY_LINUX 1
#define MOZ_MEMORY_SIZEOF_PTR_2POW 3
#define NEW_H <new>
#define NS_ALWAYS_INLINE __attribute__((always_inline))
#define NS_ATTR_MALLOC __attribute__((malloc))
#define NS_NORETURN __attribute__((noreturn))
#define NS_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#define SIZEOF_INT_P 8
#define STDC_HEADERS 1
#define UNIX_ASYNC_DNS 1
#define VA_COPY va_copy
#define XP_UNIX 1
#define _REENTRANT 1

#endif /* _JS_CONFDEFS_H_ */

creating Makefile
creating shell/Makefile
creating lirasm/Makefile
creating jsapi-tests/Makefile
creating tests/Makefile
creating config/Makefile
creating config/mkdepend/Makefile
updating cache ./config.cache
creating ./config.status
creating config/autoconf.mk
creating js-config.h
invoking make to create js-config script
rm -f js-config.tmp
sed < js-config.in > js-config.tmp \
-e 's|@prefix@|/usr|' \
-e 's|@exec_prefix@|/usr|' \
-e 's|@includedir@|/usr/include|' \
-e 's|@libdir@|/usr/lib64|' \
-e 's|@MOZILLA_VERSION@||' \
-e 's|@LIBRARY_NAME@|mozjs185|' \
-e 's|@NSPR_CFLAGS@|-I/usr/include/nspr|' \
-e 's|@JS_CONFIG_LIBS@|-lplds4 -lplc4 -lnspr4 -lpthread -ldl -ldl  -lm -ldl |' \
-e 's|@MOZ_JS_LIBS@|-L/usr/lib64 -lmozjs185|' \
&& mv js-config.tmp js-config && chmod +x js-config
>>> Source configured.
>>> Compiling source in /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5 ...
make -j12 
make export
make[1]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
make -C config/ nsinstall
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
nsinstall.c
x86_64-pc-linux-gnu-gcc -o host_nsinstall.o -c  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DXP_UNIX  -DUNICODE -D_UNICODE  -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr   -I/usr/include/nspr nsinstall.c
pathsub.c
x86_64-pc-linux-gnu-gcc -o host_pathsub.o -c  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DXP_UNIX  -DUNICODE -D_UNICODE  -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr   -I/usr/include/nspr pathsub.c
In file included from /usr/include/string.h:495,
                 from pathsub.c:49:
In function 'strncpy',
    inlined from 'reversepath' at pathsub.c:242:6:
/usr/include/bits/string_fortified.h:106:10: warning: '__builtin_strncpy' output truncated before terminating nul copying 3 bytes from a string of the same length [-Wstringop-truncation]
  106 |   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
x86_64-pc-linux-gnu-gcc -o nsinstall  -Wall -W -Wno-unused -Wpointer-arith -Wcast-align -W -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DXP_UNIX  -DUNICODE -D_UNICODE -lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread  -Wl,-rpath-link,/bin -Wl,-rpath-link,/usr/lib host_nsinstall.o host_pathsub.o  
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
Creating /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/.deps
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
rm -f nfspwd
cp nfspwd.pl nfspwd
chmod +x nfspwd
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R nsinstall ../dist/bin
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
Creating /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell/.deps
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
x86_64-pc-linux-gnu-g++ -DMDCPUCFG=\"md/_linux.cfg\" -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS -I/usr/include/nspr -o jscpucfg jscpucfg.cpp
jskwgen.cpp
x86_64-pc-linux-gnu-g++ -DMDCPUCFG=\"md/_linux.cfg\" -o host_jskwgen.o -c -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr -I/usr/include/nspr jskwgen.cpp
./jscpucfg > jsautocfg.tmp
mv jsautocfg.tmp jsautocfg.h
x86_64-pc-linux-gnu-g++ -DMDCPUCFG=\"md/_linux.cfg\" -o host_jskwgen -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr host_jskwgen.o  
./host_jskwgen /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/jsautokw.h
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 644 js-config.h jsautocfg.h /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/jsautokw.h js.msg jsanalyze.h jsapi.h jsarray.h jsarena.h jsatom.h jsbit.h jsbool.h jsclist.h jsclone.h jscntxt.h jscompat.h jsdate.h jsdbgapi.h jsdhash.h jsdtoa.h jsemit.h jsfun.h jsfriendapi.h jsgc.h jscell.h jsgcchunk.h jsgcstats.h jscompartment.h jshash.h jsinterp.h jsinttypes.h jsiter.h jslock.h jslong.h jsmath.h jsobj.h jsobjinlines.h json.h jsopcode.tbl jsopcode.h jsopcodeinlines.h jsotypes.h jsparse.h jsproxy.h jsprf.h jsprobes.h jspropertycache.h jspropertycacheinlines.h jspropertytree.h jsproto.tbl jsprvtd.h jspubtd.h jsreflect.h jsregexp.h jsscan.h jsscope.h jsscript.h jsscriptinlines.h jsstaticcheck.h jsstdint.h jsstr.h jstracer.h jshotloop.h jstypedarray.h jstypes.h jsutil.h jsvector.h jstl.h jshashtable.h jsversion.h jswrapper.h jsxdrapi.h jsxml.h jsval.h jsvalue.h prmjtime.h jsbuiltins.h ./nanojit/Assembler.h ./nanojit/Allocator.h ./nanojit/CodeAlloc.h ./nanojit/Containers.h ./nanojit/LIR.h ./nanojit/LIRopcode.tbl ./nanojit/avmplus.h ./nanojit/Fragmento.h ./nanojit/Native.h ./nanojit/NativeCommon.h ./nanojit/NativeX64.h ./nanojit/njconfig.h ./nanojit/njcpudetect.h ./nanojit/RegAlloc.h ./nanojit/nanojit.h ./nanojit/VMPI.h ./tracejit/Writer.h ./perf/jsperf.h ./dist/include
mkdir -p nanojit
make[1]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
make libs
make[1]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
jsoplengen.cpp
x86_64-pc-linux-gnu-g++ -DMDCPUCFG=\"md/_linux.cfg\" -o host_jsoplengen.o -c -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr -I/usr/include/nspr jsoplengen.cpp
/usr/bin/python2.7 imacro_asm.py ./imacros.jsasm /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/imacros.c.out
cat symverscript.in > symverscript
x86_64-pc-linux-gnu-g++ -DMDCPUCFG=\"md/_linux.cfg\" -o host_jsoplengen -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr host_jsoplengen.o  
./host_jsoplengen /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/jsautooplen.h
jsanalyze.cpp
x86_64-pc-linux-gnu-g++ -o jsanalyze.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsanalyze.pp jsanalyze.cpp
jsapi.cpp
x86_64-pc-linux-gnu-g++ -o jsapi.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsapi.pp jsapi.cpp
jsarena.cpp
jsarray.cpp
x86_64-pc-linux-gnu-g++ -o jsarena.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsarena.pp jsarena.cpp
x86_64-pc-linux-gnu-g++ -o jsarray.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsarray.pp jsarray.cpp
jsatom.cpp
x86_64-pc-linux-gnu-g++ -o jsatom.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsatom.pp jsatom.cpp
jsbool.cpp
x86_64-pc-linux-gnu-g++ -o jsbool.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsbool.pp jsbool.cpp
jsclone.cpp
x86_64-pc-linux-gnu-g++ -o jsclone.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsclone.pp jsclone.cpp
jscompartment.cpp
x86_64-pc-linux-gnu-g++ -o jscompartment.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jscompartment.pp jscompartment.cpp
jscntxt.cpp
x86_64-pc-linux-gnu-g++ -o jscntxt.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jscntxt.pp jscntxt.cpp
jsdate.cpp
jsdbgapi.cpp
x86_64-pc-linux-gnu-g++ -o jsdate.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdate.pp jsdate.cpp
x86_64-pc-linux-gnu-g++ -o jsdbgapi.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdbgapi.pp jsdbgapi.cpp
jsdhash.cpp
x86_64-pc-linux-gnu-g++ -o jsdhash.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdhash.pp jsdhash.cpp
In file included from jsbit.h:44,
                 from jsarena.cpp:49:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsdtoa.cpp
x86_64-pc-linux-gnu-g++ -o jsdtoa.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsdtoa.pp jsdtoa.cpp
In file included from jsbit.h:44,
                 from jsdhash.cpp:48:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsemit.cpp
x86_64-pc-linux-gnu-g++ -o jsemit.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsemit.pp jsemit.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsanalyze.h:45,
                 from jsanalyze.cpp:40:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.h:59,
                 from jsanalyze.h:45,
                 from jsanalyze.cpp:40:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsanalyze.h:45,
                 from jsanalyze.cpp:40:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
jsanalyze.h:87:21:   required from here
jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from jsanalyze.cpp:40:
jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
jsexn.cpp
x86_64-pc-linux-gnu-g++ -o jsexn.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsexn.pp jsexn.cpp
In file included from jsbool.cpp:45:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsbool.cpp:46:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbool.cpp:45:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsbool.cpp:58:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsfriendapi.cpp
x86_64-pc-linux-gnu-g++ -o jsfriendapi.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsfriendapi.pp jsfriendapi.cpp
In file included from jsatom.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.cpp:50:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsatom.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsatom.cpp:65:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsatom.cpp:51:
jsatom.cpp: In member function 'JSAtomListElement* JSAtomList::add(js::Parser*, JSAtom*, JSAtomList::AddHow)':
jsatom.h:158:55: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  158 | #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))
      |                                                       ^~~~~~~~~~~~~~~
jsatom.cpp:864:9: note: in expansion of macro 'ALE_SET_INDEX'
  864 |         ALE_SET_INDEX(ale, count++);
      |         ^~~~~~~~~~~~~
jsatom.cpp: In function 'void js_InitAtomMap(JSContext*, JSAtomMap*, JSAtomList*)':
jsatom.cpp:956:12: warning: variable 'count' set but not used [-Wunused-but-set-variable]
  956 |     uint32 count;
      |            ^~~~~
jsfun.cpp
x86_64-pc-linux-gnu-g++ -o jsfun.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsfun.pp jsfun.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsfriendapi.cpp:40:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.h:59,
                 from jsfriendapi.cpp:40:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsfriendapi.cpp:40:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsgc.cpp
x86_64-pc-linux-gnu-g++ -o jsgc.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgc.pp jsgc.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsclone.h:42,
                 from jsclone.cpp:39:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsclone.h:42,
                 from jsclone.cpp:39:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsclone.h:42,
                 from jsclone.cpp:39:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsclone.h: In member function 'void js::SCInput::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:100:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  100 |         JS_STATIC_ASSERT(sizeof(jschar) == 2);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:101:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  101 |         JS_STATIC_ASSERT(sizeof(uint32_t) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:102:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  102 |         JS_STATIC_ASSERT(sizeof(jsdouble) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsregexpinlines.h:45,
                 from jsclone.cpp:44:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from yarr/yarr/RegexJIT.h:31,
                 from jsregexpinlines.h:49,
                 from jsclone.cpp:44:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsclone.h:42,
                 from jsclone.cpp:39:
jsclone.cpp: In member function 'bool js::SCInput::readArray(T*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert73' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:203:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  203 |     JS_STATIC_ASSERT(sizeof(uint64_t) % sizeof(T) == 0);
      |     ^~~~~~~~~~~~~~~~
jsclone.cpp: In function 'uint32_t ArrayTypeToTag(uint32_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert75' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:408:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  408 |     JS_STATIC_ASSERT(TypedArray::TYPE_INT8 == 0);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert76' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:409:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  409 |     JS_STATIC_ASSERT(TypedArray::TYPE_UINT8 == 1);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert77' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:410:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  410 |     JS_STATIC_ASSERT(TypedArray::TYPE_INT16 == 2);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert78' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:411:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  411 |     JS_STATIC_ASSERT(TypedArray::TYPE_UINT16 == 3);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert79' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:412:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  412 |     JS_STATIC_ASSERT(TypedArray::TYPE_INT32 == 4);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert80' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:413:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  413 |     JS_STATIC_ASSERT(TypedArray::TYPE_UINT32 == 5);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert81' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:414:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  414 |     JS_STATIC_ASSERT(TypedArray::TYPE_FLOAT32 == 6);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert82' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:415:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  415 |     JS_STATIC_ASSERT(TypedArray::TYPE_FLOAT64 == 7);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert83' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:416:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  416 |     JS_STATIC_ASSERT(TypedArray::TYPE_UINT8_CLAMPED == 8);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert84' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.cpp:417:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  417 |     JS_STATIC_ASSERT(TypedArray::TYPE_MAX == TypedArray::TYPE_UINT8_CLAMPED + 1);
      |     ^~~~~~~~~~~~~~~~
jsgcchunk.cpp
x86_64-pc-linux-gnu-g++ -o jsgcchunk.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgcchunk.pp jsgcchunk.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jscompartment.cpp:41:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.h:59,
                 from jscompartment.cpp:41:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jscompartment.cpp:41:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jscompartment.cpp:47:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from methodjit/PolyIC.h:46,
                 from jscompartment.cpp:51:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from methodjit/BaseAssembler.h:53,
                 from methodjit/PolyIC.h:50,
                 from jscompartment.cpp:51:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jscompartment.cpp:41:
jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::TraceMonitor]':
jscompartment.cpp:86:26:   required from here
jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct js::TraceMonitor' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from jscompartment.cpp:42:
jscompartment.h:159:8: note: 'struct js::TraceMonitor' declared here
  159 | struct TraceMonitor {
      |        ^~~~~~~~~~~~
jsgcstats.cpp
x86_64-pc-linux-gnu-g++ -o jsgcstats.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsgcstats.pp jsgcstats.cpp
In file included from jsdate.cpp:63:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsdate.cpp:64:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsdate.cpp:66:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsdate.cpp:63:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsdate.cpp:74:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsdate.cpp:66:
jsdate.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)date_now_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsdate.cpp:2459:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
 2459 | JS_DEFINE_TRCINFO_1(date_now,
      | ^~~~~~~~~~~~~~~~~~~
jshash.cpp
x86_64-pc-linux-gnu-g++ -o jshash.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jshash.pp jshash.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jsgcchunk.h:43,
                 from jsgcchunk.cpp:37:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsinterp.cpp
x86_64-pc-linux-gnu-g++ -o jsinterp.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsinterp.pp jsinterp.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsdtoa.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsdtoa.cpp:47:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsdtoa.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsdtoa.cpp:54:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsinvoke.cpp
x86_64-pc-linux-gnu-g++ -o jsinvoke.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsinvoke.pp jsinvoke.cpp
In file included from jsbit.h:44,
                 from jsexn.cpp:48:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsexn.cpp:51:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsexn.cpp:48:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsexn.cpp:67:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jsexn.cpp:48:
jsexn.cpp: In function 'JSErrorReport* CopyErrorReport(JSContext*, JSErrorReport*)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsexn.cpp:146:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  146 |     JS_STATIC_ASSERT(sizeof(JSErrorReport) % sizeof(const char *) == 0);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsexn.cpp:147:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  147 |     JS_STATIC_ASSERT(sizeof(const char *) % sizeof(jschar) == 0);
      |     ^~~~~~~~~~~~~~~~
jsexn.cpp: In function 'jsval* GetStackTraceValueBuffer(JSExnPrivate*)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsexn.cpp:257:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  257 |     JS_STATIC_ASSERT(sizeof(JSStackTraceElem) % sizeof(jsval) == 0);
      |     ^~~~~~~~~~~~~~~~
jsexn.cpp: In function 'JSBool exn_enumerate(JSContext*, JSObject*)':
jsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsexn.cpp:440:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  440 |     JS_STATIC_ASSERT(sizeof(JSAtomState) <= (size_t)(uint16)-1);
      |     ^~~~~~~~~~~~~~~~
jsiter.cpp
x86_64-pc-linux-gnu-g++ -o jsiter.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsiter.pp jsiter.cpp
In file included from jscntxt.cpp:58:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.cpp:61:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jscntxt.cpp:58:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jscntxt.cpp:81:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from assembler/assembler/MacroAssembler.h:54,
                 from jscntxt.cpp:84:
assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jscntxt.cpp:90:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jscntxt.cpp:58:
jscntxt.cpp: In function 'JSContext* js_NewContext(JSRuntime*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jscntxt.cpp:746:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  746 |     JS_STATIC_ASSERT(JSVERSION_DEFAULT == 0);
      |     ^~~~~~~~~~~~~~~~
jslock.cpp
x86_64-pc-linux-gnu-g++ -o jslock.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jslock.pp jslock.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jsdbgapi.cpp:45:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsdbgapi.cpp:51:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jsdbgapi.cpp:45:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsdbgapi.cpp:72:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from methodjit/PunboxAssembler.h:43,
                 from methodjit/CodeGenIncludes.h:58,
                 from methodjit/Compiler.h:47,
                 from methodjit/Retcon.h:52,
                 from jsdbgapi.cpp:79:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jsdbgapi.cpp:45:
jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from methodjit/Compiler.h:43,
                 from methodjit/Retcon.h:52,
                 from jsdbgapi.cpp:79:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
jslog2.cpp
x86_64-pc-linux-gnu-g++ -o jslog2.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jslog2.pp jslog2.cpp
In file included from jsbit.h:44,
                 from jshash.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsmath.cpp
x86_64-pc-linux-gnu-g++ -o jsmath.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsmath.pp jsmath.cpp
In file included from jsbit.h:44,
                 from jslog2.cpp:40:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsnativestack.cpp
x86_64-pc-linux-gnu-g++ -o jsnativestack.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsnativestack.pp jsnativestack.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsgcstats.cpp:40:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.h:59,
                 from jsgcstats.cpp:40:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsprvtd.h:57,
                 from jscntxt.h:55,
                 from jsgcstats.cpp:40:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsgcstats.cpp:44:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsnum.cpp
x86_64-pc-linux-gnu-g++ -o jsnum.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsnum.pp jsnum.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsnativestack.h:42,
                 from jsnativestack.cpp:41:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jsobj.cpp
x86_64-pc-linux-gnu-g++ -o jsobj.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsobj.pp jsobj.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jslock.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jscntxt.h:59,
                 from jslock.cpp:52:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jslock.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
jslock.cpp: In function 'int js_SuspendThread(JSThinLock*)':
jslock.cpp:590:14: warning: variable 'stat' set but not used [-Wunused-but-set-variable]
  590 |     PRStatus stat;
      |              ^~~~
jslock.cpp: In function 'void js_ResumeThread(JSThinLock*)':
jslock.cpp:620:14: warning: variable 'stat' set but not used [-Wunused-but-set-variable]
  620 |     PRStatus stat;
      |              ^~~~
json.cpp
x86_64-pc-linux-gnu-g++ -o json.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/json.pp json.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsmath.cpp:48:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsmath.cpp:48:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsmath.cpp:48:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsmath.cpp:50:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsmath.cpp:48:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from jsmath.cpp:50:
jsmath.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_math_abs_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:680:1: note: in expansion of macro 'MATH_BUILTIN_1'
  680 | MATH_BUILTIN_1(js_math_abs, fabs)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_atan_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:681:1: note: in expansion of macro 'MATH_BUILTIN_1'
  681 | MATH_BUILTIN_1(math_atan, atan)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_sin_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:682:1: note: in expansion of macro 'MATH_BUILTIN_1'
  682 | MATH_BUILTIN_1(math_sin, sin)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_cos_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:683:1: note: in expansion of macro 'MATH_BUILTIN_1'
  683 | MATH_BUILTIN_1(math_cos, cos)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_sqrt_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:684:1: note: in expansion of macro 'MATH_BUILTIN_1'
  684 | MATH_BUILTIN_1(math_sqrt, sqrt)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_tan_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:677:5: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  677 |     JS_DEFINE_TRCINFO_1(name,                                                 \
      |     ^~~~~~~~~~~~~~~~~~~
jsmath.cpp:685:1: note: in expansion of macro 'MATH_BUILTIN_1'
  685 | MATH_BUILTIN_1(math_tan, tan)
      | ^~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_exp_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:715:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  715 | JS_DEFINE_TRCINFO_1(math_exp,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_acos_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:807:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  807 | JS_DEFINE_TRCINFO_1(math_acos,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_asin_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:809:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  809 | JS_DEFINE_TRCINFO_1(math_asin,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_atan2_kernel' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:811:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  811 | JS_DEFINE_TRCINFO_1(math_atan2,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_floor_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:813:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  813 | JS_DEFINE_TRCINFO_1(js_math_floor,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_log_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:815:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  815 | JS_DEFINE_TRCINFO_1(math_log,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_max_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:817:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  817 | JS_DEFINE_TRCINFO_1(js_math_max,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_min_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:819:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  819 | JS_DEFINE_TRCINFO_1(js_math_min,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_pow_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:821:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  821 | JS_DEFINE_TRCINFO_1(math_pow,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_random_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:823:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  823 | JS_DEFINE_TRCINFO_1(math_random,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_round_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:825:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  825 | JS_DEFINE_TRCINFO_1(js_math_round,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)math_ceil_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsmath.cpp:827:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  827 | JS_DEFINE_TRCINFO_1(js_math_ceil,
      | ^~~~~~~~~~~~~~~~~~~
jsopcode.cpp
x86_64-pc-linux-gnu-g++ -o jsopcode.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsopcode.pp jsopcode.cpp
In file included from jsarray.cpp:84:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsarray.cpp:85:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsarray.cpp:84:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsarray.cpp:90:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsarray.cpp:84:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsarray.cpp:110:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsarray.cpp:84:
jsarray.cpp: In function 'JSBool js_GetLengthProperty(JSContext*, JSObject*, jsuint*)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsarray.cpp:230:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  230 |     JS_STATIC_ASSERT(sizeof(jsuint) == sizeof(uint32_t));
      |     ^~~~~~~~~~~~~~~~
jsarray.cpp: In function 'JSBool BigIndexToId(JSContext*, JSObject*, jsuint, JSBool, jsid*)':
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsarray.cpp:256:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  256 |     JS_STATIC_ASSERT((jsuint)-1 == 4294967295U);
      |     ^~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jsarray.cpp:90:
jsarray.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_EnsureDenseArrayCapacity' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsarray.cpp:497:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  497 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_EnsureDenseArrayCapacity, CONTEXT, OBJECT, INT32,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_ArrayCompPush_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsarray.cpp:2110:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 2110 | JS_DEFINE_CALLINFO_3(extern, BOOL_FAIL, js_ArrayCompPush_tn, CONTEXT, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseEmptyArray' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsarray.cpp:3106:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
 3106 | JS_DEFINE_CALLINFO_2(extern, OBJECT, NewDenseEmptyArray, CONTEXT, OBJECT, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseAllocatedArray' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsarray.cpp:3108:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 3108 | JS_DEFINE_CALLINFO_3(extern, OBJECT, NewDenseAllocatedArray, CONTEXT, UINT32, OBJECT, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::NewDenseUnallocatedArray' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsarray.cpp:3110:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 3110 | JS_DEFINE_CALLINFO_3(extern, OBJECT, NewDenseUnallocatedArray, CONTEXT, UINT32, OBJECT, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsparse.cpp
x86_64-pc-linux-gnu-g++ -o jsparse.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsparse.pp jsparse.cpp
In file included from jsinterp.cpp:50,
                 from jsinvoke.cpp:42:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsinterp.cpp:52,
                 from jsinvoke.cpp:42:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsinterp.cpp:50,
                 from jsinvoke.cpp:42:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsinterp.cpp:75,
                 from jsinvoke.cpp:42:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsinterp.cpp:85,
                 from jsinvoke.cpp:42:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from methodjit/MonoIC.h:44,
                 from jsinterp.cpp:100,
                 from jsinvoke.cpp:42:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsinterp.cpp:50,
                 from jsinvoke.cpp:42:
jsinterp.cpp: In function 'bool js::Execute(JSContext*, JSObject*, JSScript*, JSStackFrame*, uintN, js::Value*)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.cpp:993:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  993 |     JS_STATIC_ASSERT(SHARP_NSLOTS == 2);
      |     ^~~~~~~~~~~~~~~~
jsproxy.cpp
x86_64-pc-linux-gnu-g++ -o jsproxy.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsproxy.pp jsproxy.cpp
In file included from jsnum.cpp:56:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsnum.cpp:57:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsnum.cpp:56:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsnum.cpp:59:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsnum.cpp:56:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsnum.cpp:75:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsnum.cpp:59:
jsnum.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseInt' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:516:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  516 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:513:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'
  513 | JS_DEFINE_TRCINFO_2(num_parseInt,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseIntDouble' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:517:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  517 |     _JS_DEFINE_CALLINFO_n tn1                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:513:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'
  513 | JS_DEFINE_TRCINFO_2(num_parseInt,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)ParseFloat' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:517:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
  517 | JS_DEFINE_TRCINFO_1(num_parseFloat,
      | ^~~~~~~~~~~~~~~~~~~
In file included from jsnum.cpp:56:
jsnum.cpp: In constructor 'js::ToCStringBuf::ToCStringBuf()':
jsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:594:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  594 |     JS_STATIC_ASSERT(sbufSize >= DTOSTR_STANDARD_BUFFER_SIZE);
      |     ^~~~~~~~~~~~~~~~
jsnum.cpp: In function 'JSString* js_IntToString(JSContext*, int32)':
jsutil.h:120:43: warning: typedef 'js_static_assert72' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:627:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  627 |     JS_STATIC_ASSERT(JSShortString::MAX_SHORT_STRING_LENGTH + 1 >= sizeof("-2147483648"));
      |     ^~~~~~~~~~~~~~~~
In file included from jsnum.cpp:59:
jsnum.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NumberToString' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:516:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  516 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:934:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'
  934 | JS_DEFINE_TRCINFO_2(num_toString,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NumberToStringWithBase' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:517:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  517 |     _JS_DEFINE_CALLINFO_n tn1                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsnum.cpp:934:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_2'
  934 | JS_DEFINE_TRCINFO_2(num_toString,
      | ^~~~~~~~~~~~~~~~~~~
jsprf.cpp
x86_64-pc-linux-gnu-g++ -o jsprf.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsprf.pp jsprf.cpp
In file included from jsbit.h:44,
                 from jsfun.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsfun.cpp:49:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsfun.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsfun.cpp:53:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jsfun.cpp:47:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsfun.cpp:91:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jsfun.cpp:47:
jsfun.cpp: In function 'JSObject* NewArguments(JSContext*, JSObject*, uint32, JSObject&)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.cpp:186:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  186 |     JS_STATIC_ASSERT(JSObject::ARGS_CLASS_RESERVED_SLOTS == 2);
      |     ^~~~~~~~~~~~~~~~
In file included from jsfun.cpp:53:
jsfun.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NewArgumentsOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:301:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
  301 | JS_DEFINE_CALLINFO_4(extern, OBJECT, js_NewArgumentsOnTrace, CONTEXT, OBJECT, UINT32, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_PutArgumentsOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:326:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  326 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_PutArgumentsOnTrace, CONTEXT, OBJECT, VALUEPTR, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CreateCallObjectOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:1062:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 1062 | JS_DEFINE_CALLINFO_4(extern, OBJECT, js_CreateCallObjectOnTrace, CONTEXT, FUNCTION, OBJECT, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_PutCallObjectOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:389:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  389 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:1169:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_6'
 1169 | JS_DEFINE_CALLINFO_6(extern, BOOL, js_PutCallObjectOnTrace, CONTEXT, OBJECT, UINT32, VALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_SetCallArg' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:1317:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 1317 | JS_DEFINE_CALLINFO_4(extern, BOOL, js_SetCallArg, CONTEXT, OBJECT, JSID, VALUE, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_SetCallVar' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:1326:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 1326 | JS_DEFINE_CALLINFO_4(extern, BOOL, js_SetCallVar, CONTEXT, OBJECT, JSID, VALUE, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CloneFunctionObject' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:2819:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 2819 | JS_DEFINE_CALLINFO_4(extern, OBJECT, js_CloneFunctionObject, CONTEXT, FUNCTION, OBJECT, OBJECT, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_AllocFlatClosure' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsfun.cpp:2853:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 2853 | JS_DEFINE_CALLINFO_3(extern, OBJECT, js_AllocFlatClosure,
      | ^~~~~~~~~~~~~~~~~~~~
jsprobes.cpp
x86_64-pc-linux-gnu-g++ -o jsprobes.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsprobes.pp jsprobes.cpp
In file included from jsiter.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsiter.cpp:49:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsiter.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsiter.cpp:53:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsiter.cpp:47:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsiter.cpp:80:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsiter.cpp:47:
jsiter.cpp: In function 'bool js::VectorToIdArray(JSContext*, js::AutoIdVector&, JSIdArray**)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsiter.cpp:339:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  339 |     JS_STATIC_ASSERT(sizeof(JSIdArray) > sizeof(jsid));
      |     ^~~~~~~~~~~~~~~~
jspropertycache.cpp
x86_64-pc-linux-gnu-g++ -o jspropertycache.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jspropertycache.pp jspropertycache.cpp
In file included from jsapi.cpp:52:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsapi.cpp:56:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsapi.cpp:52:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsapi.cpp:60:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsapi.cpp:52:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsclone.h: In member function 'void js::SCInput::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:100:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  100 |         JS_STATIC_ASSERT(sizeof(jschar) == 2);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:101:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  101 |         JS_STATIC_ASSERT(sizeof(uint32_t) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsclone.h:102:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  102 |         JS_STATIC_ASSERT(sizeof(jsdouble) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsapi.cpp:94:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from yarr/yarr/RegexJIT.h:31,
                 from jsregexpinlines.h:49,
                 from jsapi.cpp:97:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
jsapi.cpp: In function 'JSObject* JS_New(JSContext*, JSObject*, uintN, jsval*)':
jsapi.cpp:5182:51: warning: 'void* memcpy(void*, const void*, size_t)' copying an object of type 'class js::Value' with 'private' member 'js::Value::data' from an array of 'jsval' {aka 'long unsigned int'}; use assignment or copy-initialization instead [-Wclass-memaccess]
 5182 |     memcpy(args.argv(), argv, argc * sizeof(jsval));
      |                                                   ^
In file included from jsobj.h:64,
                 from jsstr.h:56,
                 from jsatom.h:52,
                 from jsarray.h:47,
                 from jsapi.cpp:57:
jsvalue.h:331:7: note: 'class js::Value' declared here
  331 | class Value
      |       ^~~~~
In file included from jsemit.cpp:52:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsemit.cpp:55:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsemit.cpp:52:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsemit.cpp:73:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsemit.cpp:52:
jsemit.cpp: In member function 'bool JSTreeContext::ensureSharpSlots()':
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsemit.cpp:1318:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1318 |     JS_STATIC_ASSERT(SHARP_NSLOTS == 2);
      |     ^~~~~~~~~~~~~~~~
jsemit.cpp: In function 'JSOp EmitBigIndexPrefix(JSContext*, JSCodeGenerator*, uintN)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsemit.cpp:1773:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1773 |     JS_STATIC_ASSERT(INDEX_LIMIT <= JS_BIT(24));
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsemit.cpp:1774:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1774 |     JS_STATIC_ASSERT(INDEX_LIMIT >=
      |     ^~~~~~~~~~~~~~~~
In file included from jsemit.cpp:56:
jsemit.cpp: In member function 'bool JSCodeGenerator::addGlobalUse(JSAtom*, uint32, js::UpvarCookie*)':
jsatom.h:158:55: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  158 | #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))
      |                                                       ^~~~~~~~~~~~~~~
jsemit.cpp:2458:5: note: in expansion of macro 'ALE_SET_INDEX'
 2458 |     ALE_SET_INDEX(ale, cookie->asInteger());
      |     ^~~~~~~~~~~~~
jsemit.cpp: In function 'JSBool EmitVariables(JSContext*, JSCodeGenerator*, JSParseNode*, JSBool, ptrdiff_t*)':
jsemit.cpp:4100:10: warning: variable 'forInLet' set but not used [-Wunused-but-set-variable]
 4100 |     bool forInLet, popScope;
      |          ^~~~~~~~
jsemit.cpp: In function 'JSBool js_EmitTree(JSContext*, JSCodeGenerator*, JSParseNode*)':
jsemit.cpp:5675:19: warning: variable 'blockObj' set but not used [-Wunused-but-set-variable]
 5675 |         JSObject *blockObj;
      |                   ^~~~~~~~
jspropertytree.cpp
x86_64-pc-linux-gnu-g++ -o jspropertytree.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jspropertytree.pp jspropertytree.cpp
jsreflect.cpp
x86_64-pc-linux-gnu-g++ -o jsreflect.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsreflect.pp jsreflect.cpp
In file included from jsprf.cpp:51:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsstr.h:52,
                 from jsprf.cpp:53:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsprf.cpp:51:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsregexp.cpp
x86_64-pc-linux-gnu-g++ -o jsregexp.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsregexp.pp jsregexp.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsprobes.cpp:36:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsprobes.cpp:36:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsprobes.cpp:36:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsscan.cpp
x86_64-pc-linux-gnu-g++ -o jsscan.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscan.pp jsscan.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from json.cpp:43:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from json.cpp:43:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from json.cpp:43:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from json.cpp:66:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsscope.cpp
x86_64-pc-linux-gnu-g++ -o jsscope.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscope.pp jsscope.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jspropertycache.h:44,
                 from jspropertycache.cpp:41:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jspropertycache.h:44,
                 from jspropertycache.cpp:41:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jspropertycache.h:44,
                 from jspropertycache.cpp:41:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jspropertycache.cpp:44:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsscript.cpp
x86_64-pc-linux-gnu-g++ -o jsscript.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsscript.pp jsscript.cpp
In file included from jsgc.cpp:56:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsgc.cpp:61:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsgc.cpp:56:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsgc.cpp:81:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsgc.cpp:91:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsgc.cpp:56:
jsgc.cpp: In function 'js::gc::ConservativeGCTest js::MarkIfGCThingWord(JSTracer*, jsuword, uint32&)':
jsutil.h:120:43: warning: typedef 'js_static_assert83' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.cpp:610:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  610 |     JS_STATIC_ASSERT(JSID_TYPE_STRING == 0 && JSID_TYPE_OBJECT == 4);
      |     ^~~~~~~~~~~~~~~~
jsgc.cpp: In function 'void FinalizeArenaList(JSCompartment*, JSContext*, unsigned int)':
jsutil.h:120:43: warning: typedef 'js_static_assert84' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.cpp:1893:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1893 |     JS_STATIC_ASSERT(!(sizeof(T) & Cell::CellMask));
      |     ^~~~~~~~~~~~~~~~
In file included from jsatom.h:50,
                 from jsgc.cpp:62:
jshashtable.h: In function 'void js_FinishGC(JSRuntime*)':
jshashtable.h:776:13: warning: '*((void*)&<anonymous> +16)' may be used uninitialized in this function [-Wmaybe-uninitialized]
  776 |             value = rhs.value;
      |             ^~~~~
jshashtable.h: In function 'JSBool js_RemoveRoot(JSRuntime*, void*)':
jshashtable.h:776:13: warning: '*((void*)&<anonymous> +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]
  776 |             value = rhs.value;
      |             ^~~~~
jshashtable.h:776:13: warning: '*((void*)&<anonymous> +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]
  776 |             value = rhs.value;
      |             ^~~~~
jshashtable.h: In function 'uint32 js_MapGCRoots(JSRuntime*, JSGCRootMapFun, void*)':
jshashtable.h:776:13: warning: '*((void*)&<anonymous> +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]
  776 |             value = rhs.value;
      |             ^~~~~
jshashtable.h:776:13: warning: '*((void*)&<anonymous> +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]
  776 |             value = rhs.value;
      |             ^~~~~
jsstr.cpp
x86_64-pc-linux-gnu-g++ -o jsstr.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsstr.pp jsstr.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jspropertytree.cpp:45:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jspropertytree.cpp:45:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jspropertytree.cpp:45:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jspropertytree.cpp:51:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jstypedarray.cpp
x86_64-pc-linux-gnu-g++ -o jstypedarray.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jstypedarray.pp jstypedarray.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsproxy.cpp:43:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsproxy.cpp:43:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsproxy.cpp:43:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsproxy.cpp:51:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsutil.cpp
x86_64-pc-linux-gnu-g++ -o jsutil.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsutil.pp jsutil.cpp
In file included from jsutil.cpp:48:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
jswrapper.cpp
x86_64-pc-linux-gnu-g++ -o jswrapper.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jswrapper.pp jswrapper.cpp
In file included from jsbit.h:44,
                 from jsscope.cpp:50:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsscope.cpp:54:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsscope.cpp:50:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsscope.cpp:64:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsscope.cpp:67:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsxdrapi.cpp
x86_64-pc-linux-gnu-g++ -o jsxdrapi.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsxdrapi.pp jsxdrapi.cpp
In file included from jsregexp.cpp:48:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsregexp.cpp:49:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsregexp.cpp:48:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsregexp.cpp:58:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from yarr/yarr/RegexJIT.h:31,
                 from jsregexpinlines.h:49,
                 from jsregexp.cpp:59:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsregexp.cpp:64:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jsregexp.cpp:64:
jsregexp.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CloneRegExpObject' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsregexp.cpp:178:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  178 | JS_DEFINE_CALLINFO_3(extern, OBJECT, js_CloneRegExpObject, CONTEXT, OBJECT, OBJECT, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsxml.cpp
x86_64-pc-linux-gnu-g++ -o jsxml.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsxml.pp jsxml.cpp
In file included from jsscript.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsscript.cpp:49:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsscript.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsscript.cpp:63:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsscript.cpp:70:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsscript.cpp: In member function 'jsuword* js::Bindings::getLocalNameArray(JSContext*, JSArenaPool*)':
jsscript.cpp:193:17: warning: variable 'constFlag' set but not used [-Wunused-but-set-variable]
  193 |         jsuword constFlag = 0;
      |                 ^~~~~~~~~
In file included from jsscript.cpp:47:
jsscript.cpp: In function 'JSBool js_XDRScript(JSXDRState*, JSScript**, JSBool*)':
jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.cpp:712:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  712 |         JS_STATIC_ASSERT(sizeof(tn->kind) == sizeof(uint8));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.cpp:713:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  713 |         JS_STATIC_ASSERT(sizeof(tn->stackDepth) == sizeof(uint16));
      |         ^~~~~~~~~~~~~~~~
jsscript.cpp: In static member function 'static JSScript* JSScript::NewScript(JSContext*, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint32, uint16, uint16, JSVersion)':
jsutil.h:120:43: warning: typedef 'js_static_assert80' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.cpp:1289:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1289 |     JS_STATIC_ASSERT(sizeof(JSObjectArray) +
      |     ^~~~~~~~~~~~~~~~
jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = JSScript]':
jsscript.cpp:1243:19:   required from here
jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct JSScript'; use assignment instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from jsfun.h:49,
                 from jscntxt.h:62,
                 from jsscript.cpp:51:
jsscript.h:349:8: note: 'struct JSScript' declared here
  349 | struct JSScript {
      |        ^~~~~~~~
prmjtime.cpp
x86_64-pc-linux-gnu-g++ -o prmjtime.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/prmjtime.pp prmjtime.cpp
In file included from jsxdrapi.cpp:47:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsxdrapi.cpp:50:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsxdrapi.cpp:47:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsxdrapi.cpp:58:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsxdrapi.cpp: In function 'JSBool JS_XDRCString(JSXDRState*, char**)':
jsxdrapi.cpp:392:21: warning: 'len' may be used uninitialized in this function [-Wmaybe-uninitialized]
  392 |     if (!JS_XDRBytes(xdr, *sp, len)) {
      |          ~~~~~~~~~~~^~~~~~~~~~~~~~~
jsxdrapi.cpp: In function 'JSBool JS_XDRValue(JSXDRState*, jsval*)':
jsxdrapi.cpp:619:52: warning: 'type' may be used uninitialized in this function [-Wmaybe-uninitialized]
  619 |     return JS_XDRUint32(xdr, &type) && XDRValueBody(xdr, type, vp);
      |                                        ~~~~~~~~~~~~^~~~~~~~~~~~~~~
sharkctl.cpp
x86_64-pc-linux-gnu-g++ -o sharkctl.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/sharkctl.pp sharkctl.cpp
In file included from jsopcode.cpp:54:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsopcode.cpp:56:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsopcode.cpp:54:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsopcode.cpp:73:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsopcode.cpp:77:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsopcode.cpp: In function 'jsbytecode* DecompileDestructuring(SprintStack*, jsbytecode*, jsbytecode*)':
jsopcode.cpp:1572:14: warning: variable 'saveop' set but not used [-Wunused-but-set-variable]
 1572 |     JSOp op, saveop;
      |              ^~~~~~
In file included from jsopcode.cpp:54:
jsopcode.cpp: In function 'jsbytecode* Decompile(SprintStack*, jsbytecode*, intN, JSOp)':
jsutil.h:120:43: warning: typedef 'js_static_assert314' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsopcode.cpp:1891:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1891 |     JS_STATIC_ASSERT(ARGNO_LEN == SLOTNO_LEN);
      |     ^~~~~~~~~~~~~~~~
jstracer.cpp
x86_64-pc-linux-gnu-g++ -o jstracer.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jstracer.pp jstracer.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsreflect.cpp:45:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsatom.h:47,
                 from jsreflect.cpp:46:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsreflect.cpp:45:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsreflect.cpp:63:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
Assembler.cpp
x86_64-pc-linux-gnu-g++ -o Assembler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Assembler.pp ./nanojit/Assembler.cpp
Allocator.cpp
x86_64-pc-linux-gnu-g++ -o Allocator.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Allocator.pp ./nanojit/Allocator.cpp
In file included from prmjtime.cpp:51:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jslock.h:43,
                 from prmjtime.cpp:54:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
CodeAlloc.cpp
x86_64-pc-linux-gnu-g++ -o CodeAlloc.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/CodeAlloc.pp ./nanojit/CodeAlloc.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/Allocator.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jswrapper.cpp:42:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jswrapper.cpp:42:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jswrapper.cpp:42:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from methodjit/PolyIC.h:46,
                 from jswrapper.cpp:48:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jswrapper.cpp:42:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from methodjit/BaseAssembler.h:53,
                 from methodjit/PolyIC.h:50,
                 from jswrapper.cpp:48:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
Containers.cpp
x86_64-pc-linux-gnu-g++ -o Containers.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Containers.pp ./nanojit/Containers.cpp
Fragmento.cpp
x86_64-pc-linux-gnu-g++ -o Fragmento.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Fragmento.pp ./nanojit/Fragmento.cpp
In file included from jsbit.h:44,
                 from jsscan.cpp:57:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsscan.cpp:60:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsscan.cpp:57:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
LIR.cpp
x86_64-pc-linux-gnu-g++ -o LIR.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/LIR.pp ./nanojit/LIR.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/Fragmento.cpp:42:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
njconfig.cpp
x86_64-pc-linux-gnu-g++ -o njconfig.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/njconfig.pp ./nanojit/njconfig.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/CodeAlloc.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RegAlloc.cpp
x86_64-pc-linux-gnu-g++ -o RegAlloc.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/RegAlloc.pp ./nanojit/RegAlloc.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/Containers.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
avmplus.cpp
x86_64-pc-linux-gnu-g++ -o avmplus.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/avmplus.pp ./nanojit/avmplus.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/njconfig.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NativeX64.cpp
x86_64-pc-linux-gnu-g++ -o NativeX64.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/NativeX64.pp ./nanojit/NativeX64.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/RegAlloc.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp
x86_64-pc-linux-gnu-g++ -o jsbuiltins.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsbuiltins.pp jsbuiltins.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/avmplus.cpp:36:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VMPI.cpp
x86_64-pc-linux-gnu-g++ -o VMPI.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/VMPI.pp ./nanojit/VMPI.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/VMPI.cpp:35:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Writer.cpp
x86_64-pc-linux-gnu-g++ -o Writer.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Writer.pp ./tracejit/Writer.cpp
In file included from jsbit.h:44,
                 from jsobj.cpp:49:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsobj.cpp:54:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsobj.cpp:49:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsobj.cpp:58:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jsobj.cpp:49:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsobj.cpp:85:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
jsobj.cpp: In function 'JSHashEntry* MarkSharpObjects(JSContext*, JSObject*, JSIdArray**)':
jsobj.cpp:221:56: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  221 |         he = JS_HashTableRawAdd(table, hep, hash, obj, (void *) sharpid);
      |                                                        ^~~~~~~~~~~~~~~~
jsobj.cpp:280:25: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  280 |             he->value = (void *) sharpid;
      |                         ^~~~~~~~~~~~~~~~
In file included from jsobj.cpp:58:
jsobj.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_Object_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsobj.cpp:2968:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
 2968 | JS_DEFINE_TRCINFO_1(js_Object,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_InitializerObject' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsobj.cpp:2983:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 2983 | JS_DEFINE_CALLINFO_3(extern, OBJECT, js_InitializerObject, CONTEXT, OBJECT, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_String_tn' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsobj.cpp:2996:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 2996 | JS_DEFINE_CALLINFO_3(extern, OBJECT, js_String_tn, CONTEXT, CALLEE_PROTOTYPE, STRING, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CreateThisFromTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsobj.cpp:3029:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 3029 | JS_DEFINE_CALLINFO_3(extern, CONSTRUCTOR_RETRY, js_CreateThisFromTrace, CONTEXT, OBJECT, UINTN, 0,
      | ^~~~~~~~~~~~~~~~~~~~
MethodJIT.cpp
x86_64-pc-linux-gnu-g++ -o MethodJIT.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/MethodJIT.pp ./methodjit/MethodJIT.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/Assembler.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
StubCalls.cpp
x86_64-pc-linux-gnu-g++ -o StubCalls.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/StubCalls.pp ./methodjit/StubCalls.cpp
In file included from jsparse.cpp:60:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsparse.cpp:61:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsparse.cpp:60:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsparse.cpp:93:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from yarr/yarr/RegexJIT.h:31,
                 from jsregexpinlines.h:49,
                 from jsparse.cpp:94:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsarray.h:47,
                 from jsparse.cpp:62:
jsparse.cpp: In member function 'JSParseNode* js::Parser::primaryExpr(js::TokenKind, JSBool)':
jsatom.h:158:55: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  158 | #define ALE_SET_INDEX(ale,index)((ale)->entry.value = (void *)(index))
      |                                                       ^~~~~~~~~~~~~~~
jsparse.cpp:8697:17: note: in expansion of macro 'ALE_SET_INDEX'
 8697 |                 ALE_SET_INDEX(ale, assignType | oldAssignType);
      |                 ^~~~~~~~~~~~~
jsparse.cpp:8540:16: warning: variable 'afterComma' set but not used [-Wunused-but-set-variable]
 8540 |         JSBool afterComma;
      |                ^~~~~~~~~~
jsparse.cpp: In function 'bool DefineGlobal(JSParseNode*, JSCodeGenerator*, JSAtom*)':
jsparse.cpp:3754:17: warning: '*((void*)& def +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]
 3754 |             def = GlobalScope::GlobalDef(shape->slot);
      |             ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsparse.cpp:3756:17: warning: '*((void*)& def +16)' may be used uninitialized in this function [-Wmaybe-uninitialized]
 3756 |             def = GlobalScope::GlobalDef(atom, funbox);
      |             ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compiler.cpp
x86_64-pc-linux-gnu-g++ -o Compiler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Compiler.pp ./methodjit/Compiler.cpp
In file included from ./jsbit.h:44,
                 from ./jstl.h:43,
                 from ./tracejit/Writer.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./jscompartment.h:43,
                 from ./tracejit/Writer.cpp:42:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsbit.h:44,
                 from ./jstl.h:43,
                 from ./tracejit/Writer.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./dist/include/nanojit.h:377,
                 from ./tracejit/Writer.h:47,
                 from ./tracejit/Writer.cpp:43:
./dist/include/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./dist/include/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./dist/include/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./dist/include/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FrameState.cpp
x86_64-pc-linux-gnu-g++ -o FrameState.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/FrameState.pp ./methodjit/FrameState.cpp
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsbuiltins.cpp:44:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsbuiltins.cpp:44:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsval.h:48,
                 from jspubtd.h:47,
                 from jsapi.h:49,
                 from jsbuiltins.cpp:44:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsbuiltins.cpp:59:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsbuiltins.cpp:64:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jsbuiltins.cpp:59:
jsbuiltins.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_dmod' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:98:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
   98 | JS_DEFINE_CALLINFO_2(extern, DOUBLE, js_dmod, DOUBLE, DOUBLE, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_imod' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:108:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  108 | JS_DEFINE_CALLINFO_2(extern, INT32, js_imod, INT32, INT32, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_UnboxDouble' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:147:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  147 | JS_DEFINE_CALLINFO_1(extern, DOUBLE, js_UnboxDouble, JSVAL, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_UnboxInt32' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:156:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  156 | JS_DEFINE_CALLINFO_1(extern, INT32, js_UnboxInt32, VALUE, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_DoubleToInt32' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:165:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  165 | JS_DEFINE_CALLINFO_1(extern, INT32, js_DoubleToInt32, DOUBLE, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_DoubleToUint32' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:172:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  172 | JS_DEFINE_CALLINFO_1(extern, UINT32, js_DoubleToUint32, DOUBLE, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_StringToNumber' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:187:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  187 | JS_DEFINE_CALLINFO_3(extern, DOUBLE, js_StringToNumber, CONTEXT, STRING, BOOLPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_StringToInt32' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:197:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  197 | JS_DEFINE_CALLINFO_3(extern, INT32, js_StringToInt32, CONTEXT, STRING, BOOLPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_AddProperty' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:232:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  232 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_AddProperty, CONTEXT, OBJECT, SHAPE, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_AddAtomProperty' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:239:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  239 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_AddAtomProperty, CONTEXT, OBJECT, SHAPE, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_HasNamedProperty' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:269:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  269 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_HasNamedProperty, CONTEXT, OBJECT, STRING,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_HasNamedPropertyInt32' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:281:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  281 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_HasNamedPropertyInt32, CONTEXT, OBJECT, INT32,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_TypeOfObject' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:290:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  290 | JS_DEFINE_CALLINFO_2(extern, STRING, js_TypeOfObject, CONTEXT, OBJECT, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_BooleanIntToString' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:298:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  298 | JS_DEFINE_CALLINFO_2(extern, STRING, js_BooleanIntToString, CONTEXT, INT32, 1, ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_NewNullClosure' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.cpp:320:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
  320 | JS_DEFINE_CALLINFO_4(extern, OBJECT, js_NewNullClosure, CONTEXT, OBJECT, OBJECT, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
FastArithmetic.cpp
x86_64-pc-linux-gnu-g++ -o FastArithmetic.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/FastArithmetic.pp ./methodjit/FastArithmetic.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/LIR.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FastOps.cpp
x86_64-pc-linux-gnu-g++ -o FastOps.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/FastOps.pp ./methodjit/FastOps.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/MethodJIT.cpp:39:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/MethodJIT.cpp:39:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/MethodJIT.cpp:39:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./nanojit/nanojit.h:377,
                 from ./jsbuiltins.h:45,
                 from ./jstracer.h:48,
                 from ./methodjit/MethodJIT.cpp:42:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/BaseAssembler.h:47,
                 from ./methodjit/MethodJIT.cpp:43:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/MethodJIT.cpp:39:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/MethodJIT.cpp:43:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/MethodJIT.cpp:39:
./methodjit/MethodJIT.cpp: In member function 'void JSStackFrame::methodjitStaticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/MethodJIT.cpp:77:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   77 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_)     == 0x30);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/MethodJIT.cpp:78:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   78 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, ncode_)    == 0x28);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/MethodJIT.cpp:44:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
StubCompiler.cpp
x86_64-pc-linux-gnu-g++ -o StubCompiler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/StubCompiler.pp ./methodjit/StubCompiler.cpp
In file included from ./nanojit/nanojit.h:377,
                 from ./nanojit/NativeX64.cpp:40:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jstypedarray.cpp:44:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jstypedarray.cpp:47:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jstypedarray.cpp:44:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstypedarray.cpp:51:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jstypedarray.cpp:44:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jstypedarray.cpp:64:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jstypedarray.cpp:51:
jstypedarray.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_TypedArray_uint8_clamp_double' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:334:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  334 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstypedarray.cpp:387:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_1'
  387 | JS_DEFINE_CALLINFO_1(extern, INT32, js_TypedArray_uint8_clamp_double, DOUBLE,
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jstypedarray.cpp:44:
jstypedarray.cpp: In member function 'void TypedArrayTemplate<NativeType>::copyIndexToValue(JSContext*, uint32, js::Value*)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstypedarray.cpp:1351:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 1351 |     JS_STATIC_ASSERT(sizeof(NativeType) < 4);
      |     ^~~~~~~~~~~~~~~~
jstypedarray.cpp: In instantiation of 'static bool TypedArrayTemplate<NativeType>::copyFrom(JSContext*, JSObject*, js::TypedArray*, jsuint) [with NativeType = uint8_clamped; JSContext = JSContext; JSObject = JSObject; jsuint = unsigned int]':
jstypedarray.cpp:959:26:   required from 'static JSBool TypedArrayTemplate<NativeType>::fun_set(JSContext*, uintN, js::Value*) [with NativeType = uint8_clamped; JSBool = int; JSContext = JSContext; uintN = unsigned int]'
jstypedarray.cpp:1558:1:   required from here
jstypedarray.cpp:1189:19: warning: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'struct uint8_clamped' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 1189 |             memcpy(dest, tarray->data, tarray->byteLength);
      |             ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jstypedarray.cpp:391:8: note: 'struct uint8_clamped' declared here
  391 | struct uint8_clamped {
      |        ^~~~~~~~~~~~~
jstypedarray.cpp: In instantiation of 'bool TypedArrayTemplate<NativeType>::copyFromWithOverlap(JSContext*, js::TypedArray*, jsuint) [with NativeType = uint8_clamped; JSContext = JSContext; jsuint = unsigned int]':
jstypedarray.cpp:1184:36:   required from 'static bool TypedArrayTemplate<NativeType>::copyFrom(JSContext*, JSObject*, js::TypedArray*, jsuint) [with NativeType = uint8_clamped; JSContext = JSContext; JSObject = JSObject; jsuint = unsigned int]'
jstypedarray.cpp:959:26:   required from 'static JSBool TypedArrayTemplate<NativeType>::fun_set(JSContext*, uintN, js::Value*) [with NativeType = uint8_clamped; JSBool = int; JSContext = JSContext; uintN = unsigned int]'
jstypedarray.cpp:1558:1:   required from here
jstypedarray.cpp:1260:20: warning: 'void* memmove(void*, const void*, size_t)' writing to an object of type 'struct uint8_clamped' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess]
 1260 |             memmove(dest, tarray->data, tarray->byteLength);
      |             ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jstypedarray.cpp:391:8: note: 'struct uint8_clamped' declared here
  391 | struct uint8_clamped {
      |        ^~~~~~~~~~~~~
MonoIC.cpp
x86_64-pc-linux-gnu-g++ -o MonoIC.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/MonoIC.pp ./methodjit/MonoIC.cpp
PolyIC.cpp
x86_64-pc-linux-gnu-g++ -o PolyIC.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/PolyIC.pp ./methodjit/PolyIC.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/StubCalls.h:44,
                 from ./methodjit/StubCompiler.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/StubCalls.h:44,
                 from ./methodjit/StubCompiler.cpp:41:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/StubCalls.h:44,
                 from ./methodjit/StubCompiler.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/MachineRegs.h:44,
                 from ./methodjit/FrameState.h:44,
                 from ./methodjit/StubCompiler.h:47,
                 from ./methodjit/StubCompiler.cpp:42:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/StubCalls.h:44,
                 from ./methodjit/StubCompiler.cpp:41:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/FrameState.h:46,
                 from ./methodjit/StubCompiler.h:47,
                 from ./methodjit/StubCompiler.cpp:42:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/StubCalls.h:44,
                 from ./methodjit/StubCompiler.cpp:41:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/StubCompiler.cpp:43:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
ImmutableSync.cpp
x86_64-pc-linux-gnu-g++ -o ImmutableSync.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ImmutableSync.pp ./methodjit/ImmutableSync.cpp
InvokeHelpers.cpp
x86_64-pc-linux-gnu-g++ -o InvokeHelpers.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/InvokeHelpers.pp ./methodjit/InvokeHelpers.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/StubCalls.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/StubCalls.cpp:41:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/StubCalls.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/StubCalls.cpp:53:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/StubCalls.cpp:53:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./nanojit/nanojit.h:377,
                 from ./jsbuiltins.h:45,
                 from ./jstracer.h:48,
                 from ./methodjit/StubCalls.cpp:55:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/StubCalls.cpp:41:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/StubCalls.cpp:53:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
In file included from jsbit.h:44,
                 from jsxml.cpp:49:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsxml.cpp:52:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jsxml.cpp:49:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsxml.cpp:76:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/FrameState.cpp:39:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/FrameState.cpp:39:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/FrameState.cpp:39:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/MachineRegs.h:44,
                 from ./methodjit/FrameState.h:44,
                 from ./methodjit/FrameState.cpp:40:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/FrameState.cpp:39:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/FrameState.h:46,
                 from ./methodjit/FrameState.cpp:40:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
./methodjit/FrameState.cpp: In member function 'void js::mjit::FrameState::discardFrame()':
./methodjit/FrameState.cpp:219:41: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::mjit::FrameState::RegisterState'; use assignment or value-initialization instead [-Wclass-memaccess]
  219 |     memset(regstate, 0, sizeof(regstate));
      |                                         ^
In file included from ./methodjit/FrameState.cpp:40:
./methodjit/FrameState.h:149:12: note: 'struct js::mjit::FrameState::RegisterState' declared here
  149 |     struct RegisterState {
      |            ^~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastArithmetic.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsbool.h:46,
                 from ./methodjit/FastArithmetic.cpp:41:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastArithmetic.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/FastArithmetic.cpp:45:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastArithmetic.cpp:41:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/FastArithmetic.cpp:45:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastArithmetic.cpp:41:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/FastArithmetic.cpp:45:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastOps.cpp:40:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsbool.h:46,
                 from ./methodjit/FastOps.cpp:40:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastOps.cpp:40:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/FastOps.cpp:46:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/FastOps.cpp:50:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsbool.h:46,
                 from ./methodjit/FastOps.cpp:40:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/FastOps.cpp:50:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/InvokeHelpers.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/InvokeHelpers.cpp:41:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/InvokeHelpers.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./nanojit/nanojit.h:377,
                 from ./jsbuiltins.h:45,
                 from ./jstracer.h:48,
                 from ./methodjit/InvokeHelpers.cpp:55:
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
./nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/MonoIC.h:44,
                 from ./methodjit/InvokeHelpers.cpp:57:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/MonoIC.h:48,
                 from ./methodjit/InvokeHelpers.cpp:57:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/InvokeHelpers.cpp:41:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/InvokeHelpers.cpp:58:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
In file included from jsinterp.cpp:50:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsinterp.cpp:52:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsinterp.cpp:50:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jstracer.h:48,
                 from jsinterp.cpp:75:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsinterp.cpp:85:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from methodjit/MonoIC.h:44,
                 from jsinterp.cpp:100:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
Retcon.cpp
TrampolineCompiler.cpp
checks.cc
conversions.cc
diy-fp.cc
x86_64-pc-linux-gnu-g++ -o Retcon.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Retcon.pp ./methodjit/Retcon.cpp
x86_64-pc-linux-gnu-g++ -o TrampolineCompiler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/TrampolineCompiler.pp ./methodjit/TrampolineCompiler.cpp
x86_64-pc-linux-gnu-g++ -o checks.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/checks.pp ./v8-dtoa/checks.cc
x86_64-pc-linux-gnu-g++ -o conversions.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/conversions.pp ./v8-dtoa/conversions.cc
x86_64-pc-linux-gnu-g++ -o diy-fp.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/diy-fp.pp ./v8-dtoa/diy-fp.cc
v8-dtoa.cc
x86_64-pc-linux-gnu-g++ -o v8-dtoa.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/v8-dtoa.pp ./v8-dtoa/v8-dtoa.cc
fast-dtoa.cc
x86_64-pc-linux-gnu-g++ -o fast-dtoa.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/fast-dtoa.pp ./v8-dtoa/fast-dtoa.cc
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/diy-fp.cc:28:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
platform.cc
x86_64-pc-linux-gnu-g++ -o platform.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/platform.pp ./v8-dtoa/platform.cc
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/checks.cc:31:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
utils.cc
x86_64-pc-linux-gnu-g++ -o utils.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/utils.pp ./v8-dtoa/utils.cc
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/conversions.cc:30:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
Assertions.cpp
x86_64-pc-linux-gnu-g++ -o Assertions.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Assertions.pp ./assembler/wtf/Assertions.cpp
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/v8-dtoa.cc:33:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
ExecutableAllocatorPosix.cpp
x86_64-pc-linux-gnu-g++ -o ExecutableAllocatorPosix.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ExecutableAllocatorPosix.pp ./assembler/jit/ExecutableAllocatorPosix.cpp
ExecutableAllocatorWin.cpp
x86_64-pc-linux-gnu-g++ -o ExecutableAllocatorWin.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ExecutableAllocatorWin.pp ./assembler/jit/ExecutableAllocatorWin.cpp
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/fast-dtoa.cc:28:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/platform.cc:37:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
ExecutableAllocatorOS2.cpp
x86_64-pc-linux-gnu-g++ -o ExecutableAllocatorOS2.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ExecutableAllocatorOS2.pp ./assembler/jit/ExecutableAllocatorOS2.cpp
ExecutableAllocator.cpp
x86_64-pc-linux-gnu-g++ -o ExecutableAllocator.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ExecutableAllocator.pp ./assembler/jit/ExecutableAllocator.cpp
In file included from ./v8-dtoa/v8.h:45,
                 from ./v8-dtoa/utils.cc:30:
./v8-dtoa/utils.h: In function 'Dest v8::internal::BitCast(const Source&)':
./v8-dtoa/utils.h:156:16: warning: typedef 'VerifySizesAreEqual' locally defined but not used [-Wunused-local-typedefs]
  156 |   typedef char VerifySizesAreEqual[sizeof(Dest) == sizeof(Source) ? 1 : -1];
      |                ^~~~~~~~~~~~~~~~~~~
ARMAssembler.cpp
x86_64-pc-linux-gnu-g++ -o ARMAssembler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/ARMAssembler.pp ./assembler/assembler/ARMAssembler.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorPosix.cpp:26:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorPosix.cpp:26:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
Logging.cpp
x86_64-pc-linux-gnu-g++ -o Logging.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/Logging.pp ./methodjit/Logging.cpp
MacroAssemblerARM.cpp
x86_64-pc-linux-gnu-g++ -o MacroAssemblerARM.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/MacroAssemblerARM.pp ./assembler/assembler/MacroAssemblerARM.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorWin.cpp:27:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorWin.cpp:27:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
MacroAssemblerX86Common.cpp
x86_64-pc-linux-gnu-g++ -o MacroAssemblerX86Common.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/MacroAssemblerX86Common.pp ./assembler/assembler/MacroAssemblerX86Common.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorOS2.cpp:27:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocatorOS2.cpp:27:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
RegexCompiler.cpp
x86_64-pc-linux-gnu-g++ -o RegexCompiler.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/RegexCompiler.pp ./yarr/yarr/RegexCompiler.cpp
RegexJIT.cpp
x86_64-pc-linux-gnu-g++ -o RegexJIT.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/RegexJIT.pp ./yarr/yarr/RegexJIT.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./jsscope.h:52,
                 from ./methodjit/MonoIC.cpp:40:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./jsscope.h:52,
                 from ./methodjit/MonoIC.cpp:40:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./jsscope.h:52,
                 from ./methodjit/MonoIC.cpp:40:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/MonoIC.h:44,
                 from ./methodjit/MonoIC.cpp:42:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/MonoIC.h:48,
                 from ./methodjit/MonoIC.cpp:42:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./jsscope.h:52,
                 from ./methodjit/MonoIC.cpp:40:
./methodjit/MonoIC.cpp: In member function 'bool CallCompiler::generateNativeStub()':
./jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/MonoIC.cpp:880:13: note: in expansion of macro 'JS_STATIC_ASSERT'
  880 |             JS_STATIC_ASSERT(sizeof(Value) == 8);
      |             ^~~~~~~~~~~~~~~~
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/MonoIC.cpp:49:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
pcre_compile.cpp
x86_64-pc-linux-gnu-g++ -o pcre_compile.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pcre_compile.pp ./yarr/pcre/pcre_compile.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocator.cpp:26:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/jit/ExecutableAllocator.cpp:26:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
pcre_exec.cpp
x86_64-pc-linux-gnu-g++ -o pcre_exec.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pcre_exec.pp ./yarr/pcre/pcre_exec.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/assembler/AssemblerBuffer.h:38,
                 from ./assembler/assembler/X86Assembler.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.cpp:45:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/assembler/AssemblerBuffer.h:38,
                 from ./assembler/assembler/X86Assembler.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.cpp:45:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
pcre_tables.cpp
x86_64-pc-linux-gnu-g++ -o pcre_tables.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pcre_tables.pp ./yarr/pcre/pcre_tables.cpp
In file included from ./methodjit/Logging.cpp:45:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Logging.cpp:46:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./methodjit/Logging.cpp:45:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
pcre_xclass.cpp
x86_64-pc-linux-gnu-g++ -o pcre_xclass.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pcre_xclass.pp ./yarr/pcre/pcre_xclass.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/Retcon.h:49,
                 from ./methodjit/Retcon.cpp:43:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/Retcon.h:49,
                 from ./methodjit/Retcon.cpp:43:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/Retcon.h:49,
                 from ./methodjit/Retcon.cpp:43:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/Retcon.h:52,
                 from ./methodjit/Retcon.cpp:43:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/Retcon.h:49,
                 from ./methodjit/Retcon.cpp:43:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/Retcon.h:52,
                 from ./methodjit/Retcon.cpp:43:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/Retcon.h:49,
                 from ./methodjit/Retcon.cpp:43:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/Retcon.h:52,
                 from ./methodjit/Retcon.cpp:43:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
pcre_ucp_searchfuncs.cpp
x86_64-pc-linux-gnu-g++ -o pcre_ucp_searchfuncs.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pcre_ucp_searchfuncs.pp ./yarr/pcre/pcre_ucp_searchfuncs.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/Compiler.cpp:47:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/Compiler.h:47,
                 from ./methodjit/Compiler.cpp:47:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./methodjit/Compiler.cpp: In member function 'js::mjit::CompileStatus js::mjit::Compiler::generateMethod()':
./jsutil.h:120:43: warning: typedef 'js_static_assert68' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:1123:13: note: in expansion of macro 'JS_STATIC_ASSERT'
 1123 |             JS_STATIC_ASSERT(JSOP_LT_LENGTH == JSOP_GE_LENGTH);
      |             ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert69' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:1124:13: note: in expansion of macro 'JS_STATIC_ASSERT'
 1124 |             JS_STATIC_ASSERT(JSOP_LE_LENGTH == JSOP_GE_LENGTH);
      |             ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:1125:13: note: in expansion of macro 'JS_STATIC_ASSERT'
 1125 |             JS_STATIC_ASSERT(JSOP_GT_LENGTH == JSOP_GE_LENGTH);
      |             ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert71' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:1126:13: note: in expansion of macro 'JS_STATIC_ASSERT'
 1126 |             JS_STATIC_ASSERT(JSOP_EQ_LENGTH == JSOP_GE_LENGTH);
      |             ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert72' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:1127:13: note: in expansion of macro 'JS_STATIC_ASSERT'
 1127 |             JS_STATIC_ASSERT(JSOP_NE_LENGTH == JSOP_GE_LENGTH);
      |             ^~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp: In member function 'void js::mjit::Compiler::jsop_setprop_slow(JSAtom*, bool)':
./jsutil.h:120:43: warning: typedef 'js_static_assert73' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./methodjit/Compiler.cpp:2911:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 2911 |     JS_STATIC_ASSERT(JSOP_SETNAME_LENGTH == JSOP_SETPROP_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Bytecode]':
./jsanalyze.h:87:21:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct js::analyze::Bytecode'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/Compiler.cpp:47:
./jsanalyze.h:56:8: note: 'struct js::analyze::Bytecode' declared here
   56 | struct Bytecode
      |        ^~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/MethodJIT.h:42,
                 from ./methodjit/Compiler.cpp:42:
./jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = js::analyze::Script]':
./methodjit/Compiler.cpp:170:22:   required from here
./jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'class js::analyze::Script'; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from ./methodjit/Compiler.h:43,
                 from ./methodjit/Compiler.cpp:47:
./jsanalyze.h:108:7: note: 'class js::analyze::Script' declared here
  108 | class Script
      |       ^~~~~~
jsperf.cpp
x86_64-pc-linux-gnu-g++ -o jsperf.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/jsperf.pp ./perf/jsperf.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./methodjit/TrampolineCompiler.h:44,
                 from ./methodjit/TrampolineCompiler.cpp:41:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./methodjit/TrampolineCompiler.h:44,
                 from ./methodjit/TrampolineCompiler.cpp:41:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PunboxAssembler.h:43,
                 from ./methodjit/CodeGenIncludes.h:58,
                 from ./methodjit/TrampolineCompiler.h:45,
                 from ./methodjit/TrampolineCompiler.cpp:41:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./methodjit/TrampolineCompiler.h:44,
                 from ./methodjit/TrampolineCompiler.cpp:41:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/CodeGenIncludes.h:63,
                 from ./methodjit/TrampolineCompiler.h:45,
                 from ./methodjit/TrampolineCompiler.cpp:41:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
pm_linux.cpp
x86_64-pc-linux-gnu-g++ -o pm_linux.o -c  -fvisibility=hidden -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -DEXPORT_JS_API -D__STDC_LIMIT_MACROS  -I. -I. -I./dist/include -I./dist/include/nsprpub  -I/usr/include/nspr   -I. -I./assembler -I./yarr  -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1   -DMOZILLA_CLIENT -include ./js-confdefs.h -MD -MF .deps/pm_linux.pp ./perf/pm_linux.cpp
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_tables.cpp:43:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_tables.cpp:43:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_tables.cpp:43:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_xclass.cpp:43:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_xclass.cpp:43:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_xclass.cpp:43:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_ucp_searchfuncs.cpp:44:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_ucp_searchfuncs.cpp:44:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_ucp_searchfuncs.cpp:44:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./perf/jsperf.h:42,
                 from ./perf/pm_linux.cpp:39:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./perf/jsperf.h:42,
                 from ./perf/pm_linux.cpp:39:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsstr.cpp:55:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsstr.cpp:58:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsstr.cpp:55:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from nanojit/nanojit.h:377,
                 from jsbuiltins.h:45,
                 from jsstr.cpp:62:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jsstr.cpp:55:
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jsstr.cpp:81:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from yarr/yarr/RegexJIT.h:31,
                 from jsregexpinlines.h:49,
                 from jsstr.cpp:82:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from jsstr.cpp:55:
jsstr.cpp: In function 'jschar* AllocChars(JSContext*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert70' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.cpp:119:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  119 |     JS_STATIC_ASSERT(JSString::MAX_LENGTH * sizeof(jschar) < UINT32_MAX);
      |     ^~~~~~~~~~~~~~~~
In file included from jsstr.cpp:62:
jsstr.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_Flatten' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsstr.cpp:239:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  239 | JS_DEFINE_CALLINFO_2(extern, BOOL, js_Flatten, CONTEXT, STRING, 0, nanojit::ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_ConcatStrings' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsstr.cpp:3063:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
 3063 | JS_DEFINE_TRCINFO_1(str_concat,
      | ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)String_fromCharCode' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:548:41: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  548 | #define _JS_DEFINE_CALLINFO_n(n, args)  JS_DEFINE_CALLINFO_##n args
      |                                         ^~~~~~~~~~~~~~~~~~~
jsbuiltins.h:509:5: note: in expansion of macro '_JS_DEFINE_CALLINFO_n'
  509 |     _JS_DEFINE_CALLINFO_n tn0                                                                     \
      |     ^~~~~~~~~~~~~~~~~~~~~
jsstr.cpp:3384:1: note: in expansion of macro 'JS_DEFINE_TRCINFO_1'
 3384 | JS_DEFINE_TRCINFO_1(str_fromCharCode,
      | ^~~~~~~~~~~~~~~~~~~
In file included from jsstr.cpp:55:
jsstr.cpp: In member function 'JSFlatString* js::StringBuffer::finishString()':
jsutil.h:120:43: warning: typedef 'js_static_assert76' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.cpp:3509:5: note: in expansion of macro 'JS_STATIC_ASSERT'
 3509 |     JS_STATIC_ASSERT(JSShortString::MAX_SHORT_STRING_LENGTH < CharBuffer::InlineLength);
      |     ^~~~~~~~~~~~~~~~
In file included from jsstr.cpp:62:
jsstr.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_EqualStringsOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsstr.cpp:3831:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 3831 | JS_DEFINE_CALLINFO_3(extern, BOOL, js_EqualStringsOnTrace,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_CompareStringsOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jsstr.cpp:3885:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
 3885 | JS_DEFINE_CALLINFO_3(extern, INT32, js_CompareStringsOnTrace,
      | ^~~~~~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./perf/jsperf.h:42,
                 from ./perf/jsperf.cpp:39:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./perf/jsperf.h:42,
                 from ./perf/jsperf.cpp:39:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./perf/jsperf.h:42,
                 from ./perf/jsperf.cpp:39:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/PolyIC.h:43,
                 from ./methodjit/PolyIC.cpp:39:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsatom.h:47,
                 from ./jscntxt.h:59,
                 from ./methodjit/PolyIC.h:43,
                 from ./methodjit/PolyIC.cpp:39:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/PolyIC.h:43,
                 from ./methodjit/PolyIC.cpp:39:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./methodjit/PolyIC.h:46,
                 from ./methodjit/PolyIC.cpp:39:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsprvtd.h:57,
                 from ./jscntxt.h:55,
                 from ./methodjit/PolyIC.h:43,
                 from ./methodjit/PolyIC.cpp:39:
./jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
./jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
./jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
./jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from ./methodjit/BaseAssembler.h:53,
                 from ./methodjit/PolyIC.h:50,
                 from ./methodjit/PolyIC.cpp:39:
./jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
./jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
./methodjit/PolyIC.cpp: In function 'void js::mjit::ic::SetProp(js::VMFrame&, js::mjit::ic::PICInfo*)':
./methodjit/PolyIC.cpp:1740:11: warning: variable 'rval' set but not used [-Wunused-but-set-variable]
 1740 |     Value rval = f.regs.sp[-1];
      |           ^~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_compile.cpp:44:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_compile.cpp:44:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_compile.cpp:44:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./yarr/pcre/pcre_compile.cpp: In function 'bool compileBranch(int, int*, unsigned char**, const UChar**, const UChar*, ErrorCode*, int*, int*, CompileData&)':
./yarr/pcre/pcre_compile.cpp:572:18: warning: variable 'tempptr' set but not used [-Wunused-but-set-variable]
  572 |     const UChar* tempptr;
      |                  ^~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_exec.cpp:45:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_exec.cpp:45:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/pcre/pcre.h:45,
                 from ./yarr/pcre/pcre_internal.h:72,
                 from ./yarr/pcre/pcre_exec.cpp:45:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
./jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
./jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
./jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
./jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert51' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
./jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
./jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
./jsutil.h:120:43: warning: typedef 'js_static_assert60' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
./jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert63' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/wtf/ASCIICType.h:32,
                 from ./yarr/yarr/RegexParser.h:30,
                 from ./yarr/yarr/RegexCompiler.h:29,
                 from ./yarr/yarr/RegexCompiler.cpp:27:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/wtf/ASCIICType.h:32,
                 from ./yarr/yarr/RegexParser.h:30,
                 from ./yarr/yarr/RegexCompiler.h:29,
                 from ./yarr/yarr/RegexCompiler.cpp:27:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./jsstr.h:52,
                 from ./yarr/jswtfbridge.h:48,
                 from ./yarr/wtf/ASCIICType.h:32,
                 from ./yarr/yarr/RegexParser.h:30,
                 from ./yarr/yarr/RegexCompiler.h:29,
                 from ./yarr/yarr/RegexCompiler.cpp:27:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/assembler/AssemblerBuffer.h:38,
                 from ./assembler/assembler/X86Assembler.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.h:37,
                 from ./assembler/assembler/MacroAssemblerX86_64.h:37,
                 from ./assembler/assembler/MacroAssembler.h:54,
                 from ./yarr/yarr/RegexJIT.h:31,
                 from ./yarr/yarr/RegexJIT.cpp:26:
./jsutil.h: In function 'T* js_array_new(size_t)':
./jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
./jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/assembler/AssemblerBuffer.h:38,
                 from ./assembler/assembler/X86Assembler.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.h:37,
                 from ./assembler/assembler/MacroAssemblerX86_64.h:37,
                 from ./assembler/assembler/MacroAssembler.h:54,
                 from ./yarr/yarr/RegexJIT.h:31,
                 from ./yarr/yarr/RegexJIT.cpp:26:
./jsapi.h: At global scope:
./jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ./assembler/assembler/MacroAssembler.h:54,
                 from ./yarr/yarr/RegexJIT.h:31,
                 from ./yarr/yarr/RegexJIT.cpp:26:
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::call()':
./assembler/assembler/MacroAssemblerX86_64.h:127:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  127 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::tailRecursiveCall()':
./assembler/assembler/MacroAssemblerX86_64.h:135:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  135 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
./assembler/assembler/MacroAssemblerX86_64.h: In member function 'JSC::AbstractMacroAssembler<JSC::X86Assembler>::Call JSC::MacroAssemblerX86_64::makeTailRecursiveCall(JSC::AbstractMacroAssembler<JSC::X86Assembler>::Jump)':
./assembler/assembler/MacroAssemblerX86_64.h:144:22: warning: variable 'label' set but not used [-Wunused-but-set-variable]
  144 |         DataLabelPtr label = moveWithPatch(ImmPtr(0), scratchRegister);
      |                      ^~~~~
In file included from ./jsval.h:48,
                 from ./jspubtd.h:47,
                 from ./jsapi.h:49,
                 from ./assembler/jit/ExecutableAllocator.h:33,
                 from ./assembler/assembler/AssemblerBuffer.h:38,
                 from ./assembler/assembler/X86Assembler.h:37,
                 from ./assembler/assembler/MacroAssemblerX86Common.h:37,
                 from ./assembler/assembler/MacroAssemblerX86_64.h:37,
                 from ./assembler/assembler/MacroAssembler.h:54,
                 from ./yarr/yarr/RegexJIT.h:31,
                 from ./yarr/yarr/RegexJIT.cpp:26:
./jsvalue.h: In member function 'void js::Value::staticAssertions()':
./jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
./jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
./jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
./jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
./jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
./jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
./jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jsutil.h: In function 'T* js_array_new(size_t)':
jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from nanojit/nanojit.h:377,
                 from jstracer.cpp:58:
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from jstracer.cpp:59:
jsapi.h: At global scope:
jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jsvalue.h: In member function 'void js::Value::staticAssertions()':
jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from jstracer.cpp:87:
jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js_IntToString' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:323:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
  323 | JS_DEFINE_CALLINFO_2(extern, STRING, js_IntToString, CONTEXT, INT32, 1, nanojit::ACCSET_NONE)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jstracer.cpp: In function 'void js::NativeToValue(JSContext*, js::Value&, JSValueType, double*)':
jsutil.h:120:43: warning: typedef 'js_static_assert73' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:2979:9: note: in expansion of macro 'JS_STATIC_ASSERT'
 2979 |         JS_STATIC_ASSERT(sizeof(Value) == sizeof(double));
      |         ^~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetClosureVar' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:8140:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 8140 | JS_DEFINE_CALLINFO_4(extern, UINT32, GetClosureVar, CONTEXT, OBJECT, CVIPTR, DOUBLEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetClosureArg' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:8142:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
 8142 | JS_DEFINE_CALLINFO_4(extern, UINT32, GetClosureArg, CONTEXT, OBJECT, CVIPTR, DOUBLEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jstracer.cpp: In member function 'nanojit::LIns* js::TraceRecorder::unbox_object(nanojit::LIns*, JSValueType, js::VMSideExit*)':
jsutil.h:120:43: warning: typedef 'js_static_assert76' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:10001:5: note: in expansion of macro 'JS_STATIC_ASSERT'
10001 |     JS_STATIC_ASSERT(JSVAL_TYPE_OBJECT == JSVAL_UPPER_INCL_TYPE_OF_VALUE_SET);
      |     ^~~~~~~~~~~~~~~~
jstracer.cpp: In member function 'void js::TraceRecorder::unbox_any_object(js::tjit::Address, nanojit::LIns**, nanojit::LIns**)':
jsutil.h:120:43: warning: typedef 'js_static_assert77' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:10044:5: note: in expansion of macro 'JS_STATIC_ASSERT'
10044 |     JS_STATIC_ASSERT(JSVAL_TYPE_OBJECT == JSVAL_UPPER_INCL_TYPE_OF_VALUE_SET);
      |     ^~~~~~~~~~~~~~~~
jstracer.cpp: In member function 'nanojit::LIns* js::TraceRecorder::unbox_string_id(nanojit::LIns*)':
jsutil.h:120:43: warning: typedef 'js_static_assert78' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:10118:5: note: in expansion of macro 'JS_STATIC_ASSERT'
10118 |     JS_STATIC_ASSERT(JSID_TYPE_STRING == 0);
      |     ^~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::functionProbe' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:10588:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
10588 | JS_DEFINE_CALLINFO_3(static, BOOL, functionProbe, CONTEXT, FUNCTION, INT32, 0, ACCSET_ALL)
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jstracer.cpp: In member function 'void js::TraceRecorder::propagateFailureToBuiltinStatus(nanojit::LIns*, nanojit::LIns*&)':
jsutil.h:120:43: warning: typedef 'js_static_assert80' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:11186:5: note: in expansion of macro 'JS_STATIC_ASSERT'
11186 |     JS_STATIC_ASSERT(((JS_TRUE & 1) ^ 1) << 1 == 0);
      |     ^~~~~~~~~~~~~~~~
jsutil.h:120:43: warning: typedef 'js_static_assert81' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:11187:5: note: in expansion of macro 'JS_STATIC_ASSERT'
11187 |     JS_STATIC_ASSERT(((JS_FALSE & 1) ^ 1) << 1 == BUILTIN_ERROR);
      |     ^~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::ceilReturningInt' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:11432:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
11432 | JS_DEFINE_CALLINFO_2(static, BOOL, ceilReturningInt, DOUBLE, INT32PTR, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::floorReturningInt' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:11433:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
11433 | JS_DEFINE_CALLINFO_2(static, BOOL, floorReturningInt, DOUBLE, INT32PTR, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::roundReturningInt' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:11434:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
11434 | JS_DEFINE_CALLINFO_2(static, BOOL, roundReturningInt, DOUBLE, INT32PTR, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::DeleteIntKey' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:11845:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
11845 | JS_DEFINE_CALLINFO_4(extern, BOOL_FAIL, DeleteIntKey, CONTEXT, OBJECT, INT32, BOOL,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::DeleteStrKey' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:11867:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
11867 | JS_DEFINE_CALLINFO_4(extern, BOOL_FAIL, DeleteStrKey, CONTEXT, OBJECT, STRING, BOOL,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::MethodWriteBarrier' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:12145:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
12145 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, MethodWriteBarrier, CONTEXT, OBJECT, UINT32, CVALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetPropertyByName' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:12722:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
12722 | JS_DEFINE_CALLINFO_5(static, BOOL_FAIL, GetPropertyByName, CONTEXT, OBJECT, STRINGPTR, VALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetPropertyByIndex' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:12796:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
12796 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, GetPropertyByIndex, CONTEXT, OBJECT, INT32, VALUEPTR, 0,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetPropertyById' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:12826:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
12826 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, GetPropertyById, CONTEXT, OBJECT, JSID, VALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jstracer.cpp: In member function 'js::RecordingStatus js::TraceRecorder::getPropertyById(nanojit::LIns*, js::Value*)':
jsutil.h:120:43: warning: typedef 'js_static_assert91' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
jstracer.cpp:12845:5: note: in expansion of macro 'JS_STATIC_ASSERT'
12845 |     JS_STATIC_ASSERT(sizeof(jsid) == sizeof(void *));
      |     ^~~~~~~~~~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetPropertyWithNativeGetter' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:12884:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
12884 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, GetPropertyWithNativeGetter,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::SetPropertyByName' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13211:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
13211 | JS_DEFINE_CALLINFO_5(static, BOOL_FAIL, SetPropertyByName,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::InitPropertyByName' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13230:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
13230 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, InitPropertyByName, CONTEXT, OBJECT, STRINGPTR, VALUE,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::SetPropertyByIndex' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13271:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
13271 | JS_DEFINE_CALLINFO_5(static, BOOL_FAIL, SetPropertyByIndex, CONTEXT, OBJECT, INT32, VALUEPTR, BOOL,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::InitPropertyByIndex' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13289:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
13289 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, InitPropertyByIndex, CONTEXT, OBJECT, INT32, VALUE,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::CheckSameGlobal' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13532:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
13532 | JS_DEFINE_CALLINFO_2(static, BOOL, CheckSameGlobal, OBJECT, OBJECT, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetUpvarArgOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13591:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
13591 | JS_DEFINE_CALLINFO_5(extern, UINT32, GetUpvarArgOnTrace, CONTEXT, UINT32, INT32, UINT32,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetUpvarVarOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13593:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
13593 | JS_DEFINE_CALLINFO_5(extern, UINT32, GetUpvarVarOnTrace, CONTEXT, UINT32, INT32, UINT32,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::GetUpvarStackOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:374:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  374 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:13595:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_5'
13595 | JS_DEFINE_CALLINFO_5(extern, UINT32, GetUpvarStackOnTrace, CONTEXT, UINT32, INT32, UINT32,
      | ^~~~~~~~~~~~~~~~~~~~
In file included from jstracer.h:56,
                 from jstracer.cpp:78:
jstracer.cpp: In member function 'js::RecordingStatus js::TraceRecorder::createThis(JSObject&, nanojit::LIns*, nanojit::LIns**)':
./dist/include/Writer.h:857:50: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  857 |     #define nameImmw(ww)        name(w.immpNonGC((void *) (ww)), #ww)
      |                                                  ^~~~~~~~~~~~~
jstracer.cpp:13823:24: note: in expansion of macro 'nameImmw'
13823 |     LIns* args[] = { w.nameImmw(protoSlot), ctor_ins, cx_ins };
      |                        ^~~~~~~~
In file included from jstracer.h:48,
                 from jstracer.cpp:78:
jstracer.cpp: At global scope:
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::MethodReadBarrier' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:14191:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
14191 | JS_DEFINE_CALLINFO_4(static, OBJECT_FAIL, MethodReadBarrier, CONTEXT, OBJECT, SHAPE, OBJECT,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::ObjectToIterator' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:361:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  361 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:14888:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_4'
14888 | JS_DEFINE_CALLINFO_4(static, BOOL_FAIL, ObjectToIterator, CONTEXT, OBJECT, INT32, VALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::IteratorMore' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:14936:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
14936 | JS_DEFINE_CALLINFO_3(extern, BOOL_FAIL, IteratorMore, CONTEXT, OBJECT, VALUEPTR,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::CloseIterator' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:15004:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
15004 | JS_DEFINE_CALLINFO_2(extern, BOOL_FAIL, CloseIterator, CONTEXT, OBJECT, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::HasInstanceOnTrace' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:350:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  350 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:15478:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_3'
15478 | JS_DEFINE_CALLINFO_3(static, BOOL_FAIL, HasInstanceOnTrace, CONTEXT, OBJECT, VALUE,
      | ^~~~~~~~~~~~~~~~~~~~
jsbuiltins.h:294:11: warning: narrowing conversion of '(intptr_t)js::js_Unbrand' from 'intptr_t' {aka 'long int'} to 'uintptr_t' {aka 'long unsigned int'} [-Wnarrowing]
  294 |         { (intptr_t) &name, argtypes, nanojit::ABI_FASTCALL, isPure, storeAccSet _JS_CI_NAME(name) }; \
jsbuiltins.h:341:5: note: in expansion of macro '_JS_DEFINE_CALLINFO'
  341 |     _JS_DEFINE_CALLINFO(linkage, op,                                                              \
      |     ^~~~~~~~~~~~~~~~~~~
jstracer.cpp:16585:1: note: in expansion of macro 'JS_DEFINE_CALLINFO_2'
16585 | JS_DEFINE_CALLINFO_2(extern, BOOL, js_Unbrand, CONTEXT, OBJECT, 0, ACCSET_STORE_ANY)
      | ^~~~~~~~~~~~~~~~~~~~
jstracer.cpp: In member function 'js::LoopProfile::ProfileAction js::LoopProfile::profileOperation(JSContext*, JSOp)':
jstracer.cpp:17366:20: warning: variable 'v' set but not used [-Wunused-but-set-variable]
17366 |         StackValue v = stackAt(-1);
      |                    ^
In file included from jsbit.h:44,
                 from jstracer.cpp:43:
jsutil.h: In instantiation of 'void js::PodZero(T*) [with T = nanojit::LogControl]':
jstracer.cpp:7712:27:   required from here
jsutil.h:422:11: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'class nanojit::LogControl' with no trivial copy-assignment; use assignment or value-initialization instead [-Wclass-memaccess]
  422 |     memset(t, 0, sizeof(T));
      |     ~~~~~~^~~~~~~~~~~~~~~~~
In file included from jstracer.cpp:58:
nanojit/nanojit.h:351:11: note: 'class nanojit::LogControl' declared here
  351 |     class LogControl
      |           ^~~~~~~~~~
rm -f libjs_static.a
x86_64-pc-linux-gnu-ar cr libjs_static.a jsanalyze.o jsapi.o jsarena.o jsarray.o jsatom.o jsbool.o jsclone.o jscntxt.o jscompartment.o jsdate.o jsdbgapi.o jsdhash.o jsdtoa.o jsemit.o jsexn.o jsfriendapi.o jsfun.o jsgc.o jsgcchunk.o jsgcstats.o jshash.o jsinterp.o jsinvoke.o jsiter.o jslock.o jslog2.o jsmath.o jsnativestack.o jsnum.o jsobj.o json.o jsopcode.o jsparse.o jsproxy.o jsprf.o jsprobes.o jspropertycache.o jspropertytree.o jsreflect.o jsregexp.o jsscan.o jsscope.o jsscript.o jsstr.o jstypedarray.o jsutil.o jswrapper.o jsxdrapi.o jsxml.o prmjtime.o sharkctl.o jstracer.o Assembler.o Allocator.o CodeAlloc.o Containers.o Fragmento.o LIR.o njconfig.o RegAlloc.o avmplus.o NativeX64.o jsbuiltins.o VMPI.o Writer.o MethodJIT.o StubCalls.o Compiler.o FrameState.o FastArithmetic.o FastOps.o StubCompiler.o MonoIC.o PolyIC.o ImmutableSync.o InvokeHelpers.o Retcon.o TrampolineCompiler.o checks.o conversions.o diy-fp.o v8-dtoa.o fast-dtoa.o platform.o utils.o Assertions.o ExecutableAllocatorPosix.o ExecutableAllocatorWin.o ExecutableAllocatorOS2.o ExecutableAllocator.o ARMAssembler.o Logging.o MacroAssemblerARM.o MacroAssemblerX86Common.o RegexCompiler.o RegexJIT.o pcre_compile.o pcre_exec.o pcre_tables.o pcre_xclass.o pcre_ucp_searchfuncs.o jsperf.o pm_linux.o  
x86_64-pc-linux-gnu-ranlib libjs_static.a
rm -f libmozjs185.so
x86_64-pc-linux-gnu-g++  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED -DUSE_SYSTEM_MALLOC=1 -DENABLE_ASSEMBLER=1 -DENABLE_JIT=1 -fPIC -shared -Wl,-z,defs -Wl,-h,libmozjs185.so -o libmozjs185.so  jsanalyze.o jsapi.o jsarena.o jsarray.o jsatom.o jsbool.o jsclone.o jscntxt.o jscompartment.o jsdate.o jsdbgapi.o jsdhash.o jsdtoa.o jsemit.o jsexn.o jsfriendapi.o jsfun.o jsgc.o jsgcchunk.o jsgcstats.o jshash.o jsinterp.o jsinvoke.o jsiter.o jslock.o jslog2.o jsmath.o jsnativestack.o jsnum.o jsobj.o json.o jsopcode.o jsparse.o jsproxy.o jsprf.o jsprobes.o jspropertycache.o jspropertytree.o jsreflect.o jsregexp.o jsscan.o jsscope.o jsscript.o jsstr.o jstypedarray.o jsutil.o jswrapper.o jsxdrapi.o jsxml.o prmjtime.o sharkctl.o jstracer.o Assembler.o Allocator.o CodeAlloc.o Containers.o Fragmento.o LIR.o njconfig.o RegAlloc.o avmplus.o NativeX64.o jsbuiltins.o VMPI.o Writer.o MethodJIT.o StubCalls.o Compiler.o FrameState.o FastArithmetic.o FastOps.o StubCompiler.o MonoIC.o PolyIC.o ImmutableSync.o InvokeHelpers.o Retcon.o TrampolineCompiler.o checks.o conversions.o diy-fp.o v8-dtoa.o fast-dtoa.o platform.o utils.o Assertions.o ExecutableAllocatorPosix.o ExecutableAllocatorWin.o ExecutableAllocatorOS2.o ExecutableAllocator.o ARMAssembler.o Logging.o MacroAssemblerARM.o MacroAssemblerX86Common.o RegexCompiler.o RegexJIT.o pcre_compile.o pcre_exec.o pcre_tables.o pcre_xclass.o pcre_ucp_searchfuncs.o jsperf.o pm_linux.o     -lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread  -Wl,-rpath-link,/bin -Wl,-rpath-link,/usr/lib -lplds4 -lplc4 -lnspr4 -lpthread -ldl -Wl,-soname,libmozjs185.so.1.0 -Wl,-version-script,symverscript -ldl  -lm -ldl  
chmod +x libmozjs185.so
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 644 libjs_static.a ./dist/lib
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 libmozjs185.so ./dist/lib
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 libmozjs185.so ./dist/bin
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 host_jskwgen host_jsoplengen ./dist/host/bin
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 nsinstall ../dist/host/bin
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -D ../dist/bin/chrome
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
js.cpp
x86_64-pc-linux-gnu-g++ -o js.o -c  -fvisibility=hidden -DEXPORT_JS_API -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -I.. -I.. -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr    -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED   -DMOZILLA_CLIENT -include ../js-confdefs.h -MD -MF .deps/js.pp js.cpp
jsworkers.cpp
x86_64-pc-linux-gnu-g++ -o jsworkers.o -c  -fvisibility=hidden -DEXPORT_JS_API -DOSTYPE=\"Linux5.4\" -DOSARCH=Linux -I.. -I.. -I. -I. -I../dist/include -I../dist/include/nsprpub  -I/usr/include/nspr    -fPIC  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED   -DMOZILLA_CLIENT -include ../js-confdefs.h -MD -MF .deps/jsworkers.pp jsworkers.cpp
In file included from ../jsval.h:48,
                 from ../jspubtd.h:47,
                 from ../jsapi.h:49,
                 from jsworkers.cpp:48:
../jsutil.h: In function 'T* js_array_new(size_t)':
../jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
../jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from jsworkers.cpp:48:
../jsapi.h: At global scope:
../jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from ../jsval.h:48,
                 from ../jspubtd.h:47,
                 from ../jsapi.h:49,
                 from jsworkers.cpp:48:
../jsvalue.h: In member function 'void js::Value::staticAssertions()':
../jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
../jsstr.h: In static member function 'static void JSString::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
../jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
../jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
../jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
../jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
../jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
../jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
../jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
../jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
../jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
../jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
jsworkers.cpp: In member function 'void js::workers::MainQueue::destroy(JSContext*)':
jsworkers.cpp:372:9: warning: deleting object of polymorphic class type 'js::workers::MainQueue' which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
  372 |         delete this;
      |         ^~~~~~~~~~~
jsworkers.cpp: In member function 'bool js::workers::ThreadPool::start(JSContext*)':
jsworkers.cpp:512:13: warning: deleting object of polymorphic class type 'js::workers::WorkerQueue' which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
  512 |             delete wq;
      |             ^~~~~~~~~
jsworkers.cpp: In member function 'void js::workers::ThreadPool::shutdown(JSContext*)':
jsworkers.cpp:549:9: warning: deleting object of polymorphic class type 'js::workers::WorkerQueue' which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
  549 |         delete wq;
      |         ^~~~~~~~~
jsworkers.cpp: In static member function 'static void js::workers::Worker::jsFinalize(JSContext*, JSObject*)':
jsworkers.cpp:691:13: warning: deleting object of polymorphic class type 'js::workers::Worker' which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
  691 |             delete w;
      |             ^~~~~~~~
jsworkers.cpp: In static member function 'static js::workers::Worker* js::workers::Worker::create(JSContext*, js::workers::WorkerParent*, JSString*, JSObject*)':
jsworkers.cpp:1076:9: warning: deleting object of polymorphic class type 'js::workers::Worker' which has non-virtual destructor might cause undefined behavior [-Wdelete-non-virtual-dtor]
 1076 |         delete w;
      |         ^~~~~~~~
In file included from js.cpp:56:
../jsutil.h: In function 'T* js_array_new(size_t)':
../jsutil.h:302:5: warning: this 'if' clause does not guard... [-Wmisleading-indentation]
  302 |     if (!memory)
      |     ^~
../jsutil.h:304:2: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the 'if'
  304 |  *(size_t *)memory = n;
      |  ^
In file included from ../jswrapper.h:45,
                 from js.cpp:58:
../jsapi.h: At global scope:
../jsapi.h:1381:39: warning: ignoring attributes on template argument 'jsval' {aka 'long unsigned int'} [-Wignored-attributes]
 1381 | template<> class AnchorPermitted<jsval> { };
      |                                       ^
In file included from js.cpp:56:
../jsvalue.h: In member function 'void js::Value::staticAssertions()':
../jsutil.h:120:43: warning: typedef 'js_static_assert6' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:737:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  737 |         JS_STATIC_ASSERT(sizeof(JSValueType) == 1);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert7' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:738:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  738 |         JS_STATIC_ASSERT(sizeof(JSValueTag) == 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert8' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:739:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  739 |         JS_STATIC_ASSERT(sizeof(JSBool) == 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert9' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:740:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  740 |         JS_STATIC_ASSERT(sizeof(JSWhyMagic) <= 4);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert10' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsvalue.h:741:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  741 |         JS_STATIC_ASSERT(sizeof(jsval) == 8);
      |         ^~~~~~~~~~~~~~~~
../jsstr.h: In static member function 'static void JSString::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert39' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:487:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  487 |         JS_STATIC_ASSERT(((JSString::MAX_LENGTH << JSString::LENGTH_SHIFT) >>
      |         ^~~~~~~~~~~~~~~~
../jsstr.h: In static member function 'static void JSShortString::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert43' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:596:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  596 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) ==
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert44' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:598:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  598 |         JS_STATIC_ASSERT(offsetof(JSShortString, mDummy) == sizeof(JSString));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert45' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstr.h:599:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  599 |         JS_STATIC_ASSERT(offsetof(JSString, inlineStorage) +
      |         ^~~~~~~~~~~~~~~~
../jsscript.h: In member function 'void js::UpvarCookie::checkInvariants()':
../jsutil.h:120:43: warning: typedef 'js_static_assert47' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsscript.h:83:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   83 |         JS_STATIC_ASSERT(sizeof(UpvarCookie) == sizeof(uint32));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert48' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsscript.h:84:9: note: in expansion of macro 'JS_STATIC_ASSERT'
   84 |         JS_STATIC_ASSERT(UPVAR_LEVEL_LIMIT < FREE_LEVEL);
      |         ^~~~~~~~~~~~~~~~
../jsfun.h: In static member function 'static uintN JSFunction::offsetOfNativeOrScript()':
../jsutil.h:120:43: warning: typedef 'js_static_assert49' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsfun.h:228:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  228 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, i.script));
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert50' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsfun.h:229:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  229 |         JS_STATIC_ASSERT(offsetof(U, n.native) == offsetof(U, nativeOrScript));
      |         ^~~~~~~~~~~~~~~~
../jsgc.h: In function 'size_t js::gc::GetFinalizableTraceKind(size_t)':
../jsutil.h:120:43: warning: typedef 'js_static_assert58' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsgc.h:514:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  514 |     JS_STATIC_ASSERT(JSExternalString::TYPE_LIMIT == 8);
      |     ^~~~~~~~~~~~~~~~
../jsgc.h: In function 'intN js::gc::GetExternalStringGCType(JSExternalString*)':
../jsutil.h:120:43: warning: typedef 'js_static_assert59' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsgc.h:550:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  550 |     JS_STATIC_ASSERT(FINALIZE_STRING + 1 == FINALIZE_EXTERNAL_STRING);
      |     ^~~~~~~~~~~~~~~~
../jsinterp.h: In member function 'void JSStackFrame::staticAsserts()':
../jsutil.h:120:43: warning: typedef 'js_static_assert61' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsinterp.h:778:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  778 |         JS_STATIC_ASSERT(offsetof(JSStackFrame, rval_) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
../jsutil.h:120:43: warning: typedef 'js_static_assert62' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsinterp.h:779:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  779 |         JS_STATIC_ASSERT(sizeof(JSStackFrame) % sizeof(js::Value) == 0);
      |         ^~~~~~~~~~~~~~~~
In file included from ../nanojit/nanojit.h:377,
                 from ../jsbuiltins.h:45,
                 from js.cpp:62:
../nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::lsReg(nanojit::RegisterMask)':
../nanojit/RegAlloc.h:189:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::lsbSet32(mask) : nanojit::lsbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  189 |         Register r = { (sizeof(RegisterMask) == 4) ? lsbSet32(mask) : lsbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../nanojit/RegAlloc.h: In function 'nanojit::Register nanojit::msReg(nanojit::RegisterMask)':
../nanojit/RegAlloc.h:197:52: warning: narrowing conversion of '((sizeof (nanojit::RegisterMask) == 4) ? nanojit::msbSet32(mask) : nanojit::msbSet64(((uint64_t)mask)))' from 'int' to 'nanojit::Register' {aka 'unsigned int'} [-Wnarrowing]
  197 |         Register r = { (sizeof(RegisterMask) == 4) ? msbSet32(mask) : msbSet64(mask) };
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from js.cpp:56:
../jsstrinlines.h: In member function 'jsint js::StringBuffer::length() const':
../jsutil.h:120:43: warning: typedef 'js_static_assert65' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstrinlines.h:202:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  202 |     JS_STATIC_ASSERT(jsint(JSString::MAX_LENGTH) == JSString::MAX_LENGTH);
      |     ^~~~~~~~~~~~~~~~
../jsstrinlines.h: In static member function 'static JSFlatString* JSString::lookupStaticString(const jschar*, size_t)':
../jsutil.h:120:43: warning: typedef 'js_static_assert66' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsstrinlines.h:303:5: note: in expansion of macro 'JS_STATIC_ASSERT'
  303 |     JS_STATIC_ASSERT(INT_STRING_LIMIT <= 999);
      |     ^~~~~~~~~~~~~~~~
../jsscope.h: In member function 'void js::Shape::setParent(js::Shape*)':
../jsutil.h:120:43: warning: typedef 'js_static_assert67' locally defined but not used [-Wunused-local-typedefs]
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                                           ^~~~~~~~~~~~~~~~
../jsutil.h:117:41: note: in definition of macro 'JS_STATIC_ASSERT_GLUE1'
  117 |     #define JS_STATIC_ASSERT_GLUE1(x,y) x##y
      |                                         ^
../jsutil.h:120:21: note: in expansion of macro 'JS_STATIC_ASSERT_GLUE'
  120 |         typedef int JS_STATIC_ASSERT_GLUE(js_static_assert, __COUNTER__)[(cond) ? 1 : -1]
      |                     ^~~~~~~~~~~~~~~~~~~~~
../jsscope.h:431:9: note: in expansion of macro 'JS_STATIC_ASSERT'
  431 |         JS_STATIC_ASSERT(uint32(SHAPE_INVALID_SLOT) == ~uint32(0));
      |         ^~~~~~~~~~~~~~~~
In file included from js.cpp:97:
../jsobjinlines.h: In member function 'void JSObject::setArrayLength(uint32)':
../jsobjinlines.h:316:16: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  316 |     setPrivate((void*) length);
      |                ^~~~~~~~~~~~~~
x86_64-pc-linux-gnu-g++ -o js  -fno-rtti -fno-exceptions -Wall -Wpointer-arith -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual-dtor -Wcast-align -Wno-invalid-offsetof -Wno-variadic-macros -Werror=return-type -pedantic -Wno-long-long -march=native -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -fno-plt -fuse-linker-plugin -pipe -g0 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread -fno-strict-aliasing -pthread -pipe -DNDEBUG -DTRIMMED  js.o jsworkers.o   -lpthread -Wl,-O4,--hash-style=gnu,--sort-common,--as-needed,-z,relro,-z,now,-lgomp,-lpthread  -Wl,-rpath-link,/bin -Wl,-rpath-link,/usr/lib -L../dist/bin -L../dist/lib -lplds4 -lplc4 -lnspr4 -lpthread -ldl -lreadline ../libjs_static.a -ldl     
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 js ../dist/bin
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 js ..
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -D dist/sdk/lib
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -R -m 755 libmozjs185.so dist/sdk/lib
make[1]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
make tools
make[1]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
make[2]: Nothing to be done for 'tools'.
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config'
make[2]: Entering directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
make[2]: Nothing to be done for 'tools'.
make[2]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/shell'
make[1]: Leaving directory '/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src'
if test -d ./dist/bin ; then touch ./dist/bin/.purgecaches ; fi
>>> Source compiled.
 * Skipping make test/check due to ebuild restriction.
>>> Test phase [disabled because of RESTRICT=test]: dev-lang/spidermonkey-1.8.5-r9

>>> Install dev-lang/spidermonkey-1.8.5-r9 into /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image/
make -j12 DESTDIR=/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image/ install 
cat mozjs185.pc.in | sed \
-e "s|%prefix%|/usr|" \
-e "s|%includedir%|/usr/include|" \
-e "s|%libdir%|/usr/lib64|" \
-e 's|%MOZILLA_VERSION%||' \
> mozjs185.pc && chmod 644 mozjs185.pc
pkg_config_file: mozjs185.pc
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -t -m 644 mozjs185.pc /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/pkgconfig
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -t js-config.h jsautocfg.h /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/jsautokw.h js.msg jsanalyze.h jsapi.h jsarray.h jsarena.h jsatom.h jsbit.h jsbool.h jsclist.h jsclone.h jscntxt.h jscompat.h jsdate.h jsdbgapi.h jsdhash.h jsdtoa.h jsemit.h jsfun.h jsfriendapi.h jsgc.h jscell.h jsgcchunk.h jsgcstats.h jscompartment.h jshash.h jsinterp.h jsinttypes.h jsiter.h jslock.h jslong.h jsmath.h jsobj.h jsobjinlines.h json.h jsopcode.tbl jsopcode.h jsopcodeinlines.h jsotypes.h jsparse.h jsproxy.h jsprf.h jsprobes.h jspropertycache.h jspropertycacheinlines.h jspropertytree.h jsproto.tbl jsprvtd.h jspubtd.h jsreflect.h jsregexp.h jsscan.h jsscope.h jsscript.h jsscriptinlines.h jsstaticcheck.h jsstdint.h jsstr.h jstracer.h jshotloop.h jstypedarray.h jstypes.h jsutil.h jsvector.h jstl.h jshashtable.h jsversion.h jswrapper.h jsxdrapi.h jsxml.h jsval.h jsvalue.h prmjtime.h jsbuiltins.h ./nanojit/Assembler.h ./nanojit/Allocator.h ./nanojit/CodeAlloc.h ./nanojit/Containers.h ./nanojit/LIR.h ./nanojit/LIRopcode.tbl ./nanojit/avmplus.h ./nanojit/Fragmento.h ./nanojit/Native.h ./nanojit/NativeCommon.h ./nanojit/NativeX64.h ./nanojit/njconfig.h ./nanojit/njcpudetect.h ./nanojit/RegAlloc.h ./nanojit/nanojit.h ./nanojit/VMPI.h ./tracejit/Writer.h ./perf/jsperf.h /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/include/js
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -t js-config /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/bin
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -t libjs_static.a /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64
mv -f /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libjs_static.a /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libmozjs185-1.0.a
/tmp/portage/dev-lang/spidermonkey-1.8.5-r9/work/js-1.8.5/js/src/config/nsinstall -t libmozjs185.so /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64
mv -f /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libmozjs185.so /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libmozjs185.so.1.0.0
ln -s libmozjs185.so.1.0.0 /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libmozjs185.so.1.0
ln -s libmozjs185.so.1.0 /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image//usr/lib64/libmozjs185.so
>>> Completed installing dev-lang/spidermonkey-1.8.5-r9 into /tmp/portage/dev-lang/spidermonkey-1.8.5-r9/image/

 * Final size of build directory: 77088 KiB (75.2 MiB)
 * Final size of installed tree:   9824 KiB ( 9.5 MiB)

strip: x86_64-pc-linux-gnu-strip --strip-unneeded -N __gentoo_check_ldflags__ -R .comment -R .GCC.command.line -R .note.gnu.gold-version
   /usr/bin/js
   /usr/lib64/libmozjs185.so.1.0.0
./
./usr/
./usr/bin/
./usr/bin/js
./usr/bin/js-config
./usr/include/
./usr/include/js/
./usr/include/js/jsstaticcheck.h
./usr/include/js/jsatom.h
./usr/include/js/jsscope.h
./usr/include/js/nanojit.h
./usr/include/js/jsinttypes.h
./usr/include/js/jstl.h
./usr/include/js/jsval.h
./usr/include/js/Assembler.h
./usr/include/js/jsscript.h
./usr/include/js/jswrapper.h
./usr/include/js/jsxml.h
./usr/include/js/jsvector.h
./usr/include/js/jsbit.h
./usr/include/js/RegAlloc.h
./usr/include/js/jsproto.tbl
./usr/include/js/jsclone.h
./usr/include/js/jsdate.h
./usr/include/js/jsopcode.tbl
./usr/include/js/jsprvtd.h
./usr/include/js/njcpudetect.h
./usr/include/js/jsversion.h
./usr/include/js/jsmath.h
./usr/include/js/Native.h
./usr/include/js/jscompat.h
./usr/include/js/jsscan.h
./usr/include/js/jsemit.h
./usr/include/js/jsgc.h
./usr/include/js/jsinterp.h
./usr/include/js/jscell.h
./usr/include/js/jsarena.h
./usr/include/js/jsgcstats.h
./usr/include/js/Writer.h
./usr/include/js/jsautokw.h
./usr/include/js/jsperf.h
./usr/include/js/jsopcode.h
./usr/include/js/js.msg
./usr/include/js/VMPI.h
./usr/include/js/jsprf.h
./usr/include/js/jsprobes.h
./usr/include/js/LIR.h
./usr/include/js/jsdtoa.h
./usr/include/js/njconfig.h
./usr/include/js/jstypes.h
./usr/include/js/jsobj.h
./usr/include/js/jscompartment.h
./usr/include/js/jsscriptinlines.h
./usr/include/js/jsutil.h
./usr/include/js/jspropertytree.h
./usr/include/js/NativeX64.h
./usr/include/js/jslock.h
./usr/include/js/jsvalue.h
./usr/include/js/jsdbgapi.h
./usr/include/js/jshotloop.h
./usr/include/js/jstracer.h
./usr/include/js/LIRopcode.tbl
./usr/include/js/jsanalyze.h
./usr/include/js/jsfriendapi.h
./usr/include/js/jsobjinlines.h
./usr/include/js/jstypedarray.h
./usr/include/js/jscntxt.h
./usr/include/js/Containers.h
./usr/include/js/jsautocfg.h
./usr/include/js/js-config.h
./usr/include/js/jshash.h
./usr/include/js/jsstr.h
./usr/include/js/jsreflect.h
./usr/include/js/jsotypes.h
./usr/include/js/jsarray.h
./usr/include/js/jsparse.h
./usr/include/js/jsbool.h
./usr/include/js/jsclist.h
./usr/include/js/jsgcchunk.h
./usr/include/js/jspropertycacheinlines.h
./usr/include/js/Allocator.h
./usr/include/js/jsproxy.h
./usr/include/js/jsopcodeinlines.h
./usr/include/js/jspubtd.h
./usr/include/js/CodeAlloc.h
./usr/include/js/jsregexp.h
./usr/include/js/jsbuiltins.h
./usr/include/js/jsapi.h
./usr/include/js/jspropertycache.h
./usr/include/js/jsstdint.h
./usr/include/js/NativeCommon.h
./usr/include/js/json.h
./usr/include/js/jsdhash.h
./usr/include/js/jsxdrapi.h
./usr/include/js/prmjtime.h
./usr/include/js/jsiter.h
./usr/include/js/Fragmento.h
./usr/include/js/jslong.h
./usr/include/js/jshashtable.h
./usr/include/js/jsfun.h
./usr/include/js/avmplus.h
./usr/share/
./usr/share/doc/
./usr/share/doc/spidermonkey-1.8.5-r9/
./usr/share/doc/spidermonkey-1.8.5-r9/README.bz2
./usr/share/doc/spidermonkey-1.8.5-r9/html/
./usr/share/doc/spidermonkey-1.8.5-r9/html/README.html
./usr/lib64/
./usr/lib64/libmozjs185.so.1.0
./usr/lib64/libmozjs185.so.1.0.0
./usr/lib64/libmozjs185.so
./usr/lib64/pkgconfig/
./usr/lib64/pkgconfig/mozjs185.pc
>>> Done.
 * checking 100 files for package collisions
>>> Merging dev-lang/spidermonkey-1.8.5-r9 to /
 * removing unneeded *.la files
--- /usr/
--- /usr/lib64/
--- /usr/lib64/pkgconfig/
>>> /usr/lib64/pkgconfig/mozjs185.pc
>>> /usr/lib64/libmozjs185.so.1.0.0
>>> /usr/lib64/libmozjs185.so.1.0 -> libmozjs185.so.1.0.0
--- /usr/include/
>>> /usr/include/js/
>>> /usr/include/js/avmplus.h
>>> /usr/include/js/jsfun.h
>>> /usr/include/js/jshashtable.h
>>> /usr/include/js/jslong.h
>>> /usr/include/js/Fragmento.h
>>> /usr/include/js/jsiter.h
>>> /usr/include/js/prmjtime.h
>>> /usr/include/js/jsxdrapi.h
>>> /usr/include/js/jsdhash.h
>>> /usr/include/js/json.h
>>> /usr/include/js/NativeCommon.h
>>> /usr/include/js/jsstdint.h
>>> /usr/include/js/jspropertycache.h
>>> /usr/include/js/jsapi.h
>>> /usr/include/js/jsbuiltins.h
>>> /usr/include/js/jsregexp.h
>>> /usr/include/js/CodeAlloc.h
>>> /usr/include/js/jspubtd.h
>>> /usr/include/js/jsopcodeinlines.h
>>> /usr/include/js/jsproxy.h
>>> /usr/include/js/Allocator.h
>>> /usr/include/js/jspropertycacheinlines.h
>>> /usr/include/js/jsgcchunk.h
>>> /usr/include/js/jsclist.h
>>> /usr/include/js/jsbool.h
>>> /usr/include/js/jsparse.h
>>> /usr/include/js/jsarray.h
>>> /usr/include/js/jsotypes.h
>>> /usr/include/js/jsreflect.h
>>> /usr/include/js/jsstr.h
>>> /usr/include/js/jshash.h
>>> /usr/include/js/js-config.h
>>> /usr/include/js/jsautocfg.h
>>> /usr/include/js/Containers.h
>>> /usr/include/js/jscntxt.h
>>> /usr/include/js/jstypedarray.h
>>> /usr/include/js/jsobjinlines.h
>>> /usr/include/js/jsfriendapi.h
>>> /usr/include/js/jsanalyze.h
>>> /usr/include/js/LIRopcode.tbl
>>> /usr/include/js/jstracer.h
>>> /usr/include/js/jshotloop.h
>>> /usr/include/js/jsdbgapi.h
>>> /usr/include/js/jsvalue.h
>>> /usr/include/js/jslock.h
>>> /usr/include/js/NativeX64.h
>>> /usr/include/js/jspropertytree.h
>>> /usr/include/js/jsutil.h
>>> /usr/include/js/jsscriptinlines.h
>>> /usr/include/js/jscompartment.h
>>> /usr/include/js/jsobj.h
>>> /usr/include/js/jstypes.h
>>> /usr/include/js/njconfig.h
>>> /usr/include/js/jsdtoa.h
>>> /usr/include/js/LIR.h
>>> /usr/include/js/jsprobes.h
>>> /usr/include/js/jsprf.h
>>> /usr/include/js/VMPI.h
>>> /usr/include/js/js.msg
>>> /usr/include/js/jsopcode.h
>>> /usr/include/js/jsperf.h
>>> /usr/include/js/jsautokw.h
>>> /usr/include/js/Writer.h
>>> /usr/include/js/jsgcstats.h
>>> /usr/include/js/jsarena.h
>>> /usr/include/js/jscell.h
>>> /usr/include/js/jsinterp.h
>>> /usr/include/js/jsgc.h
>>> /usr/include/js/jsemit.h
>>> /usr/include/js/jsscan.h
>>> /usr/include/js/jscompat.h
>>> /usr/include/js/Native.h
>>> /usr/include/js/jsmath.h
>>> /usr/include/js/jsversion.h
>>> /usr/include/js/njcpudetect.h
>>> /usr/include/js/jsprvtd.h
>>> /usr/include/js/jsopcode.tbl
>>> /usr/include/js/jsdate.h
>>> /usr/include/js/jsclone.h
>>> /usr/include/js/jsproto.tbl
>>> /usr/include/js/RegAlloc.h
>>> /usr/include/js/jsbit.h
>>> /usr/include/js/jsvector.h
>>> /usr/include/js/jsxml.h
>>> /usr/include/js/jswrapper.h
>>> /usr/include/js/jsscript.h
>>> /usr/include/js/Assembler.h
>>> /usr/include/js/jsval.h
>>> /usr/include/js/jstl.h
>>> /usr/include/js/jsinttypes.h
>>> /usr/include/js/nanojit.h
>>> /usr/include/js/jsscope.h
>>> /usr/include/js/jsatom.h
>>> /usr/include/js/jsstaticcheck.h
--- /usr/bin/
>>> /usr/bin/js-config
>>> /usr/bin/js
>>> /usr/lib64/libmozjs185.so -> libmozjs185.so.1.0
>>> dev-lang/spidermonkey-1.8.5-r9 merged.
>>> Regenerating /etc/ld.so.cache...
