 * Package:    sys-config/ltoize-0.9.5
 * Repository: lto-overlay
 * Maintainer: lookatyouhacker@gmail.com
 * USE:        abi_x86_64 amd64 elibc_glibc kernel_linux override-flagomatic userland_GNU
 * FEATURES:   ccache network-sandbox preserve-libs userpriv
 * /etc/portage/package.cflags/ltoworkarounds.conf -> */*: *FLAGS+=-Wl,-O4 *FLAGS-=-Wl,-O1
 * FEATURES='assume-digests binpkg-docompress binpkg-dostrip binpkg-logs buildpkg ccache cgroup compress-index config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync multilib-strict network-sandbox news nodoc parallel-fetch preserve-libs qa-unresolved-soname-deps sfperms strict strict-keepdir unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersync xattr'
 * CFLAGS='-march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now'
 * CXXFLAGS='-march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now'
 * FFLAGS='-march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now'
 * FCFLAGS='-march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now'
 * F77FLAGS='-march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now'
 * LDFLAGS='-Wl,-O4,--sort-common,--as-needed,-z,norelro,-z,now -march=znver2 -Ofast -pipe -g0 -fgraphite-identity -floop-interchange -floop-nest-optimize -floop-parallelize-all -ftree-parallelize-loops=12 -ftree-vectorize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -flto=12 -fno-plt -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4'
 * MAKEOPTS='-j12 -l12'
 * gcc (Gentoo 11.0.0_pre9999 p1, commit 184c21bf1cd04a108ed9bd04635e7d57ac39f616) 11.0.0 20200611 (experimental)
 * g++ (Gentoo 11.0.0_pre9999 p1, commit 184c21bf1cd04a108ed9bd04635e7d57ac39f616) 11.0.0 20200611 (experimental)
 * GNU ld (Gentoo 2.34 p4) 2.34.0
 * Linux rescue 5.4.36 #1 SMP Thu Apr 30 04:38:28 UTC 2020 x86_64 AMD Ryzen 5 3600 6-Core Processor AuthenticAMD GNU/Linux
sys-config/ltoize: 14 seconds average for 4 merges
2020-05-16T18:33:29 >>> sys-config/ltoize: 6 seconds
2020-05-22T02:30:03 >>> sys-config/ltoize: 11 seconds
2020-05-31T00:02:13 >>> sys-config/ltoize: 22 seconds
2020-06-01T10:35:13 >>> sys-config/ltoize: 18 seconds
]0;emerge 12:16:43 2|146 ltoize 00:17 (root@rescue)>>> Unpacking source...
>>> Source unpacked in /tmp/portage/sys-config/ltoize-0.9.5/work
>>> Preparing source in /tmp/portage/sys-config/ltoize-0.9.5/work ...
>>> Source prepared.
>>> Configuring source in /tmp/portage/sys-config/ltoize-0.9.5/work ...
>>> Source configured.
>>> Compiling source in /tmp/portage/sys-config/ltoize-0.9.5/work ...
>>> Source compiled.
>>> Test phase [not enabled]: sys-config/ltoize-0.9.5

>>> Install sys-config/ltoize-0.9.5 into /tmp/portage/sys-config/ltoize-0.9.5/image
>>> Completed installing sys-config/ltoize-0.9.5 into /tmp/portage/sys-config/ltoize-0.9.5/image

 * Final size of build directory: 4 KiB
 * Final size of installed tree:  4 KiB

./
>>> Done.
 * checking 0 files for package collisions
>>> Merging sys-config/ltoize-0.9.5 to /
 * removing unneeded *.la files
 * Installing make.conf.lto.defines definitions for optimizations used in this overlay
 * Installing make.conf.lto default full optimization config for make.conf
 * Installing ltoworkarounds.conf package.cflags overrides
 * Installing bashrc.d hook symlink to apply LTO patches directly from lto-overlay
 * Installing bashrc.d hook to override strip-flags and replace-flags functions in flag-o-matic.  This is an experimental feature!
 * Installing bashrc.d hook symlink to override package libtool lt_cv_sys_global_symbol_pipe and lt_cv_sys_global_symbol_to_cdecl
--- /etc/
--- /etc/portage/
>>> /etc/portage/make.conf.lto.defines -> /var/db/repos/lto-overlay/sys-config/ltoize/files/make.conf.lto.defines
>>> /etc/portage/make.conf.lto -> /var/db/repos/lto-overlay/sys-config/ltoize/files/make.conf.lto
--- /etc/portage/package.cflags/
>>> /etc/portage/package.cflags/ltoworkarounds.conf -> /var/db/repos/lto-overlay/sys-config/ltoize/files/package.cflags/ltoworkarounds.conf
--- /etc/portage/bashrc.d/
>>> /etc/portage/bashrc.d/43-lto-no-common.sh -> /var/db/repos/lto-overlay/sys-config/ltoize/files/bashrc.d/43-lto-no-common.sh
>>> /etc/portage/bashrc.d/41-lto-patch.sh -> /var/db/repos/lto-overlay/sys-config/ltoize/files/bashrc.d/41-lto-patch.sh
>>> /etc/portage/bashrc.d/42-lto-flag-o-matic.sh -> /var/db/repos/lto-overlay/sys-config/ltoize/files/bashrc.d/42-lto-flag-o-matic.sh
>>> Safely unmerging already-installed instance...
>>> Original instance of package unmerged safely.
 * If you have not done so, you will need to modify your make.conf settings to enable LTO building on your system.
 * A symlink has been placed in /etc/portage/make.conf.lto that can be used as a basis for these modifications.
 * See README.md for more details.
 * lto-overlay and ltoize are part of a project to help find undefined behaviour in C and C++ programs through the use of aggressive compiler optimizations.
 * One of the aims of this project is also to improve the performance of linux distributions through these mechanisms as well.
 * Occasionally, you will experience breakage due to LTO problems.  These are documented in the README.md of this repository.
 * If you add an override for a particular package, please consider sending a pull request upstream so that other users of this repository can benefit.
 * You will require a complete system rebuild in order to gain the benefits of LTO system-wide.

 * Please consider reading the README.md at the root of this repository before attempting to rebuild your system to familiarize yourself with the goals of this project and potential pitfalls you could run into.

 * This is an experimental project and should not be used on a stable system in its current state.
>>> sys-config/ltoize-0.9.5 merged.
