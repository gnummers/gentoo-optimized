 * Package:    dev-lang/perl-5.30.3
 * Repository: gentoo
 * Maintainer: perl@gentoo.org
 * USE:        abi_x86_64 amd64 berkdb elibc_glibc gdbm kernel_linux userland_GNU
 * FEATURES:   ccache network-sandbox preserve-libs sandbox userpriv usersandbox
 * /etc/portage/package.cflags/ltoworkarounds.conf -> */*: *FLAGS+=-Wl,-O4 *FLAGS-=-Wl,-O1
 * /etc/portage/package.cflags/ltoworkarounds.conf -> dev-lang/perl: *FLAGS-=-flto*
 * FEATURES='assume-digests binpkg-docompress binpkg-dostrip binpkg-logs binpkg-multi-instance buildpkg ccache cgroup compress-index config-protect-if-modified distlocks fixlafiles ipc-sandbox merge-sync multilib-strict network-sandbox news nodoc parallel-fetch parallel-install pid-sandbox preserve-libs qa-unresolved-soname-deps sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr'
 * CFLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * CXXFLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * FFLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * FCFLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * F77FLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * LDFLAGS='-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s'
 * MAKEOPTS='-j12 -l12'
 * gcc () 11.0.0 20200601 (experimental)
 * g++ () 11.0.0 20200601 (experimental)
 * GNU ld (Gentoo 2.34 p4) 2.34.0
 * Linux ryzen.gnum.org 5.4.36 #1 SMP Thu Apr 30 04:38:28 UTC 2020 x86_64 AMD Ryzen 5 3600 6-Core Processor AuthenticAMD GNU/Linux
dev-lang/perl: 1 minute, 8 seconds average for 18 merges
2020-05-15T04:00:57 >>> dev-lang/perl: 3 minutes, 26 seconds
2020-05-19T23:49:38 >>> dev-lang/perl: 16 seconds
2020-05-20T01:15:39 >>> dev-lang/perl: 13 seconds
2020-05-20T07:35:17 >>> dev-lang/perl: 9 seconds
2020-05-20T13:11:54 >>> dev-lang/perl: 9 seconds
2020-05-20T13:50:53 >>> dev-lang/perl: 9 seconds
2020-05-20T14:24:54 >>> dev-lang/perl: 1 minute, 56 seconds
2020-05-21T06:37:32 >>> dev-lang/perl: 9 seconds
2020-05-21T12:41:30 >>> dev-lang/perl: 1 minute, 56 seconds
2020-05-23T13:55:10 >>> dev-lang/perl: 1 minute, 50 seconds
2020-05-25T00:18:07 >>> dev-lang/perl: 1 minute, 56 seconds
2020-05-25T22:40:46 >>> dev-lang/perl: 1 minute, 51 seconds
2020-05-26T14:11:17 >>> dev-lang/perl: 9 seconds
2020-05-27T01:49:21 >>> dev-lang/perl: 9 seconds
2020-05-27T03:53:28 >>> dev-lang/perl: 1 minute, 53 seconds
2020-05-29T02:17:13 >>> dev-lang/perl: 16 seconds
2020-05-30T14:59:59 >>> dev-lang/perl: 1 minute, 58 seconds
2020-06-01T04:39:54 >>> dev-lang/perl: 2 minutes
]0;emerge 13:23:21 1|41 perl 01:25 (root@ryzen.gnum.org)kemerge 13:23:21 1|41 perl 01:25 (root@ryzen.gnum.org)\>>> Unpacking source...
>>> Unpacking perl-5.30.3.tar.xz to /tmp/portage/dev-lang/perl-5.30.3/work
>>> Unpacking perl-5.30.0-patches-1.tar.xz to /tmp/portage/dev-lang/perl-5.30.3/work
>>> Unpacking perl-cross-1.3.2.tar.gz to /tmp/portage/dev-lang/perl-5.30.3/work
>>> Source unpacked in /tmp/portage/dev-lang/perl-5.30.3/work
>>> Preparing source in /tmp/portage/dev-lang/perl-5.30.3/work/perl-5.30.3 ...
 * Applying patches from perl-5.30.0-patches-1 ...
 *   gentoo/hints_hpux.diff ...
 [ ok ]
 *   gentoo/aix_soname.diff ...
 [ ok ]
 *   gentoo/EUMM-RUNPATH.diff ...
 [ ok ]
 *   gentoo/config_over.diff ...
 [ ok ]
 *   gentoo/opensolaris_headers.diff ...
 [ ok ]
 *   gentoo/patchlevel.diff ...
 [ ok ]
 *   gentoo/cleanup-paths.diff ...
 [ ok ]
 *   gentoo/enc2xs.diff ...
 [ ok ]
 *   gentoo/darwin-cc-ld.diff ...
 [ ok ]
 *   gentoo/cpan_definstalldirs.diff ...
 [ ok ]
 *   gentoo/interix.diff ...
 [ ok ]
 *   gentoo/create_libperl_soname.diff ...
 [ ok ]
 *   gentoo/mod_paths.diff ...
 [ ok ]
 *   gentoo/EUMM_perllocalpod.diff ...
 [ ok ]
 *   gentoo/drop_fstack_protector.diff ...
 [ ok ]
 *   gentoo/usr_local.diff ...
 [ ok ]
 *   gentoo/D-SHA-CFLAGS.diff ...
 [ ok ]
 *   gentoo/io_socket_ip_tests.diff ...
 [ ok ]
 *   gentoo/tests.diff ...
 [ ok ]
 *   gentoo/no-nsl-cl.patch ...
 [ ok ]
 *   gentoo/no_porting_tests.diff ...
 [ ok ]
 *   gentoo/pathtools_enoent.diff ...
 [ ok ]
 *   debian/cpan-missing-site-dirs.diff ...
 [ ok ]
 *   debian/makemaker-pasthru.diff ...
 [ ok ]
 *   fixes/memoize_storable_nstore.diff ...
 [ ok ]
 *   fixes/podman-pipe.diff ...
 [ ok ]
 *   fixes/respect_umask.diff ...
 [ ok ]
 *   fixes/net_smtp_docs.diff ...
 [ ok ]
 *   fixes/document_makemaker_ccflags.diff ...
 [ ok ]
 *   fixes/parallel-manisort.patch ...
 [ ok ]
>>> Source prepared.
>>> Configuring source in /tmp/portage/dev-lang/perl-5.30.3/work/perl-5.30.3 ...
 * This version of perl may partially support modules previously
 * installed in any of the following paths:
 *  /usr/lib64/perl5/vendor_perl/5.30.2/x86_64-linux
 *  /usr/lib64/perl5/5.30.2/x86_64-linux
 *  /usr/lib64/perl5/vendor_perl/5.30.2
 *  /usr/lib64/perl5/5.30.2
 * This is a temporary measure and you should aim to cleanup these paths
 * via world updates and perl-cleaner
First let's make sure your kit is complete.  Checking...
Locating common programs...
Checking compatibility between /bin/echo and builtin echo (if any)...
Symbolic links are supported.
Checking how to test for symbolic links...
You can test for symbolic links with 'test -h'.
Checking for cross-compile
No targethost for running compiler tests against defined, running locally
Good, your tr supports [:lower:] and [:upper:] to convert case.
Using [:upper:] and [:lower:] to convert case.
aix   	     atheos   	   convexos   	dec_osf       epix   	   gnu   	   hpux        irix_6       linux-android     mips   	    newsos4   	  os390        sco   	     sco_2_3_4     super-ux   	umips   	uwin   
aix_3        aux_3   	   cxux   	dos_djgpp     esix4   	   gnukfreebsd     i386        irix_6_0     linux   	      mirbsd        nonstopux     os400        sco_2_3_0     solaris_2     svr4   	unicos   	vos   
aix_4        bitrig   	   cygwin   	dragonfly     fps   	   gnuknetbsd      interix     irix_6_1     lynxos   	      mpc   	    openbsd   	  posix-bc     sco_2_3_1     stellar       svr5   	unicosmk   
altos486     bsdos   	   darwin   	dynix         freebsd      greenhills      irix_4      isc   	    midnightbsd       ncr_tower     opus   	  qnx          sco_2_3_2     sunos_4_0     ti1500   	unisysdynix   
amigaos      catamount     dcosx   	dynixptx      freemint     haiku   	   irix_5      isc_2        minix   	      netbsd        os2   	  riscos       sco_2_3_3     sunos_4_1     ultrix_4   	utekv   
Which of these apply, if any? [linux]  
Operating system name? [linux]  
Operating system version? [5.4.36]  
Installation prefix to use? (~name ok) [/usr]  
AFS does not seem to be running...
What installation prefix should I use for installing files? (~name ok) [/usr]  
Getting the current patchlevel...
Build a threading Perl? [n]  
Build Perl for multiplicity? [n]  
Use which C compiler? [x86_64-pc-linux-gnu-gcc]  
Checking for GNU cc in disguise and/or its version number...
Now, how can we feed standard input to your C preprocessor...
Directories to use for library searches? [/usr/local/lib64 /lib64 /usr/lib64 /usr/lib/gcc/x86_64-pc-linux-gnu/11.0.0/include-fixed /usr/lib /lib/../lib64 /usr/lib/../lib64 /lib]  
What is the file extension used for shared libraries? [so]  
Make shared library basenames unique? [n]  
Build Perl for SOCKS? [n]  
Try to use long doubles if available? [n]  
Checking for optional libraries...
What libraries to use? [-lgdbm -ldb -ldl -lm -lcrypt -lutil -lc -lgdbm_compat]  
What optimizer/debugger flag should be used?
[-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s]  
Any additional cc flags? [-fwrapv -fno-strict-aliasing -pipe]  
Let me guess what the preprocessor flags are...
Any additional ld flags (NOT including libraries)?
[-march=znver2 -pipe -g0 -O3 -fgraphite-identity -floop-nest-optimize -fdevirtualize-at-ltrans -fipa-pta -fno-semantic-interposition -fno-plt -fno-signed-zeros -fno-trapping-math -fassociative-math -freciprocal-math -fno-math-errno -ffinite-math-only -fno-rounding-math -fno-signaling-nans -fcx-limited-range -fexcess-precision=fast -falign-functions=32 -fno-stack-protector -fno-stack-clash-protection -fstack-check=no -fno-stack-check -fuse-linker-plugin -Wl,-O4 -Wl,--as-needed -Wl,-lpthread -Wl,-lgomp -Wl,-z,norelro -Wl,-z,now -Wl,--sort-common -s]  
Checking your choice of C compiler and flags for coherency...
Checking to see how big your integers are...
Checking to see if you have long long...
Checking to see how big your long longs are...
Computing filename position in cpp output for #include directives...
<inttypes.h> found.
Checking to see if you have int64_t...
Checking which 64-bit integer type we could use...
We could use 'long' for 64-bit integers.
Try to use maximal 64-bit support, if available? [y]  
Checking if your C library has broken 64-bit functions...
Checking for GNU C Library...
Shall I use /usr/bin/nm to extract C symbols from the libraries? [n]  
Checking for C++...
 * Failed to kill pid(s) in '/sys/fs/cgroup/portage/dev-lang:perl-5.30.3.aprgb9ib/cgroup.procs': 28537 28540 28544 28560 28624
sandbox:stop  caught signal 2 in pid 4
sandbox:stop  Send signal 4 more times to force SIGKILL
